
DIO_TEST.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000036be  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000008  00800060  000036be  00003732  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .stab         00002a48  00000000  00000000  0000373c  2**2
                  CONTENTS, READONLY, DEBUGGING
  3 .stabstr      00000cb9  00000000  00000000  00006184  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_aranges 00000140  00000000  00000000  00006e3d  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_pubnames 00000170  00000000  00000000  00006f7d  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001c49  00000000  00000000  000070ed  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000eeb  00000000  00000000  00008d36  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000dad  00000000  00000000  00009c21  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000160  00000000  00000000  0000a9d0  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000028d  00000000  00000000  0000ab30  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000007ce  00000000  00000000  0000adbd  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000050  00000000  00000000  0000b58b  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
       4:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
       8:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
       c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      10:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      14:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      18:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      1c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      20:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      24:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      28:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      2c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      30:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      34:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      38:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      3c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      40:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      44:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      48:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      4c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      50:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>

00000054 <__ctors_end>:
      54:	11 24       	eor	r1, r1
      56:	1f be       	out	0x3f, r1	; 63
      58:	cf e5       	ldi	r28, 0x5F	; 95
      5a:	d8 e0       	ldi	r29, 0x08	; 8
      5c:	de bf       	out	0x3e, r29	; 62
      5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
      60:	10 e0       	ldi	r17, 0x00	; 0
      62:	a0 e6       	ldi	r26, 0x60	; 96
      64:	b0 e0       	ldi	r27, 0x00	; 0
      66:	ee eb       	ldi	r30, 0xBE	; 190
      68:	f6 e3       	ldi	r31, 0x36	; 54
      6a:	02 c0       	rjmp	.+4      	; 0x70 <.do_copy_data_start>

0000006c <.do_copy_data_loop>:
      6c:	05 90       	lpm	r0, Z+
      6e:	0d 92       	st	X+, r0

00000070 <.do_copy_data_start>:
      70:	a8 36       	cpi	r26, 0x68	; 104
      72:	b1 07       	cpc	r27, r17
      74:	d9 f7       	brne	.-10     	; 0x6c <.do_copy_data_loop>
      76:	0e 94 f1 17 	call	0x2fe2	; 0x2fe2 <main>
      7a:	0c 94 5d 1b 	jmp	0x36ba	; 0x36ba <_exit>

0000007e <__bad_interrupt>:
      7e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000082 <__fixunssfsi>:
      82:	ef 92       	push	r14
      84:	ff 92       	push	r15
      86:	0f 93       	push	r16
      88:	1f 93       	push	r17
      8a:	7b 01       	movw	r14, r22
      8c:	8c 01       	movw	r16, r24
      8e:	20 e0       	ldi	r18, 0x00	; 0
      90:	30 e0       	ldi	r19, 0x00	; 0
      92:	40 e0       	ldi	r20, 0x00	; 0
      94:	5f e4       	ldi	r21, 0x4F	; 79
      96:	0e 94 41 03 	call	0x682	; 0x682 <__gesf2>
      9a:	88 23       	and	r24, r24
      9c:	8c f0       	brlt	.+34     	; 0xc0 <__fixunssfsi+0x3e>
      9e:	c8 01       	movw	r24, r16
      a0:	b7 01       	movw	r22, r14
      a2:	20 e0       	ldi	r18, 0x00	; 0
      a4:	30 e0       	ldi	r19, 0x00	; 0
      a6:	40 e0       	ldi	r20, 0x00	; 0
      a8:	5f e4       	ldi	r21, 0x4F	; 79
      aa:	0e 94 b9 01 	call	0x372	; 0x372 <__subsf3>
      ae:	0e 94 a1 03 	call	0x742	; 0x742 <__fixsfsi>
      b2:	9b 01       	movw	r18, r22
      b4:	ac 01       	movw	r20, r24
      b6:	20 50       	subi	r18, 0x00	; 0
      b8:	30 40       	sbci	r19, 0x00	; 0
      ba:	40 40       	sbci	r20, 0x00	; 0
      bc:	50 48       	sbci	r21, 0x80	; 128
      be:	06 c0       	rjmp	.+12     	; 0xcc <__fixunssfsi+0x4a>
      c0:	c8 01       	movw	r24, r16
      c2:	b7 01       	movw	r22, r14
      c4:	0e 94 a1 03 	call	0x742	; 0x742 <__fixsfsi>
      c8:	9b 01       	movw	r18, r22
      ca:	ac 01       	movw	r20, r24
      cc:	b9 01       	movw	r22, r18
      ce:	ca 01       	movw	r24, r20
      d0:	1f 91       	pop	r17
      d2:	0f 91       	pop	r16
      d4:	ff 90       	pop	r15
      d6:	ef 90       	pop	r14
      d8:	08 95       	ret

000000da <_fpadd_parts>:
      da:	a0 e0       	ldi	r26, 0x00	; 0
      dc:	b0 e0       	ldi	r27, 0x00	; 0
      de:	e3 e7       	ldi	r30, 0x73	; 115
      e0:	f0 e0       	ldi	r31, 0x00	; 0
      e2:	0c 94 26 1b 	jmp	0x364c	; 0x364c <__prologue_saves__>
      e6:	dc 01       	movw	r26, r24
      e8:	2b 01       	movw	r4, r22
      ea:	fa 01       	movw	r30, r20
      ec:	9c 91       	ld	r25, X
      ee:	92 30       	cpi	r25, 0x02	; 2
      f0:	08 f4       	brcc	.+2      	; 0xf4 <_fpadd_parts+0x1a>
      f2:	39 c1       	rjmp	.+626    	; 0x366 <_fpadd_parts+0x28c>
      f4:	eb 01       	movw	r28, r22
      f6:	88 81       	ld	r24, Y
      f8:	82 30       	cpi	r24, 0x02	; 2
      fa:	08 f4       	brcc	.+2      	; 0xfe <_fpadd_parts+0x24>
      fc:	33 c1       	rjmp	.+614    	; 0x364 <_fpadd_parts+0x28a>
      fe:	94 30       	cpi	r25, 0x04	; 4
     100:	69 f4       	brne	.+26     	; 0x11c <_fpadd_parts+0x42>
     102:	84 30       	cpi	r24, 0x04	; 4
     104:	09 f0       	breq	.+2      	; 0x108 <_fpadd_parts+0x2e>
     106:	2f c1       	rjmp	.+606    	; 0x366 <_fpadd_parts+0x28c>
     108:	11 96       	adiw	r26, 0x01	; 1
     10a:	9c 91       	ld	r25, X
     10c:	11 97       	sbiw	r26, 0x01	; 1
     10e:	89 81       	ldd	r24, Y+1	; 0x01
     110:	98 17       	cp	r25, r24
     112:	09 f4       	brne	.+2      	; 0x116 <_fpadd_parts+0x3c>
     114:	28 c1       	rjmp	.+592    	; 0x366 <_fpadd_parts+0x28c>
     116:	a0 e6       	ldi	r26, 0x60	; 96
     118:	b0 e0       	ldi	r27, 0x00	; 0
     11a:	25 c1       	rjmp	.+586    	; 0x366 <_fpadd_parts+0x28c>
     11c:	84 30       	cpi	r24, 0x04	; 4
     11e:	09 f4       	brne	.+2      	; 0x122 <_fpadd_parts+0x48>
     120:	21 c1       	rjmp	.+578    	; 0x364 <_fpadd_parts+0x28a>
     122:	82 30       	cpi	r24, 0x02	; 2
     124:	a9 f4       	brne	.+42     	; 0x150 <_fpadd_parts+0x76>
     126:	92 30       	cpi	r25, 0x02	; 2
     128:	09 f0       	breq	.+2      	; 0x12c <_fpadd_parts+0x52>
     12a:	1d c1       	rjmp	.+570    	; 0x366 <_fpadd_parts+0x28c>
     12c:	9a 01       	movw	r18, r20
     12e:	ad 01       	movw	r20, r26
     130:	88 e0       	ldi	r24, 0x08	; 8
     132:	ea 01       	movw	r28, r20
     134:	09 90       	ld	r0, Y+
     136:	ae 01       	movw	r20, r28
     138:	e9 01       	movw	r28, r18
     13a:	09 92       	st	Y+, r0
     13c:	9e 01       	movw	r18, r28
     13e:	81 50       	subi	r24, 0x01	; 1
     140:	c1 f7       	brne	.-16     	; 0x132 <_fpadd_parts+0x58>
     142:	e2 01       	movw	r28, r4
     144:	89 81       	ldd	r24, Y+1	; 0x01
     146:	11 96       	adiw	r26, 0x01	; 1
     148:	9c 91       	ld	r25, X
     14a:	89 23       	and	r24, r25
     14c:	81 83       	std	Z+1, r24	; 0x01
     14e:	08 c1       	rjmp	.+528    	; 0x360 <_fpadd_parts+0x286>
     150:	92 30       	cpi	r25, 0x02	; 2
     152:	09 f4       	brne	.+2      	; 0x156 <_fpadd_parts+0x7c>
     154:	07 c1       	rjmp	.+526    	; 0x364 <_fpadd_parts+0x28a>
     156:	12 96       	adiw	r26, 0x02	; 2
     158:	2d 90       	ld	r2, X+
     15a:	3c 90       	ld	r3, X
     15c:	13 97       	sbiw	r26, 0x03	; 3
     15e:	eb 01       	movw	r28, r22
     160:	8a 81       	ldd	r24, Y+2	; 0x02
     162:	9b 81       	ldd	r25, Y+3	; 0x03
     164:	14 96       	adiw	r26, 0x04	; 4
     166:	ad 90       	ld	r10, X+
     168:	bd 90       	ld	r11, X+
     16a:	cd 90       	ld	r12, X+
     16c:	dc 90       	ld	r13, X
     16e:	17 97       	sbiw	r26, 0x07	; 7
     170:	ec 80       	ldd	r14, Y+4	; 0x04
     172:	fd 80       	ldd	r15, Y+5	; 0x05
     174:	0e 81       	ldd	r16, Y+6	; 0x06
     176:	1f 81       	ldd	r17, Y+7	; 0x07
     178:	91 01       	movw	r18, r2
     17a:	28 1b       	sub	r18, r24
     17c:	39 0b       	sbc	r19, r25
     17e:	b9 01       	movw	r22, r18
     180:	37 ff       	sbrs	r19, 7
     182:	04 c0       	rjmp	.+8      	; 0x18c <_fpadd_parts+0xb2>
     184:	66 27       	eor	r22, r22
     186:	77 27       	eor	r23, r23
     188:	62 1b       	sub	r22, r18
     18a:	73 0b       	sbc	r23, r19
     18c:	60 32       	cpi	r22, 0x20	; 32
     18e:	71 05       	cpc	r23, r1
     190:	0c f0       	brlt	.+2      	; 0x194 <_fpadd_parts+0xba>
     192:	61 c0       	rjmp	.+194    	; 0x256 <_fpadd_parts+0x17c>
     194:	12 16       	cp	r1, r18
     196:	13 06       	cpc	r1, r19
     198:	6c f5       	brge	.+90     	; 0x1f4 <_fpadd_parts+0x11a>
     19a:	37 01       	movw	r6, r14
     19c:	48 01       	movw	r8, r16
     19e:	06 2e       	mov	r0, r22
     1a0:	04 c0       	rjmp	.+8      	; 0x1aa <_fpadd_parts+0xd0>
     1a2:	96 94       	lsr	r9
     1a4:	87 94       	ror	r8
     1a6:	77 94       	ror	r7
     1a8:	67 94       	ror	r6
     1aa:	0a 94       	dec	r0
     1ac:	d2 f7       	brpl	.-12     	; 0x1a2 <_fpadd_parts+0xc8>
     1ae:	21 e0       	ldi	r18, 0x01	; 1
     1b0:	30 e0       	ldi	r19, 0x00	; 0
     1b2:	40 e0       	ldi	r20, 0x00	; 0
     1b4:	50 e0       	ldi	r21, 0x00	; 0
     1b6:	04 c0       	rjmp	.+8      	; 0x1c0 <_fpadd_parts+0xe6>
     1b8:	22 0f       	add	r18, r18
     1ba:	33 1f       	adc	r19, r19
     1bc:	44 1f       	adc	r20, r20
     1be:	55 1f       	adc	r21, r21
     1c0:	6a 95       	dec	r22
     1c2:	d2 f7       	brpl	.-12     	; 0x1b8 <_fpadd_parts+0xde>
     1c4:	21 50       	subi	r18, 0x01	; 1
     1c6:	30 40       	sbci	r19, 0x00	; 0
     1c8:	40 40       	sbci	r20, 0x00	; 0
     1ca:	50 40       	sbci	r21, 0x00	; 0
     1cc:	2e 21       	and	r18, r14
     1ce:	3f 21       	and	r19, r15
     1d0:	40 23       	and	r20, r16
     1d2:	51 23       	and	r21, r17
     1d4:	21 15       	cp	r18, r1
     1d6:	31 05       	cpc	r19, r1
     1d8:	41 05       	cpc	r20, r1
     1da:	51 05       	cpc	r21, r1
     1dc:	21 f0       	breq	.+8      	; 0x1e6 <_fpadd_parts+0x10c>
     1de:	21 e0       	ldi	r18, 0x01	; 1
     1e0:	30 e0       	ldi	r19, 0x00	; 0
     1e2:	40 e0       	ldi	r20, 0x00	; 0
     1e4:	50 e0       	ldi	r21, 0x00	; 0
     1e6:	79 01       	movw	r14, r18
     1e8:	8a 01       	movw	r16, r20
     1ea:	e6 28       	or	r14, r6
     1ec:	f7 28       	or	r15, r7
     1ee:	08 29       	or	r16, r8
     1f0:	19 29       	or	r17, r9
     1f2:	3c c0       	rjmp	.+120    	; 0x26c <_fpadd_parts+0x192>
     1f4:	23 2b       	or	r18, r19
     1f6:	d1 f1       	breq	.+116    	; 0x26c <_fpadd_parts+0x192>
     1f8:	26 0e       	add	r2, r22
     1fa:	37 1e       	adc	r3, r23
     1fc:	35 01       	movw	r6, r10
     1fe:	46 01       	movw	r8, r12
     200:	06 2e       	mov	r0, r22
     202:	04 c0       	rjmp	.+8      	; 0x20c <_fpadd_parts+0x132>
     204:	96 94       	lsr	r9
     206:	87 94       	ror	r8
     208:	77 94       	ror	r7
     20a:	67 94       	ror	r6
     20c:	0a 94       	dec	r0
     20e:	d2 f7       	brpl	.-12     	; 0x204 <_fpadd_parts+0x12a>
     210:	21 e0       	ldi	r18, 0x01	; 1
     212:	30 e0       	ldi	r19, 0x00	; 0
     214:	40 e0       	ldi	r20, 0x00	; 0
     216:	50 e0       	ldi	r21, 0x00	; 0
     218:	04 c0       	rjmp	.+8      	; 0x222 <_fpadd_parts+0x148>
     21a:	22 0f       	add	r18, r18
     21c:	33 1f       	adc	r19, r19
     21e:	44 1f       	adc	r20, r20
     220:	55 1f       	adc	r21, r21
     222:	6a 95       	dec	r22
     224:	d2 f7       	brpl	.-12     	; 0x21a <_fpadd_parts+0x140>
     226:	21 50       	subi	r18, 0x01	; 1
     228:	30 40       	sbci	r19, 0x00	; 0
     22a:	40 40       	sbci	r20, 0x00	; 0
     22c:	50 40       	sbci	r21, 0x00	; 0
     22e:	2a 21       	and	r18, r10
     230:	3b 21       	and	r19, r11
     232:	4c 21       	and	r20, r12
     234:	5d 21       	and	r21, r13
     236:	21 15       	cp	r18, r1
     238:	31 05       	cpc	r19, r1
     23a:	41 05       	cpc	r20, r1
     23c:	51 05       	cpc	r21, r1
     23e:	21 f0       	breq	.+8      	; 0x248 <_fpadd_parts+0x16e>
     240:	21 e0       	ldi	r18, 0x01	; 1
     242:	30 e0       	ldi	r19, 0x00	; 0
     244:	40 e0       	ldi	r20, 0x00	; 0
     246:	50 e0       	ldi	r21, 0x00	; 0
     248:	59 01       	movw	r10, r18
     24a:	6a 01       	movw	r12, r20
     24c:	a6 28       	or	r10, r6
     24e:	b7 28       	or	r11, r7
     250:	c8 28       	or	r12, r8
     252:	d9 28       	or	r13, r9
     254:	0b c0       	rjmp	.+22     	; 0x26c <_fpadd_parts+0x192>
     256:	82 15       	cp	r24, r2
     258:	93 05       	cpc	r25, r3
     25a:	2c f0       	brlt	.+10     	; 0x266 <_fpadd_parts+0x18c>
     25c:	1c 01       	movw	r2, r24
     25e:	aa 24       	eor	r10, r10
     260:	bb 24       	eor	r11, r11
     262:	65 01       	movw	r12, r10
     264:	03 c0       	rjmp	.+6      	; 0x26c <_fpadd_parts+0x192>
     266:	ee 24       	eor	r14, r14
     268:	ff 24       	eor	r15, r15
     26a:	87 01       	movw	r16, r14
     26c:	11 96       	adiw	r26, 0x01	; 1
     26e:	9c 91       	ld	r25, X
     270:	d2 01       	movw	r26, r4
     272:	11 96       	adiw	r26, 0x01	; 1
     274:	8c 91       	ld	r24, X
     276:	98 17       	cp	r25, r24
     278:	09 f4       	brne	.+2      	; 0x27c <_fpadd_parts+0x1a2>
     27a:	45 c0       	rjmp	.+138    	; 0x306 <_fpadd_parts+0x22c>
     27c:	99 23       	and	r25, r25
     27e:	39 f0       	breq	.+14     	; 0x28e <_fpadd_parts+0x1b4>
     280:	a8 01       	movw	r20, r16
     282:	97 01       	movw	r18, r14
     284:	2a 19       	sub	r18, r10
     286:	3b 09       	sbc	r19, r11
     288:	4c 09       	sbc	r20, r12
     28a:	5d 09       	sbc	r21, r13
     28c:	06 c0       	rjmp	.+12     	; 0x29a <_fpadd_parts+0x1c0>
     28e:	a6 01       	movw	r20, r12
     290:	95 01       	movw	r18, r10
     292:	2e 19       	sub	r18, r14
     294:	3f 09       	sbc	r19, r15
     296:	40 0b       	sbc	r20, r16
     298:	51 0b       	sbc	r21, r17
     29a:	57 fd       	sbrc	r21, 7
     29c:	08 c0       	rjmp	.+16     	; 0x2ae <_fpadd_parts+0x1d4>
     29e:	11 82       	std	Z+1, r1	; 0x01
     2a0:	33 82       	std	Z+3, r3	; 0x03
     2a2:	22 82       	std	Z+2, r2	; 0x02
     2a4:	24 83       	std	Z+4, r18	; 0x04
     2a6:	35 83       	std	Z+5, r19	; 0x05
     2a8:	46 83       	std	Z+6, r20	; 0x06
     2aa:	57 83       	std	Z+7, r21	; 0x07
     2ac:	1d c0       	rjmp	.+58     	; 0x2e8 <_fpadd_parts+0x20e>
     2ae:	81 e0       	ldi	r24, 0x01	; 1
     2b0:	81 83       	std	Z+1, r24	; 0x01
     2b2:	33 82       	std	Z+3, r3	; 0x03
     2b4:	22 82       	std	Z+2, r2	; 0x02
     2b6:	88 27       	eor	r24, r24
     2b8:	99 27       	eor	r25, r25
     2ba:	dc 01       	movw	r26, r24
     2bc:	82 1b       	sub	r24, r18
     2be:	93 0b       	sbc	r25, r19
     2c0:	a4 0b       	sbc	r26, r20
     2c2:	b5 0b       	sbc	r27, r21
     2c4:	84 83       	std	Z+4, r24	; 0x04
     2c6:	95 83       	std	Z+5, r25	; 0x05
     2c8:	a6 83       	std	Z+6, r26	; 0x06
     2ca:	b7 83       	std	Z+7, r27	; 0x07
     2cc:	0d c0       	rjmp	.+26     	; 0x2e8 <_fpadd_parts+0x20e>
     2ce:	22 0f       	add	r18, r18
     2d0:	33 1f       	adc	r19, r19
     2d2:	44 1f       	adc	r20, r20
     2d4:	55 1f       	adc	r21, r21
     2d6:	24 83       	std	Z+4, r18	; 0x04
     2d8:	35 83       	std	Z+5, r19	; 0x05
     2da:	46 83       	std	Z+6, r20	; 0x06
     2dc:	57 83       	std	Z+7, r21	; 0x07
     2de:	82 81       	ldd	r24, Z+2	; 0x02
     2e0:	93 81       	ldd	r25, Z+3	; 0x03
     2e2:	01 97       	sbiw	r24, 0x01	; 1
     2e4:	93 83       	std	Z+3, r25	; 0x03
     2e6:	82 83       	std	Z+2, r24	; 0x02
     2e8:	24 81       	ldd	r18, Z+4	; 0x04
     2ea:	35 81       	ldd	r19, Z+5	; 0x05
     2ec:	46 81       	ldd	r20, Z+6	; 0x06
     2ee:	57 81       	ldd	r21, Z+7	; 0x07
     2f0:	da 01       	movw	r26, r20
     2f2:	c9 01       	movw	r24, r18
     2f4:	01 97       	sbiw	r24, 0x01	; 1
     2f6:	a1 09       	sbc	r26, r1
     2f8:	b1 09       	sbc	r27, r1
     2fa:	8f 5f       	subi	r24, 0xFF	; 255
     2fc:	9f 4f       	sbci	r25, 0xFF	; 255
     2fe:	af 4f       	sbci	r26, 0xFF	; 255
     300:	bf 43       	sbci	r27, 0x3F	; 63
     302:	28 f3       	brcs	.-54     	; 0x2ce <_fpadd_parts+0x1f4>
     304:	0b c0       	rjmp	.+22     	; 0x31c <_fpadd_parts+0x242>
     306:	91 83       	std	Z+1, r25	; 0x01
     308:	33 82       	std	Z+3, r3	; 0x03
     30a:	22 82       	std	Z+2, r2	; 0x02
     30c:	ea 0c       	add	r14, r10
     30e:	fb 1c       	adc	r15, r11
     310:	0c 1d       	adc	r16, r12
     312:	1d 1d       	adc	r17, r13
     314:	e4 82       	std	Z+4, r14	; 0x04
     316:	f5 82       	std	Z+5, r15	; 0x05
     318:	06 83       	std	Z+6, r16	; 0x06
     31a:	17 83       	std	Z+7, r17	; 0x07
     31c:	83 e0       	ldi	r24, 0x03	; 3
     31e:	80 83       	st	Z, r24
     320:	24 81       	ldd	r18, Z+4	; 0x04
     322:	35 81       	ldd	r19, Z+5	; 0x05
     324:	46 81       	ldd	r20, Z+6	; 0x06
     326:	57 81       	ldd	r21, Z+7	; 0x07
     328:	57 ff       	sbrs	r21, 7
     32a:	1a c0       	rjmp	.+52     	; 0x360 <_fpadd_parts+0x286>
     32c:	c9 01       	movw	r24, r18
     32e:	aa 27       	eor	r26, r26
     330:	97 fd       	sbrc	r25, 7
     332:	a0 95       	com	r26
     334:	ba 2f       	mov	r27, r26
     336:	81 70       	andi	r24, 0x01	; 1
     338:	90 70       	andi	r25, 0x00	; 0
     33a:	a0 70       	andi	r26, 0x00	; 0
     33c:	b0 70       	andi	r27, 0x00	; 0
     33e:	56 95       	lsr	r21
     340:	47 95       	ror	r20
     342:	37 95       	ror	r19
     344:	27 95       	ror	r18
     346:	82 2b       	or	r24, r18
     348:	93 2b       	or	r25, r19
     34a:	a4 2b       	or	r26, r20
     34c:	b5 2b       	or	r27, r21
     34e:	84 83       	std	Z+4, r24	; 0x04
     350:	95 83       	std	Z+5, r25	; 0x05
     352:	a6 83       	std	Z+6, r26	; 0x06
     354:	b7 83       	std	Z+7, r27	; 0x07
     356:	82 81       	ldd	r24, Z+2	; 0x02
     358:	93 81       	ldd	r25, Z+3	; 0x03
     35a:	01 96       	adiw	r24, 0x01	; 1
     35c:	93 83       	std	Z+3, r25	; 0x03
     35e:	82 83       	std	Z+2, r24	; 0x02
     360:	df 01       	movw	r26, r30
     362:	01 c0       	rjmp	.+2      	; 0x366 <_fpadd_parts+0x28c>
     364:	d2 01       	movw	r26, r4
     366:	cd 01       	movw	r24, r26
     368:	cd b7       	in	r28, 0x3d	; 61
     36a:	de b7       	in	r29, 0x3e	; 62
     36c:	e2 e1       	ldi	r30, 0x12	; 18
     36e:	0c 94 42 1b 	jmp	0x3684	; 0x3684 <__epilogue_restores__>

00000372 <__subsf3>:
     372:	a0 e2       	ldi	r26, 0x20	; 32
     374:	b0 e0       	ldi	r27, 0x00	; 0
     376:	ef eb       	ldi	r30, 0xBF	; 191
     378:	f1 e0       	ldi	r31, 0x01	; 1
     37a:	0c 94 32 1b 	jmp	0x3664	; 0x3664 <__prologue_saves__+0x18>
     37e:	69 83       	std	Y+1, r22	; 0x01
     380:	7a 83       	std	Y+2, r23	; 0x02
     382:	8b 83       	std	Y+3, r24	; 0x03
     384:	9c 83       	std	Y+4, r25	; 0x04
     386:	2d 83       	std	Y+5, r18	; 0x05
     388:	3e 83       	std	Y+6, r19	; 0x06
     38a:	4f 83       	std	Y+7, r20	; 0x07
     38c:	58 87       	std	Y+8, r21	; 0x08
     38e:	e9 e0       	ldi	r30, 0x09	; 9
     390:	ee 2e       	mov	r14, r30
     392:	f1 2c       	mov	r15, r1
     394:	ec 0e       	add	r14, r28
     396:	fd 1e       	adc	r15, r29
     398:	ce 01       	movw	r24, r28
     39a:	01 96       	adiw	r24, 0x01	; 1
     39c:	b7 01       	movw	r22, r14
     39e:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     3a2:	8e 01       	movw	r16, r28
     3a4:	0f 5e       	subi	r16, 0xEF	; 239
     3a6:	1f 4f       	sbci	r17, 0xFF	; 255
     3a8:	ce 01       	movw	r24, r28
     3aa:	05 96       	adiw	r24, 0x05	; 5
     3ac:	b8 01       	movw	r22, r16
     3ae:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     3b2:	8a 89       	ldd	r24, Y+18	; 0x12
     3b4:	91 e0       	ldi	r25, 0x01	; 1
     3b6:	89 27       	eor	r24, r25
     3b8:	8a 8b       	std	Y+18, r24	; 0x12
     3ba:	c7 01       	movw	r24, r14
     3bc:	b8 01       	movw	r22, r16
     3be:	ae 01       	movw	r20, r28
     3c0:	47 5e       	subi	r20, 0xE7	; 231
     3c2:	5f 4f       	sbci	r21, 0xFF	; 255
     3c4:	0e 94 6d 00 	call	0xda	; 0xda <_fpadd_parts>
     3c8:	0e 94 f5 03 	call	0x7ea	; 0x7ea <__pack_f>
     3cc:	a0 96       	adiw	r28, 0x20	; 32
     3ce:	e6 e0       	ldi	r30, 0x06	; 6
     3d0:	0c 94 4e 1b 	jmp	0x369c	; 0x369c <__epilogue_restores__+0x18>

000003d4 <__addsf3>:
     3d4:	a0 e2       	ldi	r26, 0x20	; 32
     3d6:	b0 e0       	ldi	r27, 0x00	; 0
     3d8:	e0 ef       	ldi	r30, 0xF0	; 240
     3da:	f1 e0       	ldi	r31, 0x01	; 1
     3dc:	0c 94 32 1b 	jmp	0x3664	; 0x3664 <__prologue_saves__+0x18>
     3e0:	69 83       	std	Y+1, r22	; 0x01
     3e2:	7a 83       	std	Y+2, r23	; 0x02
     3e4:	8b 83       	std	Y+3, r24	; 0x03
     3e6:	9c 83       	std	Y+4, r25	; 0x04
     3e8:	2d 83       	std	Y+5, r18	; 0x05
     3ea:	3e 83       	std	Y+6, r19	; 0x06
     3ec:	4f 83       	std	Y+7, r20	; 0x07
     3ee:	58 87       	std	Y+8, r21	; 0x08
     3f0:	f9 e0       	ldi	r31, 0x09	; 9
     3f2:	ef 2e       	mov	r14, r31
     3f4:	f1 2c       	mov	r15, r1
     3f6:	ec 0e       	add	r14, r28
     3f8:	fd 1e       	adc	r15, r29
     3fa:	ce 01       	movw	r24, r28
     3fc:	01 96       	adiw	r24, 0x01	; 1
     3fe:	b7 01       	movw	r22, r14
     400:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     404:	8e 01       	movw	r16, r28
     406:	0f 5e       	subi	r16, 0xEF	; 239
     408:	1f 4f       	sbci	r17, 0xFF	; 255
     40a:	ce 01       	movw	r24, r28
     40c:	05 96       	adiw	r24, 0x05	; 5
     40e:	b8 01       	movw	r22, r16
     410:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     414:	c7 01       	movw	r24, r14
     416:	b8 01       	movw	r22, r16
     418:	ae 01       	movw	r20, r28
     41a:	47 5e       	subi	r20, 0xE7	; 231
     41c:	5f 4f       	sbci	r21, 0xFF	; 255
     41e:	0e 94 6d 00 	call	0xda	; 0xda <_fpadd_parts>
     422:	0e 94 f5 03 	call	0x7ea	; 0x7ea <__pack_f>
     426:	a0 96       	adiw	r28, 0x20	; 32
     428:	e6 e0       	ldi	r30, 0x06	; 6
     42a:	0c 94 4e 1b 	jmp	0x369c	; 0x369c <__epilogue_restores__+0x18>

0000042e <__mulsf3>:
     42e:	a0 e2       	ldi	r26, 0x20	; 32
     430:	b0 e0       	ldi	r27, 0x00	; 0
     432:	ed e1       	ldi	r30, 0x1D	; 29
     434:	f2 e0       	ldi	r31, 0x02	; 2
     436:	0c 94 26 1b 	jmp	0x364c	; 0x364c <__prologue_saves__>
     43a:	69 83       	std	Y+1, r22	; 0x01
     43c:	7a 83       	std	Y+2, r23	; 0x02
     43e:	8b 83       	std	Y+3, r24	; 0x03
     440:	9c 83       	std	Y+4, r25	; 0x04
     442:	2d 83       	std	Y+5, r18	; 0x05
     444:	3e 83       	std	Y+6, r19	; 0x06
     446:	4f 83       	std	Y+7, r20	; 0x07
     448:	58 87       	std	Y+8, r21	; 0x08
     44a:	ce 01       	movw	r24, r28
     44c:	01 96       	adiw	r24, 0x01	; 1
     44e:	be 01       	movw	r22, r28
     450:	67 5f       	subi	r22, 0xF7	; 247
     452:	7f 4f       	sbci	r23, 0xFF	; 255
     454:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     458:	ce 01       	movw	r24, r28
     45a:	05 96       	adiw	r24, 0x05	; 5
     45c:	be 01       	movw	r22, r28
     45e:	6f 5e       	subi	r22, 0xEF	; 239
     460:	7f 4f       	sbci	r23, 0xFF	; 255
     462:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     466:	99 85       	ldd	r25, Y+9	; 0x09
     468:	92 30       	cpi	r25, 0x02	; 2
     46a:	88 f0       	brcs	.+34     	; 0x48e <__mulsf3+0x60>
     46c:	89 89       	ldd	r24, Y+17	; 0x11
     46e:	82 30       	cpi	r24, 0x02	; 2
     470:	c8 f0       	brcs	.+50     	; 0x4a4 <__mulsf3+0x76>
     472:	94 30       	cpi	r25, 0x04	; 4
     474:	19 f4       	brne	.+6      	; 0x47c <__mulsf3+0x4e>
     476:	82 30       	cpi	r24, 0x02	; 2
     478:	51 f4       	brne	.+20     	; 0x48e <__mulsf3+0x60>
     47a:	04 c0       	rjmp	.+8      	; 0x484 <__mulsf3+0x56>
     47c:	84 30       	cpi	r24, 0x04	; 4
     47e:	29 f4       	brne	.+10     	; 0x48a <__mulsf3+0x5c>
     480:	92 30       	cpi	r25, 0x02	; 2
     482:	81 f4       	brne	.+32     	; 0x4a4 <__mulsf3+0x76>
     484:	80 e6       	ldi	r24, 0x60	; 96
     486:	90 e0       	ldi	r25, 0x00	; 0
     488:	c6 c0       	rjmp	.+396    	; 0x616 <__mulsf3+0x1e8>
     48a:	92 30       	cpi	r25, 0x02	; 2
     48c:	49 f4       	brne	.+18     	; 0x4a0 <__mulsf3+0x72>
     48e:	20 e0       	ldi	r18, 0x00	; 0
     490:	9a 85       	ldd	r25, Y+10	; 0x0a
     492:	8a 89       	ldd	r24, Y+18	; 0x12
     494:	98 13       	cpse	r25, r24
     496:	21 e0       	ldi	r18, 0x01	; 1
     498:	2a 87       	std	Y+10, r18	; 0x0a
     49a:	ce 01       	movw	r24, r28
     49c:	09 96       	adiw	r24, 0x09	; 9
     49e:	bb c0       	rjmp	.+374    	; 0x616 <__mulsf3+0x1e8>
     4a0:	82 30       	cpi	r24, 0x02	; 2
     4a2:	49 f4       	brne	.+18     	; 0x4b6 <__mulsf3+0x88>
     4a4:	20 e0       	ldi	r18, 0x00	; 0
     4a6:	9a 85       	ldd	r25, Y+10	; 0x0a
     4a8:	8a 89       	ldd	r24, Y+18	; 0x12
     4aa:	98 13       	cpse	r25, r24
     4ac:	21 e0       	ldi	r18, 0x01	; 1
     4ae:	2a 8b       	std	Y+18, r18	; 0x12
     4b0:	ce 01       	movw	r24, r28
     4b2:	41 96       	adiw	r24, 0x11	; 17
     4b4:	b0 c0       	rjmp	.+352    	; 0x616 <__mulsf3+0x1e8>
     4b6:	2d 84       	ldd	r2, Y+13	; 0x0d
     4b8:	3e 84       	ldd	r3, Y+14	; 0x0e
     4ba:	4f 84       	ldd	r4, Y+15	; 0x0f
     4bc:	58 88       	ldd	r5, Y+16	; 0x10
     4be:	6d 88       	ldd	r6, Y+21	; 0x15
     4c0:	7e 88       	ldd	r7, Y+22	; 0x16
     4c2:	8f 88       	ldd	r8, Y+23	; 0x17
     4c4:	98 8c       	ldd	r9, Y+24	; 0x18
     4c6:	ee 24       	eor	r14, r14
     4c8:	ff 24       	eor	r15, r15
     4ca:	87 01       	movw	r16, r14
     4cc:	aa 24       	eor	r10, r10
     4ce:	bb 24       	eor	r11, r11
     4d0:	65 01       	movw	r12, r10
     4d2:	40 e0       	ldi	r20, 0x00	; 0
     4d4:	50 e0       	ldi	r21, 0x00	; 0
     4d6:	60 e0       	ldi	r22, 0x00	; 0
     4d8:	70 e0       	ldi	r23, 0x00	; 0
     4da:	e0 e0       	ldi	r30, 0x00	; 0
     4dc:	f0 e0       	ldi	r31, 0x00	; 0
     4de:	c1 01       	movw	r24, r2
     4e0:	81 70       	andi	r24, 0x01	; 1
     4e2:	90 70       	andi	r25, 0x00	; 0
     4e4:	89 2b       	or	r24, r25
     4e6:	e9 f0       	breq	.+58     	; 0x522 <__mulsf3+0xf4>
     4e8:	e6 0c       	add	r14, r6
     4ea:	f7 1c       	adc	r15, r7
     4ec:	08 1d       	adc	r16, r8
     4ee:	19 1d       	adc	r17, r9
     4f0:	9a 01       	movw	r18, r20
     4f2:	ab 01       	movw	r20, r22
     4f4:	2a 0d       	add	r18, r10
     4f6:	3b 1d       	adc	r19, r11
     4f8:	4c 1d       	adc	r20, r12
     4fa:	5d 1d       	adc	r21, r13
     4fc:	80 e0       	ldi	r24, 0x00	; 0
     4fe:	90 e0       	ldi	r25, 0x00	; 0
     500:	a0 e0       	ldi	r26, 0x00	; 0
     502:	b0 e0       	ldi	r27, 0x00	; 0
     504:	e6 14       	cp	r14, r6
     506:	f7 04       	cpc	r15, r7
     508:	08 05       	cpc	r16, r8
     50a:	19 05       	cpc	r17, r9
     50c:	20 f4       	brcc	.+8      	; 0x516 <__mulsf3+0xe8>
     50e:	81 e0       	ldi	r24, 0x01	; 1
     510:	90 e0       	ldi	r25, 0x00	; 0
     512:	a0 e0       	ldi	r26, 0x00	; 0
     514:	b0 e0       	ldi	r27, 0x00	; 0
     516:	ba 01       	movw	r22, r20
     518:	a9 01       	movw	r20, r18
     51a:	48 0f       	add	r20, r24
     51c:	59 1f       	adc	r21, r25
     51e:	6a 1f       	adc	r22, r26
     520:	7b 1f       	adc	r23, r27
     522:	aa 0c       	add	r10, r10
     524:	bb 1c       	adc	r11, r11
     526:	cc 1c       	adc	r12, r12
     528:	dd 1c       	adc	r13, r13
     52a:	97 fe       	sbrs	r9, 7
     52c:	08 c0       	rjmp	.+16     	; 0x53e <__mulsf3+0x110>
     52e:	81 e0       	ldi	r24, 0x01	; 1
     530:	90 e0       	ldi	r25, 0x00	; 0
     532:	a0 e0       	ldi	r26, 0x00	; 0
     534:	b0 e0       	ldi	r27, 0x00	; 0
     536:	a8 2a       	or	r10, r24
     538:	b9 2a       	or	r11, r25
     53a:	ca 2a       	or	r12, r26
     53c:	db 2a       	or	r13, r27
     53e:	31 96       	adiw	r30, 0x01	; 1
     540:	e0 32       	cpi	r30, 0x20	; 32
     542:	f1 05       	cpc	r31, r1
     544:	49 f0       	breq	.+18     	; 0x558 <__mulsf3+0x12a>
     546:	66 0c       	add	r6, r6
     548:	77 1c       	adc	r7, r7
     54a:	88 1c       	adc	r8, r8
     54c:	99 1c       	adc	r9, r9
     54e:	56 94       	lsr	r5
     550:	47 94       	ror	r4
     552:	37 94       	ror	r3
     554:	27 94       	ror	r2
     556:	c3 cf       	rjmp	.-122    	; 0x4de <__mulsf3+0xb0>
     558:	fa 85       	ldd	r31, Y+10	; 0x0a
     55a:	ea 89       	ldd	r30, Y+18	; 0x12
     55c:	2b 89       	ldd	r18, Y+19	; 0x13
     55e:	3c 89       	ldd	r19, Y+20	; 0x14
     560:	8b 85       	ldd	r24, Y+11	; 0x0b
     562:	9c 85       	ldd	r25, Y+12	; 0x0c
     564:	28 0f       	add	r18, r24
     566:	39 1f       	adc	r19, r25
     568:	2e 5f       	subi	r18, 0xFE	; 254
     56a:	3f 4f       	sbci	r19, 0xFF	; 255
     56c:	17 c0       	rjmp	.+46     	; 0x59c <__mulsf3+0x16e>
     56e:	ca 01       	movw	r24, r20
     570:	81 70       	andi	r24, 0x01	; 1
     572:	90 70       	andi	r25, 0x00	; 0
     574:	89 2b       	or	r24, r25
     576:	61 f0       	breq	.+24     	; 0x590 <__mulsf3+0x162>
     578:	16 95       	lsr	r17
     57a:	07 95       	ror	r16
     57c:	f7 94       	ror	r15
     57e:	e7 94       	ror	r14
     580:	80 e0       	ldi	r24, 0x00	; 0
     582:	90 e0       	ldi	r25, 0x00	; 0
     584:	a0 e0       	ldi	r26, 0x00	; 0
     586:	b0 e8       	ldi	r27, 0x80	; 128
     588:	e8 2a       	or	r14, r24
     58a:	f9 2a       	or	r15, r25
     58c:	0a 2b       	or	r16, r26
     58e:	1b 2b       	or	r17, r27
     590:	76 95       	lsr	r23
     592:	67 95       	ror	r22
     594:	57 95       	ror	r21
     596:	47 95       	ror	r20
     598:	2f 5f       	subi	r18, 0xFF	; 255
     59a:	3f 4f       	sbci	r19, 0xFF	; 255
     59c:	77 fd       	sbrc	r23, 7
     59e:	e7 cf       	rjmp	.-50     	; 0x56e <__mulsf3+0x140>
     5a0:	0c c0       	rjmp	.+24     	; 0x5ba <__mulsf3+0x18c>
     5a2:	44 0f       	add	r20, r20
     5a4:	55 1f       	adc	r21, r21
     5a6:	66 1f       	adc	r22, r22
     5a8:	77 1f       	adc	r23, r23
     5aa:	17 fd       	sbrc	r17, 7
     5ac:	41 60       	ori	r20, 0x01	; 1
     5ae:	ee 0c       	add	r14, r14
     5b0:	ff 1c       	adc	r15, r15
     5b2:	00 1f       	adc	r16, r16
     5b4:	11 1f       	adc	r17, r17
     5b6:	21 50       	subi	r18, 0x01	; 1
     5b8:	30 40       	sbci	r19, 0x00	; 0
     5ba:	40 30       	cpi	r20, 0x00	; 0
     5bc:	90 e0       	ldi	r25, 0x00	; 0
     5be:	59 07       	cpc	r21, r25
     5c0:	90 e0       	ldi	r25, 0x00	; 0
     5c2:	69 07       	cpc	r22, r25
     5c4:	90 e4       	ldi	r25, 0x40	; 64
     5c6:	79 07       	cpc	r23, r25
     5c8:	60 f3       	brcs	.-40     	; 0x5a2 <__mulsf3+0x174>
     5ca:	2b 8f       	std	Y+27, r18	; 0x1b
     5cc:	3c 8f       	std	Y+28, r19	; 0x1c
     5ce:	db 01       	movw	r26, r22
     5d0:	ca 01       	movw	r24, r20
     5d2:	8f 77       	andi	r24, 0x7F	; 127
     5d4:	90 70       	andi	r25, 0x00	; 0
     5d6:	a0 70       	andi	r26, 0x00	; 0
     5d8:	b0 70       	andi	r27, 0x00	; 0
     5da:	80 34       	cpi	r24, 0x40	; 64
     5dc:	91 05       	cpc	r25, r1
     5de:	a1 05       	cpc	r26, r1
     5e0:	b1 05       	cpc	r27, r1
     5e2:	61 f4       	brne	.+24     	; 0x5fc <__mulsf3+0x1ce>
     5e4:	47 fd       	sbrc	r20, 7
     5e6:	0a c0       	rjmp	.+20     	; 0x5fc <__mulsf3+0x1ce>
     5e8:	e1 14       	cp	r14, r1
     5ea:	f1 04       	cpc	r15, r1
     5ec:	01 05       	cpc	r16, r1
     5ee:	11 05       	cpc	r17, r1
     5f0:	29 f0       	breq	.+10     	; 0x5fc <__mulsf3+0x1ce>
     5f2:	40 5c       	subi	r20, 0xC0	; 192
     5f4:	5f 4f       	sbci	r21, 0xFF	; 255
     5f6:	6f 4f       	sbci	r22, 0xFF	; 255
     5f8:	7f 4f       	sbci	r23, 0xFF	; 255
     5fa:	40 78       	andi	r20, 0x80	; 128
     5fc:	1a 8e       	std	Y+26, r1	; 0x1a
     5fe:	fe 17       	cp	r31, r30
     600:	11 f0       	breq	.+4      	; 0x606 <__mulsf3+0x1d8>
     602:	81 e0       	ldi	r24, 0x01	; 1
     604:	8a 8f       	std	Y+26, r24	; 0x1a
     606:	4d 8f       	std	Y+29, r20	; 0x1d
     608:	5e 8f       	std	Y+30, r21	; 0x1e
     60a:	6f 8f       	std	Y+31, r22	; 0x1f
     60c:	78 a3       	std	Y+32, r23	; 0x20
     60e:	83 e0       	ldi	r24, 0x03	; 3
     610:	89 8f       	std	Y+25, r24	; 0x19
     612:	ce 01       	movw	r24, r28
     614:	49 96       	adiw	r24, 0x19	; 25
     616:	0e 94 f5 03 	call	0x7ea	; 0x7ea <__pack_f>
     61a:	a0 96       	adiw	r28, 0x20	; 32
     61c:	e2 e1       	ldi	r30, 0x12	; 18
     61e:	0c 94 42 1b 	jmp	0x3684	; 0x3684 <__epilogue_restores__>

00000622 <__gtsf2>:
     622:	a8 e1       	ldi	r26, 0x18	; 24
     624:	b0 e0       	ldi	r27, 0x00	; 0
     626:	e7 e1       	ldi	r30, 0x17	; 23
     628:	f3 e0       	ldi	r31, 0x03	; 3
     62a:	0c 94 32 1b 	jmp	0x3664	; 0x3664 <__prologue_saves__+0x18>
     62e:	69 83       	std	Y+1, r22	; 0x01
     630:	7a 83       	std	Y+2, r23	; 0x02
     632:	8b 83       	std	Y+3, r24	; 0x03
     634:	9c 83       	std	Y+4, r25	; 0x04
     636:	2d 83       	std	Y+5, r18	; 0x05
     638:	3e 83       	std	Y+6, r19	; 0x06
     63a:	4f 83       	std	Y+7, r20	; 0x07
     63c:	58 87       	std	Y+8, r21	; 0x08
     63e:	89 e0       	ldi	r24, 0x09	; 9
     640:	e8 2e       	mov	r14, r24
     642:	f1 2c       	mov	r15, r1
     644:	ec 0e       	add	r14, r28
     646:	fd 1e       	adc	r15, r29
     648:	ce 01       	movw	r24, r28
     64a:	01 96       	adiw	r24, 0x01	; 1
     64c:	b7 01       	movw	r22, r14
     64e:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     652:	8e 01       	movw	r16, r28
     654:	0f 5e       	subi	r16, 0xEF	; 239
     656:	1f 4f       	sbci	r17, 0xFF	; 255
     658:	ce 01       	movw	r24, r28
     65a:	05 96       	adiw	r24, 0x05	; 5
     65c:	b8 01       	movw	r22, r16
     65e:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     662:	89 85       	ldd	r24, Y+9	; 0x09
     664:	82 30       	cpi	r24, 0x02	; 2
     666:	40 f0       	brcs	.+16     	; 0x678 <__gtsf2+0x56>
     668:	89 89       	ldd	r24, Y+17	; 0x11
     66a:	82 30       	cpi	r24, 0x02	; 2
     66c:	28 f0       	brcs	.+10     	; 0x678 <__gtsf2+0x56>
     66e:	c7 01       	movw	r24, r14
     670:	b8 01       	movw	r22, r16
     672:	0e 94 42 05 	call	0xa84	; 0xa84 <__fpcmp_parts_f>
     676:	01 c0       	rjmp	.+2      	; 0x67a <__gtsf2+0x58>
     678:	8f ef       	ldi	r24, 0xFF	; 255
     67a:	68 96       	adiw	r28, 0x18	; 24
     67c:	e6 e0       	ldi	r30, 0x06	; 6
     67e:	0c 94 4e 1b 	jmp	0x369c	; 0x369c <__epilogue_restores__+0x18>

00000682 <__gesf2>:
     682:	a8 e1       	ldi	r26, 0x18	; 24
     684:	b0 e0       	ldi	r27, 0x00	; 0
     686:	e7 e4       	ldi	r30, 0x47	; 71
     688:	f3 e0       	ldi	r31, 0x03	; 3
     68a:	0c 94 32 1b 	jmp	0x3664	; 0x3664 <__prologue_saves__+0x18>
     68e:	69 83       	std	Y+1, r22	; 0x01
     690:	7a 83       	std	Y+2, r23	; 0x02
     692:	8b 83       	std	Y+3, r24	; 0x03
     694:	9c 83       	std	Y+4, r25	; 0x04
     696:	2d 83       	std	Y+5, r18	; 0x05
     698:	3e 83       	std	Y+6, r19	; 0x06
     69a:	4f 83       	std	Y+7, r20	; 0x07
     69c:	58 87       	std	Y+8, r21	; 0x08
     69e:	89 e0       	ldi	r24, 0x09	; 9
     6a0:	e8 2e       	mov	r14, r24
     6a2:	f1 2c       	mov	r15, r1
     6a4:	ec 0e       	add	r14, r28
     6a6:	fd 1e       	adc	r15, r29
     6a8:	ce 01       	movw	r24, r28
     6aa:	01 96       	adiw	r24, 0x01	; 1
     6ac:	b7 01       	movw	r22, r14
     6ae:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     6b2:	8e 01       	movw	r16, r28
     6b4:	0f 5e       	subi	r16, 0xEF	; 239
     6b6:	1f 4f       	sbci	r17, 0xFF	; 255
     6b8:	ce 01       	movw	r24, r28
     6ba:	05 96       	adiw	r24, 0x05	; 5
     6bc:	b8 01       	movw	r22, r16
     6be:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     6c2:	89 85       	ldd	r24, Y+9	; 0x09
     6c4:	82 30       	cpi	r24, 0x02	; 2
     6c6:	40 f0       	brcs	.+16     	; 0x6d8 <__gesf2+0x56>
     6c8:	89 89       	ldd	r24, Y+17	; 0x11
     6ca:	82 30       	cpi	r24, 0x02	; 2
     6cc:	28 f0       	brcs	.+10     	; 0x6d8 <__gesf2+0x56>
     6ce:	c7 01       	movw	r24, r14
     6d0:	b8 01       	movw	r22, r16
     6d2:	0e 94 42 05 	call	0xa84	; 0xa84 <__fpcmp_parts_f>
     6d6:	01 c0       	rjmp	.+2      	; 0x6da <__gesf2+0x58>
     6d8:	8f ef       	ldi	r24, 0xFF	; 255
     6da:	68 96       	adiw	r28, 0x18	; 24
     6dc:	e6 e0       	ldi	r30, 0x06	; 6
     6de:	0c 94 4e 1b 	jmp	0x369c	; 0x369c <__epilogue_restores__+0x18>

000006e2 <__ltsf2>:
     6e2:	a8 e1       	ldi	r26, 0x18	; 24
     6e4:	b0 e0       	ldi	r27, 0x00	; 0
     6e6:	e7 e7       	ldi	r30, 0x77	; 119
     6e8:	f3 e0       	ldi	r31, 0x03	; 3
     6ea:	0c 94 32 1b 	jmp	0x3664	; 0x3664 <__prologue_saves__+0x18>
     6ee:	69 83       	std	Y+1, r22	; 0x01
     6f0:	7a 83       	std	Y+2, r23	; 0x02
     6f2:	8b 83       	std	Y+3, r24	; 0x03
     6f4:	9c 83       	std	Y+4, r25	; 0x04
     6f6:	2d 83       	std	Y+5, r18	; 0x05
     6f8:	3e 83       	std	Y+6, r19	; 0x06
     6fa:	4f 83       	std	Y+7, r20	; 0x07
     6fc:	58 87       	std	Y+8, r21	; 0x08
     6fe:	89 e0       	ldi	r24, 0x09	; 9
     700:	e8 2e       	mov	r14, r24
     702:	f1 2c       	mov	r15, r1
     704:	ec 0e       	add	r14, r28
     706:	fd 1e       	adc	r15, r29
     708:	ce 01       	movw	r24, r28
     70a:	01 96       	adiw	r24, 0x01	; 1
     70c:	b7 01       	movw	r22, r14
     70e:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     712:	8e 01       	movw	r16, r28
     714:	0f 5e       	subi	r16, 0xEF	; 239
     716:	1f 4f       	sbci	r17, 0xFF	; 255
     718:	ce 01       	movw	r24, r28
     71a:	05 96       	adiw	r24, 0x05	; 5
     71c:	b8 01       	movw	r22, r16
     71e:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     722:	89 85       	ldd	r24, Y+9	; 0x09
     724:	82 30       	cpi	r24, 0x02	; 2
     726:	40 f0       	brcs	.+16     	; 0x738 <__ltsf2+0x56>
     728:	89 89       	ldd	r24, Y+17	; 0x11
     72a:	82 30       	cpi	r24, 0x02	; 2
     72c:	28 f0       	brcs	.+10     	; 0x738 <__ltsf2+0x56>
     72e:	c7 01       	movw	r24, r14
     730:	b8 01       	movw	r22, r16
     732:	0e 94 42 05 	call	0xa84	; 0xa84 <__fpcmp_parts_f>
     736:	01 c0       	rjmp	.+2      	; 0x73a <__ltsf2+0x58>
     738:	81 e0       	ldi	r24, 0x01	; 1
     73a:	68 96       	adiw	r28, 0x18	; 24
     73c:	e6 e0       	ldi	r30, 0x06	; 6
     73e:	0c 94 4e 1b 	jmp	0x369c	; 0x369c <__epilogue_restores__+0x18>

00000742 <__fixsfsi>:
     742:	ac e0       	ldi	r26, 0x0C	; 12
     744:	b0 e0       	ldi	r27, 0x00	; 0
     746:	e7 ea       	ldi	r30, 0xA7	; 167
     748:	f3 e0       	ldi	r31, 0x03	; 3
     74a:	0c 94 36 1b 	jmp	0x366c	; 0x366c <__prologue_saves__+0x20>
     74e:	69 83       	std	Y+1, r22	; 0x01
     750:	7a 83       	std	Y+2, r23	; 0x02
     752:	8b 83       	std	Y+3, r24	; 0x03
     754:	9c 83       	std	Y+4, r25	; 0x04
     756:	ce 01       	movw	r24, r28
     758:	01 96       	adiw	r24, 0x01	; 1
     75a:	be 01       	movw	r22, r28
     75c:	6b 5f       	subi	r22, 0xFB	; 251
     75e:	7f 4f       	sbci	r23, 0xFF	; 255
     760:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     764:	8d 81       	ldd	r24, Y+5	; 0x05
     766:	82 30       	cpi	r24, 0x02	; 2
     768:	61 f1       	breq	.+88     	; 0x7c2 <__fixsfsi+0x80>
     76a:	82 30       	cpi	r24, 0x02	; 2
     76c:	50 f1       	brcs	.+84     	; 0x7c2 <__fixsfsi+0x80>
     76e:	84 30       	cpi	r24, 0x04	; 4
     770:	21 f4       	brne	.+8      	; 0x77a <__fixsfsi+0x38>
     772:	8e 81       	ldd	r24, Y+6	; 0x06
     774:	88 23       	and	r24, r24
     776:	51 f1       	breq	.+84     	; 0x7cc <__fixsfsi+0x8a>
     778:	2e c0       	rjmp	.+92     	; 0x7d6 <__fixsfsi+0x94>
     77a:	2f 81       	ldd	r18, Y+7	; 0x07
     77c:	38 85       	ldd	r19, Y+8	; 0x08
     77e:	37 fd       	sbrc	r19, 7
     780:	20 c0       	rjmp	.+64     	; 0x7c2 <__fixsfsi+0x80>
     782:	6e 81       	ldd	r22, Y+6	; 0x06
     784:	2f 31       	cpi	r18, 0x1F	; 31
     786:	31 05       	cpc	r19, r1
     788:	1c f0       	brlt	.+6      	; 0x790 <__fixsfsi+0x4e>
     78a:	66 23       	and	r22, r22
     78c:	f9 f0       	breq	.+62     	; 0x7cc <__fixsfsi+0x8a>
     78e:	23 c0       	rjmp	.+70     	; 0x7d6 <__fixsfsi+0x94>
     790:	8e e1       	ldi	r24, 0x1E	; 30
     792:	90 e0       	ldi	r25, 0x00	; 0
     794:	82 1b       	sub	r24, r18
     796:	93 0b       	sbc	r25, r19
     798:	29 85       	ldd	r18, Y+9	; 0x09
     79a:	3a 85       	ldd	r19, Y+10	; 0x0a
     79c:	4b 85       	ldd	r20, Y+11	; 0x0b
     79e:	5c 85       	ldd	r21, Y+12	; 0x0c
     7a0:	04 c0       	rjmp	.+8      	; 0x7aa <__fixsfsi+0x68>
     7a2:	56 95       	lsr	r21
     7a4:	47 95       	ror	r20
     7a6:	37 95       	ror	r19
     7a8:	27 95       	ror	r18
     7aa:	8a 95       	dec	r24
     7ac:	d2 f7       	brpl	.-12     	; 0x7a2 <__fixsfsi+0x60>
     7ae:	66 23       	and	r22, r22
     7b0:	b1 f0       	breq	.+44     	; 0x7de <__fixsfsi+0x9c>
     7b2:	50 95       	com	r21
     7b4:	40 95       	com	r20
     7b6:	30 95       	com	r19
     7b8:	21 95       	neg	r18
     7ba:	3f 4f       	sbci	r19, 0xFF	; 255
     7bc:	4f 4f       	sbci	r20, 0xFF	; 255
     7be:	5f 4f       	sbci	r21, 0xFF	; 255
     7c0:	0e c0       	rjmp	.+28     	; 0x7de <__fixsfsi+0x9c>
     7c2:	20 e0       	ldi	r18, 0x00	; 0
     7c4:	30 e0       	ldi	r19, 0x00	; 0
     7c6:	40 e0       	ldi	r20, 0x00	; 0
     7c8:	50 e0       	ldi	r21, 0x00	; 0
     7ca:	09 c0       	rjmp	.+18     	; 0x7de <__fixsfsi+0x9c>
     7cc:	2f ef       	ldi	r18, 0xFF	; 255
     7ce:	3f ef       	ldi	r19, 0xFF	; 255
     7d0:	4f ef       	ldi	r20, 0xFF	; 255
     7d2:	5f e7       	ldi	r21, 0x7F	; 127
     7d4:	04 c0       	rjmp	.+8      	; 0x7de <__fixsfsi+0x9c>
     7d6:	20 e0       	ldi	r18, 0x00	; 0
     7d8:	30 e0       	ldi	r19, 0x00	; 0
     7da:	40 e0       	ldi	r20, 0x00	; 0
     7dc:	50 e8       	ldi	r21, 0x80	; 128
     7de:	b9 01       	movw	r22, r18
     7e0:	ca 01       	movw	r24, r20
     7e2:	2c 96       	adiw	r28, 0x0c	; 12
     7e4:	e2 e0       	ldi	r30, 0x02	; 2
     7e6:	0c 94 52 1b 	jmp	0x36a4	; 0x36a4 <__epilogue_restores__+0x20>

000007ea <__pack_f>:
     7ea:	df 92       	push	r13
     7ec:	ef 92       	push	r14
     7ee:	ff 92       	push	r15
     7f0:	0f 93       	push	r16
     7f2:	1f 93       	push	r17
     7f4:	fc 01       	movw	r30, r24
     7f6:	e4 80       	ldd	r14, Z+4	; 0x04
     7f8:	f5 80       	ldd	r15, Z+5	; 0x05
     7fa:	06 81       	ldd	r16, Z+6	; 0x06
     7fc:	17 81       	ldd	r17, Z+7	; 0x07
     7fe:	d1 80       	ldd	r13, Z+1	; 0x01
     800:	80 81       	ld	r24, Z
     802:	82 30       	cpi	r24, 0x02	; 2
     804:	48 f4       	brcc	.+18     	; 0x818 <__pack_f+0x2e>
     806:	80 e0       	ldi	r24, 0x00	; 0
     808:	90 e0       	ldi	r25, 0x00	; 0
     80a:	a0 e1       	ldi	r26, 0x10	; 16
     80c:	b0 e0       	ldi	r27, 0x00	; 0
     80e:	e8 2a       	or	r14, r24
     810:	f9 2a       	or	r15, r25
     812:	0a 2b       	or	r16, r26
     814:	1b 2b       	or	r17, r27
     816:	a5 c0       	rjmp	.+330    	; 0x962 <__stack+0x103>
     818:	84 30       	cpi	r24, 0x04	; 4
     81a:	09 f4       	brne	.+2      	; 0x81e <__pack_f+0x34>
     81c:	9f c0       	rjmp	.+318    	; 0x95c <__stack+0xfd>
     81e:	82 30       	cpi	r24, 0x02	; 2
     820:	21 f4       	brne	.+8      	; 0x82a <__pack_f+0x40>
     822:	ee 24       	eor	r14, r14
     824:	ff 24       	eor	r15, r15
     826:	87 01       	movw	r16, r14
     828:	05 c0       	rjmp	.+10     	; 0x834 <__pack_f+0x4a>
     82a:	e1 14       	cp	r14, r1
     82c:	f1 04       	cpc	r15, r1
     82e:	01 05       	cpc	r16, r1
     830:	11 05       	cpc	r17, r1
     832:	19 f4       	brne	.+6      	; 0x83a <__pack_f+0x50>
     834:	e0 e0       	ldi	r30, 0x00	; 0
     836:	f0 e0       	ldi	r31, 0x00	; 0
     838:	96 c0       	rjmp	.+300    	; 0x966 <__stack+0x107>
     83a:	62 81       	ldd	r22, Z+2	; 0x02
     83c:	73 81       	ldd	r23, Z+3	; 0x03
     83e:	9f ef       	ldi	r25, 0xFF	; 255
     840:	62 38       	cpi	r22, 0x82	; 130
     842:	79 07       	cpc	r23, r25
     844:	0c f0       	brlt	.+2      	; 0x848 <__pack_f+0x5e>
     846:	5b c0       	rjmp	.+182    	; 0x8fe <__stack+0x9f>
     848:	22 e8       	ldi	r18, 0x82	; 130
     84a:	3f ef       	ldi	r19, 0xFF	; 255
     84c:	26 1b       	sub	r18, r22
     84e:	37 0b       	sbc	r19, r23
     850:	2a 31       	cpi	r18, 0x1A	; 26
     852:	31 05       	cpc	r19, r1
     854:	2c f0       	brlt	.+10     	; 0x860 <__stack+0x1>
     856:	20 e0       	ldi	r18, 0x00	; 0
     858:	30 e0       	ldi	r19, 0x00	; 0
     85a:	40 e0       	ldi	r20, 0x00	; 0
     85c:	50 e0       	ldi	r21, 0x00	; 0
     85e:	2a c0       	rjmp	.+84     	; 0x8b4 <__stack+0x55>
     860:	b8 01       	movw	r22, r16
     862:	a7 01       	movw	r20, r14
     864:	02 2e       	mov	r0, r18
     866:	04 c0       	rjmp	.+8      	; 0x870 <__stack+0x11>
     868:	76 95       	lsr	r23
     86a:	67 95       	ror	r22
     86c:	57 95       	ror	r21
     86e:	47 95       	ror	r20
     870:	0a 94       	dec	r0
     872:	d2 f7       	brpl	.-12     	; 0x868 <__stack+0x9>
     874:	81 e0       	ldi	r24, 0x01	; 1
     876:	90 e0       	ldi	r25, 0x00	; 0
     878:	a0 e0       	ldi	r26, 0x00	; 0
     87a:	b0 e0       	ldi	r27, 0x00	; 0
     87c:	04 c0       	rjmp	.+8      	; 0x886 <__stack+0x27>
     87e:	88 0f       	add	r24, r24
     880:	99 1f       	adc	r25, r25
     882:	aa 1f       	adc	r26, r26
     884:	bb 1f       	adc	r27, r27
     886:	2a 95       	dec	r18
     888:	d2 f7       	brpl	.-12     	; 0x87e <__stack+0x1f>
     88a:	01 97       	sbiw	r24, 0x01	; 1
     88c:	a1 09       	sbc	r26, r1
     88e:	b1 09       	sbc	r27, r1
     890:	8e 21       	and	r24, r14
     892:	9f 21       	and	r25, r15
     894:	a0 23       	and	r26, r16
     896:	b1 23       	and	r27, r17
     898:	00 97       	sbiw	r24, 0x00	; 0
     89a:	a1 05       	cpc	r26, r1
     89c:	b1 05       	cpc	r27, r1
     89e:	21 f0       	breq	.+8      	; 0x8a8 <__stack+0x49>
     8a0:	81 e0       	ldi	r24, 0x01	; 1
     8a2:	90 e0       	ldi	r25, 0x00	; 0
     8a4:	a0 e0       	ldi	r26, 0x00	; 0
     8a6:	b0 e0       	ldi	r27, 0x00	; 0
     8a8:	9a 01       	movw	r18, r20
     8aa:	ab 01       	movw	r20, r22
     8ac:	28 2b       	or	r18, r24
     8ae:	39 2b       	or	r19, r25
     8b0:	4a 2b       	or	r20, r26
     8b2:	5b 2b       	or	r21, r27
     8b4:	da 01       	movw	r26, r20
     8b6:	c9 01       	movw	r24, r18
     8b8:	8f 77       	andi	r24, 0x7F	; 127
     8ba:	90 70       	andi	r25, 0x00	; 0
     8bc:	a0 70       	andi	r26, 0x00	; 0
     8be:	b0 70       	andi	r27, 0x00	; 0
     8c0:	80 34       	cpi	r24, 0x40	; 64
     8c2:	91 05       	cpc	r25, r1
     8c4:	a1 05       	cpc	r26, r1
     8c6:	b1 05       	cpc	r27, r1
     8c8:	39 f4       	brne	.+14     	; 0x8d8 <__stack+0x79>
     8ca:	27 ff       	sbrs	r18, 7
     8cc:	09 c0       	rjmp	.+18     	; 0x8e0 <__stack+0x81>
     8ce:	20 5c       	subi	r18, 0xC0	; 192
     8d0:	3f 4f       	sbci	r19, 0xFF	; 255
     8d2:	4f 4f       	sbci	r20, 0xFF	; 255
     8d4:	5f 4f       	sbci	r21, 0xFF	; 255
     8d6:	04 c0       	rjmp	.+8      	; 0x8e0 <__stack+0x81>
     8d8:	21 5c       	subi	r18, 0xC1	; 193
     8da:	3f 4f       	sbci	r19, 0xFF	; 255
     8dc:	4f 4f       	sbci	r20, 0xFF	; 255
     8de:	5f 4f       	sbci	r21, 0xFF	; 255
     8e0:	e0 e0       	ldi	r30, 0x00	; 0
     8e2:	f0 e0       	ldi	r31, 0x00	; 0
     8e4:	20 30       	cpi	r18, 0x00	; 0
     8e6:	a0 e0       	ldi	r26, 0x00	; 0
     8e8:	3a 07       	cpc	r19, r26
     8ea:	a0 e0       	ldi	r26, 0x00	; 0
     8ec:	4a 07       	cpc	r20, r26
     8ee:	a0 e4       	ldi	r26, 0x40	; 64
     8f0:	5a 07       	cpc	r21, r26
     8f2:	10 f0       	brcs	.+4      	; 0x8f8 <__stack+0x99>
     8f4:	e1 e0       	ldi	r30, 0x01	; 1
     8f6:	f0 e0       	ldi	r31, 0x00	; 0
     8f8:	79 01       	movw	r14, r18
     8fa:	8a 01       	movw	r16, r20
     8fc:	27 c0       	rjmp	.+78     	; 0x94c <__stack+0xed>
     8fe:	60 38       	cpi	r22, 0x80	; 128
     900:	71 05       	cpc	r23, r1
     902:	64 f5       	brge	.+88     	; 0x95c <__stack+0xfd>
     904:	fb 01       	movw	r30, r22
     906:	e1 58       	subi	r30, 0x81	; 129
     908:	ff 4f       	sbci	r31, 0xFF	; 255
     90a:	d8 01       	movw	r26, r16
     90c:	c7 01       	movw	r24, r14
     90e:	8f 77       	andi	r24, 0x7F	; 127
     910:	90 70       	andi	r25, 0x00	; 0
     912:	a0 70       	andi	r26, 0x00	; 0
     914:	b0 70       	andi	r27, 0x00	; 0
     916:	80 34       	cpi	r24, 0x40	; 64
     918:	91 05       	cpc	r25, r1
     91a:	a1 05       	cpc	r26, r1
     91c:	b1 05       	cpc	r27, r1
     91e:	39 f4       	brne	.+14     	; 0x92e <__stack+0xcf>
     920:	e7 fe       	sbrs	r14, 7
     922:	0d c0       	rjmp	.+26     	; 0x93e <__stack+0xdf>
     924:	80 e4       	ldi	r24, 0x40	; 64
     926:	90 e0       	ldi	r25, 0x00	; 0
     928:	a0 e0       	ldi	r26, 0x00	; 0
     92a:	b0 e0       	ldi	r27, 0x00	; 0
     92c:	04 c0       	rjmp	.+8      	; 0x936 <__stack+0xd7>
     92e:	8f e3       	ldi	r24, 0x3F	; 63
     930:	90 e0       	ldi	r25, 0x00	; 0
     932:	a0 e0       	ldi	r26, 0x00	; 0
     934:	b0 e0       	ldi	r27, 0x00	; 0
     936:	e8 0e       	add	r14, r24
     938:	f9 1e       	adc	r15, r25
     93a:	0a 1f       	adc	r16, r26
     93c:	1b 1f       	adc	r17, r27
     93e:	17 ff       	sbrs	r17, 7
     940:	05 c0       	rjmp	.+10     	; 0x94c <__stack+0xed>
     942:	16 95       	lsr	r17
     944:	07 95       	ror	r16
     946:	f7 94       	ror	r15
     948:	e7 94       	ror	r14
     94a:	31 96       	adiw	r30, 0x01	; 1
     94c:	87 e0       	ldi	r24, 0x07	; 7
     94e:	16 95       	lsr	r17
     950:	07 95       	ror	r16
     952:	f7 94       	ror	r15
     954:	e7 94       	ror	r14
     956:	8a 95       	dec	r24
     958:	d1 f7       	brne	.-12     	; 0x94e <__stack+0xef>
     95a:	05 c0       	rjmp	.+10     	; 0x966 <__stack+0x107>
     95c:	ee 24       	eor	r14, r14
     95e:	ff 24       	eor	r15, r15
     960:	87 01       	movw	r16, r14
     962:	ef ef       	ldi	r30, 0xFF	; 255
     964:	f0 e0       	ldi	r31, 0x00	; 0
     966:	6e 2f       	mov	r22, r30
     968:	67 95       	ror	r22
     96a:	66 27       	eor	r22, r22
     96c:	67 95       	ror	r22
     96e:	90 2f       	mov	r25, r16
     970:	9f 77       	andi	r25, 0x7F	; 127
     972:	d7 94       	ror	r13
     974:	dd 24       	eor	r13, r13
     976:	d7 94       	ror	r13
     978:	8e 2f       	mov	r24, r30
     97a:	86 95       	lsr	r24
     97c:	49 2f       	mov	r20, r25
     97e:	46 2b       	or	r20, r22
     980:	58 2f       	mov	r21, r24
     982:	5d 29       	or	r21, r13
     984:	b7 01       	movw	r22, r14
     986:	ca 01       	movw	r24, r20
     988:	1f 91       	pop	r17
     98a:	0f 91       	pop	r16
     98c:	ff 90       	pop	r15
     98e:	ef 90       	pop	r14
     990:	df 90       	pop	r13
     992:	08 95       	ret

00000994 <__unpack_f>:
     994:	fc 01       	movw	r30, r24
     996:	db 01       	movw	r26, r22
     998:	40 81       	ld	r20, Z
     99a:	51 81       	ldd	r21, Z+1	; 0x01
     99c:	22 81       	ldd	r18, Z+2	; 0x02
     99e:	62 2f       	mov	r22, r18
     9a0:	6f 77       	andi	r22, 0x7F	; 127
     9a2:	70 e0       	ldi	r23, 0x00	; 0
     9a4:	22 1f       	adc	r18, r18
     9a6:	22 27       	eor	r18, r18
     9a8:	22 1f       	adc	r18, r18
     9aa:	93 81       	ldd	r25, Z+3	; 0x03
     9ac:	89 2f       	mov	r24, r25
     9ae:	88 0f       	add	r24, r24
     9b0:	82 2b       	or	r24, r18
     9b2:	28 2f       	mov	r18, r24
     9b4:	30 e0       	ldi	r19, 0x00	; 0
     9b6:	99 1f       	adc	r25, r25
     9b8:	99 27       	eor	r25, r25
     9ba:	99 1f       	adc	r25, r25
     9bc:	11 96       	adiw	r26, 0x01	; 1
     9be:	9c 93       	st	X, r25
     9c0:	11 97       	sbiw	r26, 0x01	; 1
     9c2:	21 15       	cp	r18, r1
     9c4:	31 05       	cpc	r19, r1
     9c6:	a9 f5       	brne	.+106    	; 0xa32 <__unpack_f+0x9e>
     9c8:	41 15       	cp	r20, r1
     9ca:	51 05       	cpc	r21, r1
     9cc:	61 05       	cpc	r22, r1
     9ce:	71 05       	cpc	r23, r1
     9d0:	11 f4       	brne	.+4      	; 0x9d6 <__unpack_f+0x42>
     9d2:	82 e0       	ldi	r24, 0x02	; 2
     9d4:	37 c0       	rjmp	.+110    	; 0xa44 <__unpack_f+0xb0>
     9d6:	82 e8       	ldi	r24, 0x82	; 130
     9d8:	9f ef       	ldi	r25, 0xFF	; 255
     9da:	13 96       	adiw	r26, 0x03	; 3
     9dc:	9c 93       	st	X, r25
     9de:	8e 93       	st	-X, r24
     9e0:	12 97       	sbiw	r26, 0x02	; 2
     9e2:	9a 01       	movw	r18, r20
     9e4:	ab 01       	movw	r20, r22
     9e6:	67 e0       	ldi	r22, 0x07	; 7
     9e8:	22 0f       	add	r18, r18
     9ea:	33 1f       	adc	r19, r19
     9ec:	44 1f       	adc	r20, r20
     9ee:	55 1f       	adc	r21, r21
     9f0:	6a 95       	dec	r22
     9f2:	d1 f7       	brne	.-12     	; 0x9e8 <__unpack_f+0x54>
     9f4:	83 e0       	ldi	r24, 0x03	; 3
     9f6:	8c 93       	st	X, r24
     9f8:	0d c0       	rjmp	.+26     	; 0xa14 <__unpack_f+0x80>
     9fa:	22 0f       	add	r18, r18
     9fc:	33 1f       	adc	r19, r19
     9fe:	44 1f       	adc	r20, r20
     a00:	55 1f       	adc	r21, r21
     a02:	12 96       	adiw	r26, 0x02	; 2
     a04:	8d 91       	ld	r24, X+
     a06:	9c 91       	ld	r25, X
     a08:	13 97       	sbiw	r26, 0x03	; 3
     a0a:	01 97       	sbiw	r24, 0x01	; 1
     a0c:	13 96       	adiw	r26, 0x03	; 3
     a0e:	9c 93       	st	X, r25
     a10:	8e 93       	st	-X, r24
     a12:	12 97       	sbiw	r26, 0x02	; 2
     a14:	20 30       	cpi	r18, 0x00	; 0
     a16:	80 e0       	ldi	r24, 0x00	; 0
     a18:	38 07       	cpc	r19, r24
     a1a:	80 e0       	ldi	r24, 0x00	; 0
     a1c:	48 07       	cpc	r20, r24
     a1e:	80 e4       	ldi	r24, 0x40	; 64
     a20:	58 07       	cpc	r21, r24
     a22:	58 f3       	brcs	.-42     	; 0x9fa <__unpack_f+0x66>
     a24:	14 96       	adiw	r26, 0x04	; 4
     a26:	2d 93       	st	X+, r18
     a28:	3d 93       	st	X+, r19
     a2a:	4d 93       	st	X+, r20
     a2c:	5c 93       	st	X, r21
     a2e:	17 97       	sbiw	r26, 0x07	; 7
     a30:	08 95       	ret
     a32:	2f 3f       	cpi	r18, 0xFF	; 255
     a34:	31 05       	cpc	r19, r1
     a36:	79 f4       	brne	.+30     	; 0xa56 <__unpack_f+0xc2>
     a38:	41 15       	cp	r20, r1
     a3a:	51 05       	cpc	r21, r1
     a3c:	61 05       	cpc	r22, r1
     a3e:	71 05       	cpc	r23, r1
     a40:	19 f4       	brne	.+6      	; 0xa48 <__unpack_f+0xb4>
     a42:	84 e0       	ldi	r24, 0x04	; 4
     a44:	8c 93       	st	X, r24
     a46:	08 95       	ret
     a48:	64 ff       	sbrs	r22, 4
     a4a:	03 c0       	rjmp	.+6      	; 0xa52 <__unpack_f+0xbe>
     a4c:	81 e0       	ldi	r24, 0x01	; 1
     a4e:	8c 93       	st	X, r24
     a50:	12 c0       	rjmp	.+36     	; 0xa76 <__unpack_f+0xe2>
     a52:	1c 92       	st	X, r1
     a54:	10 c0       	rjmp	.+32     	; 0xa76 <__unpack_f+0xe2>
     a56:	2f 57       	subi	r18, 0x7F	; 127
     a58:	30 40       	sbci	r19, 0x00	; 0
     a5a:	13 96       	adiw	r26, 0x03	; 3
     a5c:	3c 93       	st	X, r19
     a5e:	2e 93       	st	-X, r18
     a60:	12 97       	sbiw	r26, 0x02	; 2
     a62:	83 e0       	ldi	r24, 0x03	; 3
     a64:	8c 93       	st	X, r24
     a66:	87 e0       	ldi	r24, 0x07	; 7
     a68:	44 0f       	add	r20, r20
     a6a:	55 1f       	adc	r21, r21
     a6c:	66 1f       	adc	r22, r22
     a6e:	77 1f       	adc	r23, r23
     a70:	8a 95       	dec	r24
     a72:	d1 f7       	brne	.-12     	; 0xa68 <__unpack_f+0xd4>
     a74:	70 64       	ori	r23, 0x40	; 64
     a76:	14 96       	adiw	r26, 0x04	; 4
     a78:	4d 93       	st	X+, r20
     a7a:	5d 93       	st	X+, r21
     a7c:	6d 93       	st	X+, r22
     a7e:	7c 93       	st	X, r23
     a80:	17 97       	sbiw	r26, 0x07	; 7
     a82:	08 95       	ret

00000a84 <__fpcmp_parts_f>:
     a84:	1f 93       	push	r17
     a86:	dc 01       	movw	r26, r24
     a88:	fb 01       	movw	r30, r22
     a8a:	9c 91       	ld	r25, X
     a8c:	92 30       	cpi	r25, 0x02	; 2
     a8e:	08 f4       	brcc	.+2      	; 0xa92 <__fpcmp_parts_f+0xe>
     a90:	47 c0       	rjmp	.+142    	; 0xb20 <__fpcmp_parts_f+0x9c>
     a92:	80 81       	ld	r24, Z
     a94:	82 30       	cpi	r24, 0x02	; 2
     a96:	08 f4       	brcc	.+2      	; 0xa9a <__fpcmp_parts_f+0x16>
     a98:	43 c0       	rjmp	.+134    	; 0xb20 <__fpcmp_parts_f+0x9c>
     a9a:	94 30       	cpi	r25, 0x04	; 4
     a9c:	51 f4       	brne	.+20     	; 0xab2 <__fpcmp_parts_f+0x2e>
     a9e:	11 96       	adiw	r26, 0x01	; 1
     aa0:	1c 91       	ld	r17, X
     aa2:	84 30       	cpi	r24, 0x04	; 4
     aa4:	99 f5       	brne	.+102    	; 0xb0c <__fpcmp_parts_f+0x88>
     aa6:	81 81       	ldd	r24, Z+1	; 0x01
     aa8:	68 2f       	mov	r22, r24
     aaa:	70 e0       	ldi	r23, 0x00	; 0
     aac:	61 1b       	sub	r22, r17
     aae:	71 09       	sbc	r23, r1
     ab0:	3f c0       	rjmp	.+126    	; 0xb30 <__fpcmp_parts_f+0xac>
     ab2:	84 30       	cpi	r24, 0x04	; 4
     ab4:	21 f0       	breq	.+8      	; 0xabe <__fpcmp_parts_f+0x3a>
     ab6:	92 30       	cpi	r25, 0x02	; 2
     ab8:	31 f4       	brne	.+12     	; 0xac6 <__fpcmp_parts_f+0x42>
     aba:	82 30       	cpi	r24, 0x02	; 2
     abc:	b9 f1       	breq	.+110    	; 0xb2c <__fpcmp_parts_f+0xa8>
     abe:	81 81       	ldd	r24, Z+1	; 0x01
     ac0:	88 23       	and	r24, r24
     ac2:	89 f1       	breq	.+98     	; 0xb26 <__fpcmp_parts_f+0xa2>
     ac4:	2d c0       	rjmp	.+90     	; 0xb20 <__fpcmp_parts_f+0x9c>
     ac6:	11 96       	adiw	r26, 0x01	; 1
     ac8:	1c 91       	ld	r17, X
     aca:	11 97       	sbiw	r26, 0x01	; 1
     acc:	82 30       	cpi	r24, 0x02	; 2
     ace:	f1 f0       	breq	.+60     	; 0xb0c <__fpcmp_parts_f+0x88>
     ad0:	81 81       	ldd	r24, Z+1	; 0x01
     ad2:	18 17       	cp	r17, r24
     ad4:	d9 f4       	brne	.+54     	; 0xb0c <__fpcmp_parts_f+0x88>
     ad6:	12 96       	adiw	r26, 0x02	; 2
     ad8:	2d 91       	ld	r18, X+
     ada:	3c 91       	ld	r19, X
     adc:	13 97       	sbiw	r26, 0x03	; 3
     ade:	82 81       	ldd	r24, Z+2	; 0x02
     ae0:	93 81       	ldd	r25, Z+3	; 0x03
     ae2:	82 17       	cp	r24, r18
     ae4:	93 07       	cpc	r25, r19
     ae6:	94 f0       	brlt	.+36     	; 0xb0c <__fpcmp_parts_f+0x88>
     ae8:	28 17       	cp	r18, r24
     aea:	39 07       	cpc	r19, r25
     aec:	bc f0       	brlt	.+46     	; 0xb1c <__fpcmp_parts_f+0x98>
     aee:	14 96       	adiw	r26, 0x04	; 4
     af0:	8d 91       	ld	r24, X+
     af2:	9d 91       	ld	r25, X+
     af4:	0d 90       	ld	r0, X+
     af6:	bc 91       	ld	r27, X
     af8:	a0 2d       	mov	r26, r0
     afa:	24 81       	ldd	r18, Z+4	; 0x04
     afc:	35 81       	ldd	r19, Z+5	; 0x05
     afe:	46 81       	ldd	r20, Z+6	; 0x06
     b00:	57 81       	ldd	r21, Z+7	; 0x07
     b02:	28 17       	cp	r18, r24
     b04:	39 07       	cpc	r19, r25
     b06:	4a 07       	cpc	r20, r26
     b08:	5b 07       	cpc	r21, r27
     b0a:	18 f4       	brcc	.+6      	; 0xb12 <__fpcmp_parts_f+0x8e>
     b0c:	11 23       	and	r17, r17
     b0e:	41 f0       	breq	.+16     	; 0xb20 <__fpcmp_parts_f+0x9c>
     b10:	0a c0       	rjmp	.+20     	; 0xb26 <__fpcmp_parts_f+0xa2>
     b12:	82 17       	cp	r24, r18
     b14:	93 07       	cpc	r25, r19
     b16:	a4 07       	cpc	r26, r20
     b18:	b5 07       	cpc	r27, r21
     b1a:	40 f4       	brcc	.+16     	; 0xb2c <__fpcmp_parts_f+0xa8>
     b1c:	11 23       	and	r17, r17
     b1e:	19 f0       	breq	.+6      	; 0xb26 <__fpcmp_parts_f+0xa2>
     b20:	61 e0       	ldi	r22, 0x01	; 1
     b22:	70 e0       	ldi	r23, 0x00	; 0
     b24:	05 c0       	rjmp	.+10     	; 0xb30 <__fpcmp_parts_f+0xac>
     b26:	6f ef       	ldi	r22, 0xFF	; 255
     b28:	7f ef       	ldi	r23, 0xFF	; 255
     b2a:	02 c0       	rjmp	.+4      	; 0xb30 <__fpcmp_parts_f+0xac>
     b2c:	60 e0       	ldi	r22, 0x00	; 0
     b2e:	70 e0       	ldi	r23, 0x00	; 0
     b30:	cb 01       	movw	r24, r22
     b32:	1f 91       	pop	r17
     b34:	08 95       	ret

00000b36 <M_DIO_void_setPinDir>:
#include "DIO_pvt.h"
#include "DIO_config.h"
#include "DIO_int.h"

void M_DIO_void_setPinDir(u8 Port, PIN_T Pin, Dir_T DIRECTION)
{
     b36:	df 93       	push	r29
     b38:	cf 93       	push	r28
     b3a:	cd b7       	in	r28, 0x3d	; 61
     b3c:	de b7       	in	r29, 0x3e	; 62
     b3e:	2d 97       	sbiw	r28, 0x0d	; 13
     b40:	0f b6       	in	r0, 0x3f	; 63
     b42:	f8 94       	cli
     b44:	de bf       	out	0x3e, r29	; 62
     b46:	0f be       	out	0x3f, r0	; 63
     b48:	cd bf       	out	0x3d, r28	; 61
     b4a:	89 83       	std	Y+1, r24	; 0x01
     b4c:	6a 83       	std	Y+2, r22	; 0x02
     b4e:	4b 83       	std	Y+3, r20	; 0x03
	switch (Port)
     b50:	89 81       	ldd	r24, Y+1	; 0x01
     b52:	28 2f       	mov	r18, r24
     b54:	30 e0       	ldi	r19, 0x00	; 0
     b56:	3d 87       	std	Y+13, r19	; 0x0d
     b58:	2c 87       	std	Y+12, r18	; 0x0c
     b5a:	8c 85       	ldd	r24, Y+12	; 0x0c
     b5c:	9d 85       	ldd	r25, Y+13	; 0x0d
     b5e:	81 30       	cpi	r24, 0x01	; 1
     b60:	91 05       	cpc	r25, r1
     b62:	09 f4       	brne	.+2      	; 0xb66 <M_DIO_void_setPinDir+0x30>
     b64:	4f c0       	rjmp	.+158    	; 0xc04 <M_DIO_void_setPinDir+0xce>
     b66:	2c 85       	ldd	r18, Y+12	; 0x0c
     b68:	3d 85       	ldd	r19, Y+13	; 0x0d
     b6a:	22 30       	cpi	r18, 0x02	; 2
     b6c:	31 05       	cpc	r19, r1
     b6e:	2c f4       	brge	.+10     	; 0xb7a <M_DIO_void_setPinDir+0x44>
     b70:	8c 85       	ldd	r24, Y+12	; 0x0c
     b72:	9d 85       	ldd	r25, Y+13	; 0x0d
     b74:	00 97       	sbiw	r24, 0x00	; 0
     b76:	71 f0       	breq	.+28     	; 0xb94 <M_DIO_void_setPinDir+0x5e>
     b78:	ec c0       	rjmp	.+472    	; 0xd52 <M_DIO_void_setPinDir+0x21c>
     b7a:	2c 85       	ldd	r18, Y+12	; 0x0c
     b7c:	3d 85       	ldd	r19, Y+13	; 0x0d
     b7e:	22 30       	cpi	r18, 0x02	; 2
     b80:	31 05       	cpc	r19, r1
     b82:	09 f4       	brne	.+2      	; 0xb86 <M_DIO_void_setPinDir+0x50>
     b84:	77 c0       	rjmp	.+238    	; 0xc74 <M_DIO_void_setPinDir+0x13e>
     b86:	8c 85       	ldd	r24, Y+12	; 0x0c
     b88:	9d 85       	ldd	r25, Y+13	; 0x0d
     b8a:	83 30       	cpi	r24, 0x03	; 3
     b8c:	91 05       	cpc	r25, r1
     b8e:	09 f4       	brne	.+2      	; 0xb92 <M_DIO_void_setPinDir+0x5c>
     b90:	a9 c0       	rjmp	.+338    	; 0xce4 <M_DIO_void_setPinDir+0x1ae>
     b92:	df c0       	rjmp	.+446    	; 0xd52 <M_DIO_void_setPinDir+0x21c>
	{
	case PORTA_ID :
		switch (DIRECTION)
     b94:	8b 81       	ldd	r24, Y+3	; 0x03
     b96:	28 2f       	mov	r18, r24
     b98:	30 e0       	ldi	r19, 0x00	; 0
     b9a:	3b 87       	std	Y+11, r19	; 0x0b
     b9c:	2a 87       	std	Y+10, r18	; 0x0a
     b9e:	8a 85       	ldd	r24, Y+10	; 0x0a
     ba0:	9b 85       	ldd	r25, Y+11	; 0x0b
     ba2:	00 97       	sbiw	r24, 0x00	; 0
     ba4:	31 f0       	breq	.+12     	; 0xbb2 <M_DIO_void_setPinDir+0x7c>
     ba6:	2a 85       	ldd	r18, Y+10	; 0x0a
     ba8:	3b 85       	ldd	r19, Y+11	; 0x0b
     baa:	21 30       	cpi	r18, 0x01	; 1
     bac:	31 05       	cpc	r19, r1
     bae:	b1 f0       	breq	.+44     	; 0xbdc <M_DIO_void_setPinDir+0xa6>
     bb0:	d0 c0       	rjmp	.+416    	; 0xd52 <M_DIO_void_setPinDir+0x21c>
		{
		case IN:
			 CLR_BIT(DDRA,Pin);
     bb2:	aa e3       	ldi	r26, 0x3A	; 58
     bb4:	b0 e0       	ldi	r27, 0x00	; 0
     bb6:	ea e3       	ldi	r30, 0x3A	; 58
     bb8:	f0 e0       	ldi	r31, 0x00	; 0
     bba:	80 81       	ld	r24, Z
     bbc:	48 2f       	mov	r20, r24
     bbe:	8a 81       	ldd	r24, Y+2	; 0x02
     bc0:	28 2f       	mov	r18, r24
     bc2:	30 e0       	ldi	r19, 0x00	; 0
     bc4:	81 e0       	ldi	r24, 0x01	; 1
     bc6:	90 e0       	ldi	r25, 0x00	; 0
     bc8:	02 2e       	mov	r0, r18
     bca:	02 c0       	rjmp	.+4      	; 0xbd0 <M_DIO_void_setPinDir+0x9a>
     bcc:	88 0f       	add	r24, r24
     bce:	99 1f       	adc	r25, r25
     bd0:	0a 94       	dec	r0
     bd2:	e2 f7       	brpl	.-8      	; 0xbcc <M_DIO_void_setPinDir+0x96>
     bd4:	80 95       	com	r24
     bd6:	84 23       	and	r24, r20
     bd8:	8c 93       	st	X, r24
     bda:	bb c0       	rjmp	.+374    	; 0xd52 <M_DIO_void_setPinDir+0x21c>
			 break;
		case OUT:
			SET_BIT(DDRA,Pin);
     bdc:	aa e3       	ldi	r26, 0x3A	; 58
     bde:	b0 e0       	ldi	r27, 0x00	; 0
     be0:	ea e3       	ldi	r30, 0x3A	; 58
     be2:	f0 e0       	ldi	r31, 0x00	; 0
     be4:	80 81       	ld	r24, Z
     be6:	48 2f       	mov	r20, r24
     be8:	8a 81       	ldd	r24, Y+2	; 0x02
     bea:	28 2f       	mov	r18, r24
     bec:	30 e0       	ldi	r19, 0x00	; 0
     bee:	81 e0       	ldi	r24, 0x01	; 1
     bf0:	90 e0       	ldi	r25, 0x00	; 0
     bf2:	02 2e       	mov	r0, r18
     bf4:	02 c0       	rjmp	.+4      	; 0xbfa <M_DIO_void_setPinDir+0xc4>
     bf6:	88 0f       	add	r24, r24
     bf8:	99 1f       	adc	r25, r25
     bfa:	0a 94       	dec	r0
     bfc:	e2 f7       	brpl	.-8      	; 0xbf6 <M_DIO_void_setPinDir+0xc0>
     bfe:	84 2b       	or	r24, r20
     c00:	8c 93       	st	X, r24
     c02:	a7 c0       	rjmp	.+334    	; 0xd52 <M_DIO_void_setPinDir+0x21c>
			break;
		}
		break;
	case PORTB_ID :
				switch (DIRECTION)
     c04:	8b 81       	ldd	r24, Y+3	; 0x03
     c06:	28 2f       	mov	r18, r24
     c08:	30 e0       	ldi	r19, 0x00	; 0
     c0a:	39 87       	std	Y+9, r19	; 0x09
     c0c:	28 87       	std	Y+8, r18	; 0x08
     c0e:	88 85       	ldd	r24, Y+8	; 0x08
     c10:	99 85       	ldd	r25, Y+9	; 0x09
     c12:	00 97       	sbiw	r24, 0x00	; 0
     c14:	31 f0       	breq	.+12     	; 0xc22 <M_DIO_void_setPinDir+0xec>
     c16:	28 85       	ldd	r18, Y+8	; 0x08
     c18:	39 85       	ldd	r19, Y+9	; 0x09
     c1a:	21 30       	cpi	r18, 0x01	; 1
     c1c:	31 05       	cpc	r19, r1
     c1e:	b1 f0       	breq	.+44     	; 0xc4c <M_DIO_void_setPinDir+0x116>
     c20:	98 c0       	rjmp	.+304    	; 0xd52 <M_DIO_void_setPinDir+0x21c>
				{
				case IN:
					 CLR_BIT(DDRB,Pin);
     c22:	a7 e3       	ldi	r26, 0x37	; 55
     c24:	b0 e0       	ldi	r27, 0x00	; 0
     c26:	e7 e3       	ldi	r30, 0x37	; 55
     c28:	f0 e0       	ldi	r31, 0x00	; 0
     c2a:	80 81       	ld	r24, Z
     c2c:	48 2f       	mov	r20, r24
     c2e:	8a 81       	ldd	r24, Y+2	; 0x02
     c30:	28 2f       	mov	r18, r24
     c32:	30 e0       	ldi	r19, 0x00	; 0
     c34:	81 e0       	ldi	r24, 0x01	; 1
     c36:	90 e0       	ldi	r25, 0x00	; 0
     c38:	02 2e       	mov	r0, r18
     c3a:	02 c0       	rjmp	.+4      	; 0xc40 <M_DIO_void_setPinDir+0x10a>
     c3c:	88 0f       	add	r24, r24
     c3e:	99 1f       	adc	r25, r25
     c40:	0a 94       	dec	r0
     c42:	e2 f7       	brpl	.-8      	; 0xc3c <M_DIO_void_setPinDir+0x106>
     c44:	80 95       	com	r24
     c46:	84 23       	and	r24, r20
     c48:	8c 93       	st	X, r24
     c4a:	83 c0       	rjmp	.+262    	; 0xd52 <M_DIO_void_setPinDir+0x21c>
					 break;
				case OUT:
					SET_BIT(DDRB,Pin);
     c4c:	a7 e3       	ldi	r26, 0x37	; 55
     c4e:	b0 e0       	ldi	r27, 0x00	; 0
     c50:	e7 e3       	ldi	r30, 0x37	; 55
     c52:	f0 e0       	ldi	r31, 0x00	; 0
     c54:	80 81       	ld	r24, Z
     c56:	48 2f       	mov	r20, r24
     c58:	8a 81       	ldd	r24, Y+2	; 0x02
     c5a:	28 2f       	mov	r18, r24
     c5c:	30 e0       	ldi	r19, 0x00	; 0
     c5e:	81 e0       	ldi	r24, 0x01	; 1
     c60:	90 e0       	ldi	r25, 0x00	; 0
     c62:	02 2e       	mov	r0, r18
     c64:	02 c0       	rjmp	.+4      	; 0xc6a <M_DIO_void_setPinDir+0x134>
     c66:	88 0f       	add	r24, r24
     c68:	99 1f       	adc	r25, r25
     c6a:	0a 94       	dec	r0
     c6c:	e2 f7       	brpl	.-8      	; 0xc66 <M_DIO_void_setPinDir+0x130>
     c6e:	84 2b       	or	r24, r20
     c70:	8c 93       	st	X, r24
     c72:	6f c0       	rjmp	.+222    	; 0xd52 <M_DIO_void_setPinDir+0x21c>
					break;
				}
			break;
	case PORTC_ID:
				switch (DIRECTION)
     c74:	8b 81       	ldd	r24, Y+3	; 0x03
     c76:	28 2f       	mov	r18, r24
     c78:	30 e0       	ldi	r19, 0x00	; 0
     c7a:	3f 83       	std	Y+7, r19	; 0x07
     c7c:	2e 83       	std	Y+6, r18	; 0x06
     c7e:	8e 81       	ldd	r24, Y+6	; 0x06
     c80:	9f 81       	ldd	r25, Y+7	; 0x07
     c82:	00 97       	sbiw	r24, 0x00	; 0
     c84:	31 f0       	breq	.+12     	; 0xc92 <M_DIO_void_setPinDir+0x15c>
     c86:	2e 81       	ldd	r18, Y+6	; 0x06
     c88:	3f 81       	ldd	r19, Y+7	; 0x07
     c8a:	21 30       	cpi	r18, 0x01	; 1
     c8c:	31 05       	cpc	r19, r1
     c8e:	b1 f0       	breq	.+44     	; 0xcbc <M_DIO_void_setPinDir+0x186>
     c90:	60 c0       	rjmp	.+192    	; 0xd52 <M_DIO_void_setPinDir+0x21c>
				{
				case IN:
						 CLR_BIT(DDRC,Pin);
     c92:	a4 e3       	ldi	r26, 0x34	; 52
     c94:	b0 e0       	ldi	r27, 0x00	; 0
     c96:	e4 e3       	ldi	r30, 0x34	; 52
     c98:	f0 e0       	ldi	r31, 0x00	; 0
     c9a:	80 81       	ld	r24, Z
     c9c:	48 2f       	mov	r20, r24
     c9e:	8a 81       	ldd	r24, Y+2	; 0x02
     ca0:	28 2f       	mov	r18, r24
     ca2:	30 e0       	ldi	r19, 0x00	; 0
     ca4:	81 e0       	ldi	r24, 0x01	; 1
     ca6:	90 e0       	ldi	r25, 0x00	; 0
     ca8:	02 2e       	mov	r0, r18
     caa:	02 c0       	rjmp	.+4      	; 0xcb0 <M_DIO_void_setPinDir+0x17a>
     cac:	88 0f       	add	r24, r24
     cae:	99 1f       	adc	r25, r25
     cb0:	0a 94       	dec	r0
     cb2:	e2 f7       	brpl	.-8      	; 0xcac <M_DIO_void_setPinDir+0x176>
     cb4:	80 95       	com	r24
     cb6:	84 23       	and	r24, r20
     cb8:	8c 93       	st	X, r24
     cba:	4b c0       	rjmp	.+150    	; 0xd52 <M_DIO_void_setPinDir+0x21c>
						 break;
				case OUT:
						 SET_BIT(DDRC,Pin);
     cbc:	a4 e3       	ldi	r26, 0x34	; 52
     cbe:	b0 e0       	ldi	r27, 0x00	; 0
     cc0:	e4 e3       	ldi	r30, 0x34	; 52
     cc2:	f0 e0       	ldi	r31, 0x00	; 0
     cc4:	80 81       	ld	r24, Z
     cc6:	48 2f       	mov	r20, r24
     cc8:	8a 81       	ldd	r24, Y+2	; 0x02
     cca:	28 2f       	mov	r18, r24
     ccc:	30 e0       	ldi	r19, 0x00	; 0
     cce:	81 e0       	ldi	r24, 0x01	; 1
     cd0:	90 e0       	ldi	r25, 0x00	; 0
     cd2:	02 2e       	mov	r0, r18
     cd4:	02 c0       	rjmp	.+4      	; 0xcda <M_DIO_void_setPinDir+0x1a4>
     cd6:	88 0f       	add	r24, r24
     cd8:	99 1f       	adc	r25, r25
     cda:	0a 94       	dec	r0
     cdc:	e2 f7       	brpl	.-8      	; 0xcd6 <M_DIO_void_setPinDir+0x1a0>
     cde:	84 2b       	or	r24, r20
     ce0:	8c 93       	st	X, r24
     ce2:	37 c0       	rjmp	.+110    	; 0xd52 <M_DIO_void_setPinDir+0x21c>
						 break;
					}
				break;
	case PORTD_ID :
				 switch (DIRECTION)
     ce4:	8b 81       	ldd	r24, Y+3	; 0x03
     ce6:	28 2f       	mov	r18, r24
     ce8:	30 e0       	ldi	r19, 0x00	; 0
     cea:	3d 83       	std	Y+5, r19	; 0x05
     cec:	2c 83       	std	Y+4, r18	; 0x04
     cee:	8c 81       	ldd	r24, Y+4	; 0x04
     cf0:	9d 81       	ldd	r25, Y+5	; 0x05
     cf2:	00 97       	sbiw	r24, 0x00	; 0
     cf4:	31 f0       	breq	.+12     	; 0xd02 <M_DIO_void_setPinDir+0x1cc>
     cf6:	2c 81       	ldd	r18, Y+4	; 0x04
     cf8:	3d 81       	ldd	r19, Y+5	; 0x05
     cfa:	21 30       	cpi	r18, 0x01	; 1
     cfc:	31 05       	cpc	r19, r1
     cfe:	b1 f0       	breq	.+44     	; 0xd2c <M_DIO_void_setPinDir+0x1f6>
     d00:	28 c0       	rjmp	.+80     	; 0xd52 <M_DIO_void_setPinDir+0x21c>
				 {
					case IN:
						 CLR_BIT(DDRD,Pin);
     d02:	a1 e3       	ldi	r26, 0x31	; 49
     d04:	b0 e0       	ldi	r27, 0x00	; 0
     d06:	e1 e3       	ldi	r30, 0x31	; 49
     d08:	f0 e0       	ldi	r31, 0x00	; 0
     d0a:	80 81       	ld	r24, Z
     d0c:	48 2f       	mov	r20, r24
     d0e:	8a 81       	ldd	r24, Y+2	; 0x02
     d10:	28 2f       	mov	r18, r24
     d12:	30 e0       	ldi	r19, 0x00	; 0
     d14:	81 e0       	ldi	r24, 0x01	; 1
     d16:	90 e0       	ldi	r25, 0x00	; 0
     d18:	02 2e       	mov	r0, r18
     d1a:	02 c0       	rjmp	.+4      	; 0xd20 <M_DIO_void_setPinDir+0x1ea>
     d1c:	88 0f       	add	r24, r24
     d1e:	99 1f       	adc	r25, r25
     d20:	0a 94       	dec	r0
     d22:	e2 f7       	brpl	.-8      	; 0xd1c <M_DIO_void_setPinDir+0x1e6>
     d24:	80 95       	com	r24
     d26:	84 23       	and	r24, r20
     d28:	8c 93       	st	X, r24
     d2a:	13 c0       	rjmp	.+38     	; 0xd52 <M_DIO_void_setPinDir+0x21c>
						 break;
					case OUT:
						SET_BIT(DDRD,Pin);
     d2c:	a1 e3       	ldi	r26, 0x31	; 49
     d2e:	b0 e0       	ldi	r27, 0x00	; 0
     d30:	e1 e3       	ldi	r30, 0x31	; 49
     d32:	f0 e0       	ldi	r31, 0x00	; 0
     d34:	80 81       	ld	r24, Z
     d36:	48 2f       	mov	r20, r24
     d38:	8a 81       	ldd	r24, Y+2	; 0x02
     d3a:	28 2f       	mov	r18, r24
     d3c:	30 e0       	ldi	r19, 0x00	; 0
     d3e:	81 e0       	ldi	r24, 0x01	; 1
     d40:	90 e0       	ldi	r25, 0x00	; 0
     d42:	02 2e       	mov	r0, r18
     d44:	02 c0       	rjmp	.+4      	; 0xd4a <M_DIO_void_setPinDir+0x214>
     d46:	88 0f       	add	r24, r24
     d48:	99 1f       	adc	r25, r25
     d4a:	0a 94       	dec	r0
     d4c:	e2 f7       	brpl	.-8      	; 0xd46 <M_DIO_void_setPinDir+0x210>
     d4e:	84 2b       	or	r24, r20
     d50:	8c 93       	st	X, r24
						 break;
				}
				break;
	}
}
     d52:	2d 96       	adiw	r28, 0x0d	; 13
     d54:	0f b6       	in	r0, 0x3f	; 63
     d56:	f8 94       	cli
     d58:	de bf       	out	0x3e, r29	; 62
     d5a:	0f be       	out	0x3f, r0	; 63
     d5c:	cd bf       	out	0x3d, r28	; 61
     d5e:	cf 91       	pop	r28
     d60:	df 91       	pop	r29
     d62:	08 95       	ret

00000d64 <M_DIO_void_setPinValue>:
void M_DIO_void_setPinValue(u8 Port, u8 Pin, VALUE_T value)
{
     d64:	df 93       	push	r29
     d66:	cf 93       	push	r28
     d68:	cd b7       	in	r28, 0x3d	; 61
     d6a:	de b7       	in	r29, 0x3e	; 62
     d6c:	2d 97       	sbiw	r28, 0x0d	; 13
     d6e:	0f b6       	in	r0, 0x3f	; 63
     d70:	f8 94       	cli
     d72:	de bf       	out	0x3e, r29	; 62
     d74:	0f be       	out	0x3f, r0	; 63
     d76:	cd bf       	out	0x3d, r28	; 61
     d78:	89 83       	std	Y+1, r24	; 0x01
     d7a:	6a 83       	std	Y+2, r22	; 0x02
     d7c:	4b 83       	std	Y+3, r20	; 0x03
	switch (Port)
     d7e:	89 81       	ldd	r24, Y+1	; 0x01
     d80:	28 2f       	mov	r18, r24
     d82:	30 e0       	ldi	r19, 0x00	; 0
     d84:	3d 87       	std	Y+13, r19	; 0x0d
     d86:	2c 87       	std	Y+12, r18	; 0x0c
     d88:	8c 85       	ldd	r24, Y+12	; 0x0c
     d8a:	9d 85       	ldd	r25, Y+13	; 0x0d
     d8c:	81 30       	cpi	r24, 0x01	; 1
     d8e:	91 05       	cpc	r25, r1
     d90:	09 f4       	brne	.+2      	; 0xd94 <M_DIO_void_setPinValue+0x30>
     d92:	4f c0       	rjmp	.+158    	; 0xe32 <M_DIO_void_setPinValue+0xce>
     d94:	2c 85       	ldd	r18, Y+12	; 0x0c
     d96:	3d 85       	ldd	r19, Y+13	; 0x0d
     d98:	22 30       	cpi	r18, 0x02	; 2
     d9a:	31 05       	cpc	r19, r1
     d9c:	2c f4       	brge	.+10     	; 0xda8 <M_DIO_void_setPinValue+0x44>
     d9e:	8c 85       	ldd	r24, Y+12	; 0x0c
     da0:	9d 85       	ldd	r25, Y+13	; 0x0d
     da2:	00 97       	sbiw	r24, 0x00	; 0
     da4:	71 f0       	breq	.+28     	; 0xdc2 <M_DIO_void_setPinValue+0x5e>
     da6:	ec c0       	rjmp	.+472    	; 0xf80 <M_DIO_void_setPinValue+0x21c>
     da8:	2c 85       	ldd	r18, Y+12	; 0x0c
     daa:	3d 85       	ldd	r19, Y+13	; 0x0d
     dac:	22 30       	cpi	r18, 0x02	; 2
     dae:	31 05       	cpc	r19, r1
     db0:	09 f4       	brne	.+2      	; 0xdb4 <M_DIO_void_setPinValue+0x50>
     db2:	77 c0       	rjmp	.+238    	; 0xea2 <M_DIO_void_setPinValue+0x13e>
     db4:	8c 85       	ldd	r24, Y+12	; 0x0c
     db6:	9d 85       	ldd	r25, Y+13	; 0x0d
     db8:	83 30       	cpi	r24, 0x03	; 3
     dba:	91 05       	cpc	r25, r1
     dbc:	09 f4       	brne	.+2      	; 0xdc0 <M_DIO_void_setPinValue+0x5c>
     dbe:	a9 c0       	rjmp	.+338    	; 0xf12 <M_DIO_void_setPinValue+0x1ae>
     dc0:	df c0       	rjmp	.+446    	; 0xf80 <M_DIO_void_setPinValue+0x21c>
		{
		case PORTA_ID :
			switch (value)
     dc2:	8b 81       	ldd	r24, Y+3	; 0x03
     dc4:	28 2f       	mov	r18, r24
     dc6:	30 e0       	ldi	r19, 0x00	; 0
     dc8:	3b 87       	std	Y+11, r19	; 0x0b
     dca:	2a 87       	std	Y+10, r18	; 0x0a
     dcc:	8a 85       	ldd	r24, Y+10	; 0x0a
     dce:	9b 85       	ldd	r25, Y+11	; 0x0b
     dd0:	00 97       	sbiw	r24, 0x00	; 0
     dd2:	31 f0       	breq	.+12     	; 0xde0 <M_DIO_void_setPinValue+0x7c>
     dd4:	2a 85       	ldd	r18, Y+10	; 0x0a
     dd6:	3b 85       	ldd	r19, Y+11	; 0x0b
     dd8:	21 30       	cpi	r18, 0x01	; 1
     dda:	31 05       	cpc	r19, r1
     ddc:	b1 f0       	breq	.+44     	; 0xe0a <M_DIO_void_setPinValue+0xa6>
     dde:	d0 c0       	rjmp	.+416    	; 0xf80 <M_DIO_void_setPinValue+0x21c>
			{
			case LOW:
				 CLR_BIT(PORTA_REG,Pin);
     de0:	ab e3       	ldi	r26, 0x3B	; 59
     de2:	b0 e0       	ldi	r27, 0x00	; 0
     de4:	eb e3       	ldi	r30, 0x3B	; 59
     de6:	f0 e0       	ldi	r31, 0x00	; 0
     de8:	80 81       	ld	r24, Z
     dea:	48 2f       	mov	r20, r24
     dec:	8a 81       	ldd	r24, Y+2	; 0x02
     dee:	28 2f       	mov	r18, r24
     df0:	30 e0       	ldi	r19, 0x00	; 0
     df2:	81 e0       	ldi	r24, 0x01	; 1
     df4:	90 e0       	ldi	r25, 0x00	; 0
     df6:	02 2e       	mov	r0, r18
     df8:	02 c0       	rjmp	.+4      	; 0xdfe <M_DIO_void_setPinValue+0x9a>
     dfa:	88 0f       	add	r24, r24
     dfc:	99 1f       	adc	r25, r25
     dfe:	0a 94       	dec	r0
     e00:	e2 f7       	brpl	.-8      	; 0xdfa <M_DIO_void_setPinValue+0x96>
     e02:	80 95       	com	r24
     e04:	84 23       	and	r24, r20
     e06:	8c 93       	st	X, r24
     e08:	bb c0       	rjmp	.+374    	; 0xf80 <M_DIO_void_setPinValue+0x21c>
				 break;
			case HIGH:
				SET_BIT(PORTA_REG,Pin);
     e0a:	ab e3       	ldi	r26, 0x3B	; 59
     e0c:	b0 e0       	ldi	r27, 0x00	; 0
     e0e:	eb e3       	ldi	r30, 0x3B	; 59
     e10:	f0 e0       	ldi	r31, 0x00	; 0
     e12:	80 81       	ld	r24, Z
     e14:	48 2f       	mov	r20, r24
     e16:	8a 81       	ldd	r24, Y+2	; 0x02
     e18:	28 2f       	mov	r18, r24
     e1a:	30 e0       	ldi	r19, 0x00	; 0
     e1c:	81 e0       	ldi	r24, 0x01	; 1
     e1e:	90 e0       	ldi	r25, 0x00	; 0
     e20:	02 2e       	mov	r0, r18
     e22:	02 c0       	rjmp	.+4      	; 0xe28 <M_DIO_void_setPinValue+0xc4>
     e24:	88 0f       	add	r24, r24
     e26:	99 1f       	adc	r25, r25
     e28:	0a 94       	dec	r0
     e2a:	e2 f7       	brpl	.-8      	; 0xe24 <M_DIO_void_setPinValue+0xc0>
     e2c:	84 2b       	or	r24, r20
     e2e:	8c 93       	st	X, r24
     e30:	a7 c0       	rjmp	.+334    	; 0xf80 <M_DIO_void_setPinValue+0x21c>
				break;
		   }
			break;
		case PORTB_ID :
			switch (value)
     e32:	8b 81       	ldd	r24, Y+3	; 0x03
     e34:	28 2f       	mov	r18, r24
     e36:	30 e0       	ldi	r19, 0x00	; 0
     e38:	39 87       	std	Y+9, r19	; 0x09
     e3a:	28 87       	std	Y+8, r18	; 0x08
     e3c:	88 85       	ldd	r24, Y+8	; 0x08
     e3e:	99 85       	ldd	r25, Y+9	; 0x09
     e40:	00 97       	sbiw	r24, 0x00	; 0
     e42:	31 f0       	breq	.+12     	; 0xe50 <M_DIO_void_setPinValue+0xec>
     e44:	28 85       	ldd	r18, Y+8	; 0x08
     e46:	39 85       	ldd	r19, Y+9	; 0x09
     e48:	21 30       	cpi	r18, 0x01	; 1
     e4a:	31 05       	cpc	r19, r1
     e4c:	b1 f0       	breq	.+44     	; 0xe7a <M_DIO_void_setPinValue+0x116>
     e4e:	98 c0       	rjmp	.+304    	; 0xf80 <M_DIO_void_setPinValue+0x21c>
			{
			case LOW:
				 CLR_BIT(PORTB_REG,Pin);
     e50:	a8 e3       	ldi	r26, 0x38	; 56
     e52:	b0 e0       	ldi	r27, 0x00	; 0
     e54:	e8 e3       	ldi	r30, 0x38	; 56
     e56:	f0 e0       	ldi	r31, 0x00	; 0
     e58:	80 81       	ld	r24, Z
     e5a:	48 2f       	mov	r20, r24
     e5c:	8a 81       	ldd	r24, Y+2	; 0x02
     e5e:	28 2f       	mov	r18, r24
     e60:	30 e0       	ldi	r19, 0x00	; 0
     e62:	81 e0       	ldi	r24, 0x01	; 1
     e64:	90 e0       	ldi	r25, 0x00	; 0
     e66:	02 2e       	mov	r0, r18
     e68:	02 c0       	rjmp	.+4      	; 0xe6e <M_DIO_void_setPinValue+0x10a>
     e6a:	88 0f       	add	r24, r24
     e6c:	99 1f       	adc	r25, r25
     e6e:	0a 94       	dec	r0
     e70:	e2 f7       	brpl	.-8      	; 0xe6a <M_DIO_void_setPinValue+0x106>
     e72:	80 95       	com	r24
     e74:	84 23       	and	r24, r20
     e76:	8c 93       	st	X, r24
     e78:	83 c0       	rjmp	.+262    	; 0xf80 <M_DIO_void_setPinValue+0x21c>
				 break;
			case HIGH:
				 SET_BIT(PORTB_REG,Pin);
     e7a:	a8 e3       	ldi	r26, 0x38	; 56
     e7c:	b0 e0       	ldi	r27, 0x00	; 0
     e7e:	e8 e3       	ldi	r30, 0x38	; 56
     e80:	f0 e0       	ldi	r31, 0x00	; 0
     e82:	80 81       	ld	r24, Z
     e84:	48 2f       	mov	r20, r24
     e86:	8a 81       	ldd	r24, Y+2	; 0x02
     e88:	28 2f       	mov	r18, r24
     e8a:	30 e0       	ldi	r19, 0x00	; 0
     e8c:	81 e0       	ldi	r24, 0x01	; 1
     e8e:	90 e0       	ldi	r25, 0x00	; 0
     e90:	02 2e       	mov	r0, r18
     e92:	02 c0       	rjmp	.+4      	; 0xe98 <M_DIO_void_setPinValue+0x134>
     e94:	88 0f       	add	r24, r24
     e96:	99 1f       	adc	r25, r25
     e98:	0a 94       	dec	r0
     e9a:	e2 f7       	brpl	.-8      	; 0xe94 <M_DIO_void_setPinValue+0x130>
     e9c:	84 2b       	or	r24, r20
     e9e:	8c 93       	st	X, r24
     ea0:	6f c0       	rjmp	.+222    	; 0xf80 <M_DIO_void_setPinValue+0x21c>
				 break;
			}
			break;
		case PORTC_ID:
			switch (value)
     ea2:	8b 81       	ldd	r24, Y+3	; 0x03
     ea4:	28 2f       	mov	r18, r24
     ea6:	30 e0       	ldi	r19, 0x00	; 0
     ea8:	3f 83       	std	Y+7, r19	; 0x07
     eaa:	2e 83       	std	Y+6, r18	; 0x06
     eac:	8e 81       	ldd	r24, Y+6	; 0x06
     eae:	9f 81       	ldd	r25, Y+7	; 0x07
     eb0:	00 97       	sbiw	r24, 0x00	; 0
     eb2:	31 f0       	breq	.+12     	; 0xec0 <M_DIO_void_setPinValue+0x15c>
     eb4:	2e 81       	ldd	r18, Y+6	; 0x06
     eb6:	3f 81       	ldd	r19, Y+7	; 0x07
     eb8:	21 30       	cpi	r18, 0x01	; 1
     eba:	31 05       	cpc	r19, r1
     ebc:	b1 f0       	breq	.+44     	; 0xeea <M_DIO_void_setPinValue+0x186>
     ebe:	60 c0       	rjmp	.+192    	; 0xf80 <M_DIO_void_setPinValue+0x21c>
			{
			case LOW:
				 CLR_BIT(PORTC_REG,Pin);
     ec0:	a5 e3       	ldi	r26, 0x35	; 53
     ec2:	b0 e0       	ldi	r27, 0x00	; 0
     ec4:	e5 e3       	ldi	r30, 0x35	; 53
     ec6:	f0 e0       	ldi	r31, 0x00	; 0
     ec8:	80 81       	ld	r24, Z
     eca:	48 2f       	mov	r20, r24
     ecc:	8a 81       	ldd	r24, Y+2	; 0x02
     ece:	28 2f       	mov	r18, r24
     ed0:	30 e0       	ldi	r19, 0x00	; 0
     ed2:	81 e0       	ldi	r24, 0x01	; 1
     ed4:	90 e0       	ldi	r25, 0x00	; 0
     ed6:	02 2e       	mov	r0, r18
     ed8:	02 c0       	rjmp	.+4      	; 0xede <M_DIO_void_setPinValue+0x17a>
     eda:	88 0f       	add	r24, r24
     edc:	99 1f       	adc	r25, r25
     ede:	0a 94       	dec	r0
     ee0:	e2 f7       	brpl	.-8      	; 0xeda <M_DIO_void_setPinValue+0x176>
     ee2:	80 95       	com	r24
     ee4:	84 23       	and	r24, r20
     ee6:	8c 93       	st	X, r24
     ee8:	4b c0       	rjmp	.+150    	; 0xf80 <M_DIO_void_setPinValue+0x21c>
				break;
			case HIGH:
				 SET_BIT(PORTC_REG,Pin);
     eea:	a5 e3       	ldi	r26, 0x35	; 53
     eec:	b0 e0       	ldi	r27, 0x00	; 0
     eee:	e5 e3       	ldi	r30, 0x35	; 53
     ef0:	f0 e0       	ldi	r31, 0x00	; 0
     ef2:	80 81       	ld	r24, Z
     ef4:	48 2f       	mov	r20, r24
     ef6:	8a 81       	ldd	r24, Y+2	; 0x02
     ef8:	28 2f       	mov	r18, r24
     efa:	30 e0       	ldi	r19, 0x00	; 0
     efc:	81 e0       	ldi	r24, 0x01	; 1
     efe:	90 e0       	ldi	r25, 0x00	; 0
     f00:	02 2e       	mov	r0, r18
     f02:	02 c0       	rjmp	.+4      	; 0xf08 <M_DIO_void_setPinValue+0x1a4>
     f04:	88 0f       	add	r24, r24
     f06:	99 1f       	adc	r25, r25
     f08:	0a 94       	dec	r0
     f0a:	e2 f7       	brpl	.-8      	; 0xf04 <M_DIO_void_setPinValue+0x1a0>
     f0c:	84 2b       	or	r24, r20
     f0e:	8c 93       	st	X, r24
     f10:	37 c0       	rjmp	.+110    	; 0xf80 <M_DIO_void_setPinValue+0x21c>
				break;
			}
			break;
		case PORTD_ID :
			 switch (value)
     f12:	8b 81       	ldd	r24, Y+3	; 0x03
     f14:	28 2f       	mov	r18, r24
     f16:	30 e0       	ldi	r19, 0x00	; 0
     f18:	3d 83       	std	Y+5, r19	; 0x05
     f1a:	2c 83       	std	Y+4, r18	; 0x04
     f1c:	8c 81       	ldd	r24, Y+4	; 0x04
     f1e:	9d 81       	ldd	r25, Y+5	; 0x05
     f20:	00 97       	sbiw	r24, 0x00	; 0
     f22:	31 f0       	breq	.+12     	; 0xf30 <M_DIO_void_setPinValue+0x1cc>
     f24:	2c 81       	ldd	r18, Y+4	; 0x04
     f26:	3d 81       	ldd	r19, Y+5	; 0x05
     f28:	21 30       	cpi	r18, 0x01	; 1
     f2a:	31 05       	cpc	r19, r1
     f2c:	b1 f0       	breq	.+44     	; 0xf5a <M_DIO_void_setPinValue+0x1f6>
     f2e:	28 c0       	rjmp	.+80     	; 0xf80 <M_DIO_void_setPinValue+0x21c>
			 {
				case LOW:
				   CLR_BIT(PORTD_REG,Pin);
     f30:	a2 e3       	ldi	r26, 0x32	; 50
     f32:	b0 e0       	ldi	r27, 0x00	; 0
     f34:	e2 e3       	ldi	r30, 0x32	; 50
     f36:	f0 e0       	ldi	r31, 0x00	; 0
     f38:	80 81       	ld	r24, Z
     f3a:	48 2f       	mov	r20, r24
     f3c:	8a 81       	ldd	r24, Y+2	; 0x02
     f3e:	28 2f       	mov	r18, r24
     f40:	30 e0       	ldi	r19, 0x00	; 0
     f42:	81 e0       	ldi	r24, 0x01	; 1
     f44:	90 e0       	ldi	r25, 0x00	; 0
     f46:	02 2e       	mov	r0, r18
     f48:	02 c0       	rjmp	.+4      	; 0xf4e <M_DIO_void_setPinValue+0x1ea>
     f4a:	88 0f       	add	r24, r24
     f4c:	99 1f       	adc	r25, r25
     f4e:	0a 94       	dec	r0
     f50:	e2 f7       	brpl	.-8      	; 0xf4a <M_DIO_void_setPinValue+0x1e6>
     f52:	80 95       	com	r24
     f54:	84 23       	and	r24, r20
     f56:	8c 93       	st	X, r24
     f58:	13 c0       	rjmp	.+38     	; 0xf80 <M_DIO_void_setPinValue+0x21c>
					break;
				case HIGH:
					SET_BIT(PORTD_REG,Pin);
     f5a:	a2 e3       	ldi	r26, 0x32	; 50
     f5c:	b0 e0       	ldi	r27, 0x00	; 0
     f5e:	e2 e3       	ldi	r30, 0x32	; 50
     f60:	f0 e0       	ldi	r31, 0x00	; 0
     f62:	80 81       	ld	r24, Z
     f64:	48 2f       	mov	r20, r24
     f66:	8a 81       	ldd	r24, Y+2	; 0x02
     f68:	28 2f       	mov	r18, r24
     f6a:	30 e0       	ldi	r19, 0x00	; 0
     f6c:	81 e0       	ldi	r24, 0x01	; 1
     f6e:	90 e0       	ldi	r25, 0x00	; 0
     f70:	02 2e       	mov	r0, r18
     f72:	02 c0       	rjmp	.+4      	; 0xf78 <M_DIO_void_setPinValue+0x214>
     f74:	88 0f       	add	r24, r24
     f76:	99 1f       	adc	r25, r25
     f78:	0a 94       	dec	r0
     f7a:	e2 f7       	brpl	.-8      	; 0xf74 <M_DIO_void_setPinValue+0x210>
     f7c:	84 2b       	or	r24, r20
     f7e:	8c 93       	st	X, r24
					break;
			 }
			 break;
		}
}
     f80:	2d 96       	adiw	r28, 0x0d	; 13
     f82:	0f b6       	in	r0, 0x3f	; 63
     f84:	f8 94       	cli
     f86:	de bf       	out	0x3e, r29	; 62
     f88:	0f be       	out	0x3f, r0	; 63
     f8a:	cd bf       	out	0x3d, r28	; 61
     f8c:	cf 91       	pop	r28
     f8e:	df 91       	pop	r29
     f90:	08 95       	ret

00000f92 <M_DIO_void_getPinValue>:
void M_DIO_void_getPinValue(u8 Port, u8 Pin, u8 *pvalue)
{
     f92:	df 93       	push	r29
     f94:	cf 93       	push	r28
     f96:	00 d0       	rcall	.+0      	; 0xf98 <M_DIO_void_getPinValue+0x6>
     f98:	00 d0       	rcall	.+0      	; 0xf9a <M_DIO_void_getPinValue+0x8>
     f9a:	00 d0       	rcall	.+0      	; 0xf9c <M_DIO_void_getPinValue+0xa>
     f9c:	cd b7       	in	r28, 0x3d	; 61
     f9e:	de b7       	in	r29, 0x3e	; 62
     fa0:	89 83       	std	Y+1, r24	; 0x01
     fa2:	6a 83       	std	Y+2, r22	; 0x02
     fa4:	5c 83       	std	Y+4, r21	; 0x04
     fa6:	4b 83       	std	Y+3, r20	; 0x03
	switch (Port){
     fa8:	89 81       	ldd	r24, Y+1	; 0x01
     faa:	28 2f       	mov	r18, r24
     fac:	30 e0       	ldi	r19, 0x00	; 0
     fae:	3e 83       	std	Y+6, r19	; 0x06
     fb0:	2d 83       	std	Y+5, r18	; 0x05
     fb2:	4d 81       	ldd	r20, Y+5	; 0x05
     fb4:	5e 81       	ldd	r21, Y+6	; 0x06
     fb6:	41 30       	cpi	r20, 0x01	; 1
     fb8:	51 05       	cpc	r21, r1
     fba:	59 f1       	breq	.+86     	; 0x1012 <M_DIO_void_getPinValue+0x80>
     fbc:	8d 81       	ldd	r24, Y+5	; 0x05
     fbe:	9e 81       	ldd	r25, Y+6	; 0x06
     fc0:	82 30       	cpi	r24, 0x02	; 2
     fc2:	91 05       	cpc	r25, r1
     fc4:	34 f4       	brge	.+12     	; 0xfd2 <M_DIO_void_getPinValue+0x40>
     fc6:	2d 81       	ldd	r18, Y+5	; 0x05
     fc8:	3e 81       	ldd	r19, Y+6	; 0x06
     fca:	21 15       	cp	r18, r1
     fcc:	31 05       	cpc	r19, r1
     fce:	69 f0       	breq	.+26     	; 0xfea <M_DIO_void_getPinValue+0x58>
     fd0:	5b c0       	rjmp	.+182    	; 0x1088 <M_DIO_void_getPinValue+0xf6>
     fd2:	4d 81       	ldd	r20, Y+5	; 0x05
     fd4:	5e 81       	ldd	r21, Y+6	; 0x06
     fd6:	42 30       	cpi	r20, 0x02	; 2
     fd8:	51 05       	cpc	r21, r1
     fda:	79 f1       	breq	.+94     	; 0x103a <M_DIO_void_getPinValue+0xa8>
     fdc:	8d 81       	ldd	r24, Y+5	; 0x05
     fde:	9e 81       	ldd	r25, Y+6	; 0x06
     fe0:	83 30       	cpi	r24, 0x03	; 3
     fe2:	91 05       	cpc	r25, r1
     fe4:	09 f4       	brne	.+2      	; 0xfe8 <M_DIO_void_getPinValue+0x56>
     fe6:	3d c0       	rjmp	.+122    	; 0x1062 <M_DIO_void_getPinValue+0xd0>
     fe8:	4f c0       	rjmp	.+158    	; 0x1088 <M_DIO_void_getPinValue+0xf6>
	case PORTA_ID:
		*pvalue = GET_BIT(PINA_REG,Pin);
     fea:	e9 e3       	ldi	r30, 0x39	; 57
     fec:	f0 e0       	ldi	r31, 0x00	; 0
     fee:	80 81       	ld	r24, Z
     ff0:	28 2f       	mov	r18, r24
     ff2:	30 e0       	ldi	r19, 0x00	; 0
     ff4:	8a 81       	ldd	r24, Y+2	; 0x02
     ff6:	88 2f       	mov	r24, r24
     ff8:	90 e0       	ldi	r25, 0x00	; 0
     ffa:	a9 01       	movw	r20, r18
     ffc:	02 c0       	rjmp	.+4      	; 0x1002 <M_DIO_void_getPinValue+0x70>
     ffe:	55 95       	asr	r21
    1000:	47 95       	ror	r20
    1002:	8a 95       	dec	r24
    1004:	e2 f7       	brpl	.-8      	; 0xffe <M_DIO_void_getPinValue+0x6c>
    1006:	ca 01       	movw	r24, r20
    1008:	81 70       	andi	r24, 0x01	; 1
    100a:	eb 81       	ldd	r30, Y+3	; 0x03
    100c:	fc 81       	ldd	r31, Y+4	; 0x04
    100e:	80 83       	st	Z, r24
    1010:	3b c0       	rjmp	.+118    	; 0x1088 <M_DIO_void_getPinValue+0xf6>
		break;
	case PORTB_ID:
		*pvalue=GET_BIT(PINB_REG,Pin);
    1012:	e6 e3       	ldi	r30, 0x36	; 54
    1014:	f0 e0       	ldi	r31, 0x00	; 0
    1016:	80 81       	ld	r24, Z
    1018:	28 2f       	mov	r18, r24
    101a:	30 e0       	ldi	r19, 0x00	; 0
    101c:	8a 81       	ldd	r24, Y+2	; 0x02
    101e:	88 2f       	mov	r24, r24
    1020:	90 e0       	ldi	r25, 0x00	; 0
    1022:	a9 01       	movw	r20, r18
    1024:	02 c0       	rjmp	.+4      	; 0x102a <M_DIO_void_getPinValue+0x98>
    1026:	55 95       	asr	r21
    1028:	47 95       	ror	r20
    102a:	8a 95       	dec	r24
    102c:	e2 f7       	brpl	.-8      	; 0x1026 <M_DIO_void_getPinValue+0x94>
    102e:	ca 01       	movw	r24, r20
    1030:	81 70       	andi	r24, 0x01	; 1
    1032:	eb 81       	ldd	r30, Y+3	; 0x03
    1034:	fc 81       	ldd	r31, Y+4	; 0x04
    1036:	80 83       	st	Z, r24
    1038:	27 c0       	rjmp	.+78     	; 0x1088 <M_DIO_void_getPinValue+0xf6>
		break;
	case PORTC_ID:
		*pvalue=GET_BIT(PINC_REG,Pin);
    103a:	e3 e3       	ldi	r30, 0x33	; 51
    103c:	f0 e0       	ldi	r31, 0x00	; 0
    103e:	80 81       	ld	r24, Z
    1040:	28 2f       	mov	r18, r24
    1042:	30 e0       	ldi	r19, 0x00	; 0
    1044:	8a 81       	ldd	r24, Y+2	; 0x02
    1046:	88 2f       	mov	r24, r24
    1048:	90 e0       	ldi	r25, 0x00	; 0
    104a:	a9 01       	movw	r20, r18
    104c:	02 c0       	rjmp	.+4      	; 0x1052 <M_DIO_void_getPinValue+0xc0>
    104e:	55 95       	asr	r21
    1050:	47 95       	ror	r20
    1052:	8a 95       	dec	r24
    1054:	e2 f7       	brpl	.-8      	; 0x104e <M_DIO_void_getPinValue+0xbc>
    1056:	ca 01       	movw	r24, r20
    1058:	81 70       	andi	r24, 0x01	; 1
    105a:	eb 81       	ldd	r30, Y+3	; 0x03
    105c:	fc 81       	ldd	r31, Y+4	; 0x04
    105e:	80 83       	st	Z, r24
    1060:	13 c0       	rjmp	.+38     	; 0x1088 <M_DIO_void_getPinValue+0xf6>
		break;
	case PORTD_ID:
		*pvalue=GET_BIT(PIND_REG,Pin);
    1062:	e0 e3       	ldi	r30, 0x30	; 48
    1064:	f0 e0       	ldi	r31, 0x00	; 0
    1066:	80 81       	ld	r24, Z
    1068:	28 2f       	mov	r18, r24
    106a:	30 e0       	ldi	r19, 0x00	; 0
    106c:	8a 81       	ldd	r24, Y+2	; 0x02
    106e:	88 2f       	mov	r24, r24
    1070:	90 e0       	ldi	r25, 0x00	; 0
    1072:	a9 01       	movw	r20, r18
    1074:	02 c0       	rjmp	.+4      	; 0x107a <M_DIO_void_getPinValue+0xe8>
    1076:	55 95       	asr	r21
    1078:	47 95       	ror	r20
    107a:	8a 95       	dec	r24
    107c:	e2 f7       	brpl	.-8      	; 0x1076 <M_DIO_void_getPinValue+0xe4>
    107e:	ca 01       	movw	r24, r20
    1080:	81 70       	andi	r24, 0x01	; 1
    1082:	eb 81       	ldd	r30, Y+3	; 0x03
    1084:	fc 81       	ldd	r31, Y+4	; 0x04
    1086:	80 83       	st	Z, r24
		break;
	}
}
    1088:	26 96       	adiw	r28, 0x06	; 6
    108a:	0f b6       	in	r0, 0x3f	; 63
    108c:	f8 94       	cli
    108e:	de bf       	out	0x3e, r29	; 62
    1090:	0f be       	out	0x3f, r0	; 63
    1092:	cd bf       	out	0x3d, r28	; 61
    1094:	cf 91       	pop	r28
    1096:	df 91       	pop	r29
    1098:	08 95       	ret

0000109a <M_DIO_void_TogPinValue>:
void M_DIO_void_TogPinValue(u8 Port, u8 Pin)
{
    109a:	df 93       	push	r29
    109c:	cf 93       	push	r28
    109e:	00 d0       	rcall	.+0      	; 0x10a0 <M_DIO_void_TogPinValue+0x6>
    10a0:	00 d0       	rcall	.+0      	; 0x10a2 <M_DIO_void_TogPinValue+0x8>
    10a2:	cd b7       	in	r28, 0x3d	; 61
    10a4:	de b7       	in	r29, 0x3e	; 62
    10a6:	89 83       	std	Y+1, r24	; 0x01
    10a8:	6a 83       	std	Y+2, r22	; 0x02
	switch (Port){
    10aa:	89 81       	ldd	r24, Y+1	; 0x01
    10ac:	28 2f       	mov	r18, r24
    10ae:	30 e0       	ldi	r19, 0x00	; 0
    10b0:	3c 83       	std	Y+4, r19	; 0x04
    10b2:	2b 83       	std	Y+3, r18	; 0x03
    10b4:	8b 81       	ldd	r24, Y+3	; 0x03
    10b6:	9c 81       	ldd	r25, Y+4	; 0x04
    10b8:	81 30       	cpi	r24, 0x01	; 1
    10ba:	91 05       	cpc	r25, r1
    10bc:	49 f1       	breq	.+82     	; 0x1110 <M_DIO_void_TogPinValue+0x76>
    10be:	2b 81       	ldd	r18, Y+3	; 0x03
    10c0:	3c 81       	ldd	r19, Y+4	; 0x04
    10c2:	22 30       	cpi	r18, 0x02	; 2
    10c4:	31 05       	cpc	r19, r1
    10c6:	2c f4       	brge	.+10     	; 0x10d2 <M_DIO_void_TogPinValue+0x38>
    10c8:	8b 81       	ldd	r24, Y+3	; 0x03
    10ca:	9c 81       	ldd	r25, Y+4	; 0x04
    10cc:	00 97       	sbiw	r24, 0x00	; 0
    10ce:	61 f0       	breq	.+24     	; 0x10e8 <M_DIO_void_TogPinValue+0x4e>
    10d0:	5a c0       	rjmp	.+180    	; 0x1186 <M_DIO_void_TogPinValue+0xec>
    10d2:	2b 81       	ldd	r18, Y+3	; 0x03
    10d4:	3c 81       	ldd	r19, Y+4	; 0x04
    10d6:	22 30       	cpi	r18, 0x02	; 2
    10d8:	31 05       	cpc	r19, r1
    10da:	71 f1       	breq	.+92     	; 0x1138 <M_DIO_void_TogPinValue+0x9e>
    10dc:	8b 81       	ldd	r24, Y+3	; 0x03
    10de:	9c 81       	ldd	r25, Y+4	; 0x04
    10e0:	83 30       	cpi	r24, 0x03	; 3
    10e2:	91 05       	cpc	r25, r1
    10e4:	e9 f1       	breq	.+122    	; 0x1160 <M_DIO_void_TogPinValue+0xc6>
    10e6:	4f c0       	rjmp	.+158    	; 0x1186 <M_DIO_void_TogPinValue+0xec>
		case PORTA_ID:
			TOG_BIT(PORTA_REG,Pin);
    10e8:	ab e3       	ldi	r26, 0x3B	; 59
    10ea:	b0 e0       	ldi	r27, 0x00	; 0
    10ec:	eb e3       	ldi	r30, 0x3B	; 59
    10ee:	f0 e0       	ldi	r31, 0x00	; 0
    10f0:	80 81       	ld	r24, Z
    10f2:	48 2f       	mov	r20, r24
    10f4:	8a 81       	ldd	r24, Y+2	; 0x02
    10f6:	28 2f       	mov	r18, r24
    10f8:	30 e0       	ldi	r19, 0x00	; 0
    10fa:	81 e0       	ldi	r24, 0x01	; 1
    10fc:	90 e0       	ldi	r25, 0x00	; 0
    10fe:	02 2e       	mov	r0, r18
    1100:	02 c0       	rjmp	.+4      	; 0x1106 <M_DIO_void_TogPinValue+0x6c>
    1102:	88 0f       	add	r24, r24
    1104:	99 1f       	adc	r25, r25
    1106:	0a 94       	dec	r0
    1108:	e2 f7       	brpl	.-8      	; 0x1102 <M_DIO_void_TogPinValue+0x68>
    110a:	84 27       	eor	r24, r20
    110c:	8c 93       	st	X, r24
    110e:	3b c0       	rjmp	.+118    	; 0x1186 <M_DIO_void_TogPinValue+0xec>
			break;
		case PORTB_ID:
			TOG_BIT(PORTB_REG,Pin);
    1110:	a8 e3       	ldi	r26, 0x38	; 56
    1112:	b0 e0       	ldi	r27, 0x00	; 0
    1114:	e8 e3       	ldi	r30, 0x38	; 56
    1116:	f0 e0       	ldi	r31, 0x00	; 0
    1118:	80 81       	ld	r24, Z
    111a:	48 2f       	mov	r20, r24
    111c:	8a 81       	ldd	r24, Y+2	; 0x02
    111e:	28 2f       	mov	r18, r24
    1120:	30 e0       	ldi	r19, 0x00	; 0
    1122:	81 e0       	ldi	r24, 0x01	; 1
    1124:	90 e0       	ldi	r25, 0x00	; 0
    1126:	02 2e       	mov	r0, r18
    1128:	02 c0       	rjmp	.+4      	; 0x112e <M_DIO_void_TogPinValue+0x94>
    112a:	88 0f       	add	r24, r24
    112c:	99 1f       	adc	r25, r25
    112e:	0a 94       	dec	r0
    1130:	e2 f7       	brpl	.-8      	; 0x112a <M_DIO_void_TogPinValue+0x90>
    1132:	84 27       	eor	r24, r20
    1134:	8c 93       	st	X, r24
    1136:	27 c0       	rjmp	.+78     	; 0x1186 <M_DIO_void_TogPinValue+0xec>
			break;
		case PORTC_ID:
			TOG_BIT(PORTC_REG,Pin);
    1138:	a5 e3       	ldi	r26, 0x35	; 53
    113a:	b0 e0       	ldi	r27, 0x00	; 0
    113c:	e5 e3       	ldi	r30, 0x35	; 53
    113e:	f0 e0       	ldi	r31, 0x00	; 0
    1140:	80 81       	ld	r24, Z
    1142:	48 2f       	mov	r20, r24
    1144:	8a 81       	ldd	r24, Y+2	; 0x02
    1146:	28 2f       	mov	r18, r24
    1148:	30 e0       	ldi	r19, 0x00	; 0
    114a:	81 e0       	ldi	r24, 0x01	; 1
    114c:	90 e0       	ldi	r25, 0x00	; 0
    114e:	02 2e       	mov	r0, r18
    1150:	02 c0       	rjmp	.+4      	; 0x1156 <M_DIO_void_TogPinValue+0xbc>
    1152:	88 0f       	add	r24, r24
    1154:	99 1f       	adc	r25, r25
    1156:	0a 94       	dec	r0
    1158:	e2 f7       	brpl	.-8      	; 0x1152 <M_DIO_void_TogPinValue+0xb8>
    115a:	84 27       	eor	r24, r20
    115c:	8c 93       	st	X, r24
    115e:	13 c0       	rjmp	.+38     	; 0x1186 <M_DIO_void_TogPinValue+0xec>
			break;
		case PORTD_ID:
			TOG_BIT(PORTD_REG,Pin);
    1160:	a2 e3       	ldi	r26, 0x32	; 50
    1162:	b0 e0       	ldi	r27, 0x00	; 0
    1164:	e2 e3       	ldi	r30, 0x32	; 50
    1166:	f0 e0       	ldi	r31, 0x00	; 0
    1168:	80 81       	ld	r24, Z
    116a:	48 2f       	mov	r20, r24
    116c:	8a 81       	ldd	r24, Y+2	; 0x02
    116e:	28 2f       	mov	r18, r24
    1170:	30 e0       	ldi	r19, 0x00	; 0
    1172:	81 e0       	ldi	r24, 0x01	; 1
    1174:	90 e0       	ldi	r25, 0x00	; 0
    1176:	02 2e       	mov	r0, r18
    1178:	02 c0       	rjmp	.+4      	; 0x117e <M_DIO_void_TogPinValue+0xe4>
    117a:	88 0f       	add	r24, r24
    117c:	99 1f       	adc	r25, r25
    117e:	0a 94       	dec	r0
    1180:	e2 f7       	brpl	.-8      	; 0x117a <M_DIO_void_TogPinValue+0xe0>
    1182:	84 27       	eor	r24, r20
    1184:	8c 93       	st	X, r24
			break;
		}


}
    1186:	0f 90       	pop	r0
    1188:	0f 90       	pop	r0
    118a:	0f 90       	pop	r0
    118c:	0f 90       	pop	r0
    118e:	cf 91       	pop	r28
    1190:	df 91       	pop	r29
    1192:	08 95       	ret

00001194 <H_Led_void_ledInit>:
#include "LED_priv.h"
#include"LED_config.h"
#include"LED_int.h"

void  H_Led_void_ledInit(u8 LedID)
{
    1194:	df 93       	push	r29
    1196:	cf 93       	push	r28
    1198:	00 d0       	rcall	.+0      	; 0x119a <H_Led_void_ledInit+0x6>
    119a:	0f 92       	push	r0
    119c:	cd b7       	in	r28, 0x3d	; 61
    119e:	de b7       	in	r29, 0x3e	; 62
    11a0:	89 83       	std	Y+1, r24	; 0x01
	switch (LedID)
    11a2:	89 81       	ldd	r24, Y+1	; 0x01
    11a4:	28 2f       	mov	r18, r24
    11a6:	30 e0       	ldi	r19, 0x00	; 0
    11a8:	3b 83       	std	Y+3, r19	; 0x03
    11aa:	2a 83       	std	Y+2, r18	; 0x02
    11ac:	8a 81       	ldd	r24, Y+2	; 0x02
    11ae:	9b 81       	ldd	r25, Y+3	; 0x03
    11b0:	81 30       	cpi	r24, 0x01	; 1
    11b2:	91 05       	cpc	r25, r1
    11b4:	79 f0       	breq	.+30     	; 0x11d4 <H_Led_void_ledInit+0x40>
    11b6:	2a 81       	ldd	r18, Y+2	; 0x02
    11b8:	3b 81       	ldd	r19, Y+3	; 0x03
    11ba:	22 30       	cpi	r18, 0x02	; 2
    11bc:	31 05       	cpc	r19, r1
    11be:	81 f0       	breq	.+32     	; 0x11e0 <H_Led_void_ledInit+0x4c>
    11c0:	8a 81       	ldd	r24, Y+2	; 0x02
    11c2:	9b 81       	ldd	r25, Y+3	; 0x03
    11c4:	00 97       	sbiw	r24, 0x00	; 0
    11c6:	89 f4       	brne	.+34     	; 0x11ea <H_Led_void_ledInit+0x56>
	{
	case RED_LED :
			M_DIO_void_setPinDir(LED_RED_PORT,  LED_RED_PIN , OUT);
    11c8:	82 e0       	ldi	r24, 0x02	; 2
    11ca:	60 e0       	ldi	r22, 0x00	; 0
    11cc:	41 e0       	ldi	r20, 0x01	; 1
    11ce:	0e 94 9b 05 	call	0xb36	; 0xb36 <M_DIO_void_setPinDir>
    11d2:	0b c0       	rjmp	.+22     	; 0x11ea <H_Led_void_ledInit+0x56>
		break;
	case GRN_LED :
			M_DIO_void_setPinDir(LED_GRN_PORT,  LED_GRN_PIN , OUT);
    11d4:	82 e0       	ldi	r24, 0x02	; 2
    11d6:	62 e0       	ldi	r22, 0x02	; 2
    11d8:	41 e0       	ldi	r20, 0x01	; 1
    11da:	0e 94 9b 05 	call	0xb36	; 0xb36 <M_DIO_void_setPinDir>
    11de:	05 c0       	rjmp	.+10     	; 0x11ea <H_Led_void_ledInit+0x56>
			break;
	case BLU_LED :
			M_DIO_void_setPinDir(LED_BLU_PORT,  LED_BLU_PIN , OUT);
    11e0:	82 e0       	ldi	r24, 0x02	; 2
    11e2:	61 e0       	ldi	r22, 0x01	; 1
    11e4:	41 e0       	ldi	r20, 0x01	; 1
    11e6:	0e 94 9b 05 	call	0xb36	; 0xb36 <M_DIO_void_setPinDir>
			break;
	}
}
    11ea:	0f 90       	pop	r0
    11ec:	0f 90       	pop	r0
    11ee:	0f 90       	pop	r0
    11f0:	cf 91       	pop	r28
    11f2:	df 91       	pop	r29
    11f4:	08 95       	ret

000011f6 <H_Led_void_setON>:


void  H_Led_void_setON(u8 LedID)
{
    11f6:	df 93       	push	r29
    11f8:	cf 93       	push	r28
    11fa:	00 d0       	rcall	.+0      	; 0x11fc <H_Led_void_setON+0x6>
    11fc:	0f 92       	push	r0
    11fe:	cd b7       	in	r28, 0x3d	; 61
    1200:	de b7       	in	r29, 0x3e	; 62
    1202:	89 83       	std	Y+1, r24	; 0x01
	switch(LedID)
    1204:	89 81       	ldd	r24, Y+1	; 0x01
    1206:	28 2f       	mov	r18, r24
    1208:	30 e0       	ldi	r19, 0x00	; 0
    120a:	3b 83       	std	Y+3, r19	; 0x03
    120c:	2a 83       	std	Y+2, r18	; 0x02
    120e:	8a 81       	ldd	r24, Y+2	; 0x02
    1210:	9b 81       	ldd	r25, Y+3	; 0x03
    1212:	81 30       	cpi	r24, 0x01	; 1
    1214:	91 05       	cpc	r25, r1
    1216:	79 f0       	breq	.+30     	; 0x1236 <H_Led_void_setON+0x40>
    1218:	2a 81       	ldd	r18, Y+2	; 0x02
    121a:	3b 81       	ldd	r19, Y+3	; 0x03
    121c:	22 30       	cpi	r18, 0x02	; 2
    121e:	31 05       	cpc	r19, r1
    1220:	81 f0       	breq	.+32     	; 0x1242 <H_Led_void_setON+0x4c>
    1222:	8a 81       	ldd	r24, Y+2	; 0x02
    1224:	9b 81       	ldd	r25, Y+3	; 0x03
    1226:	00 97       	sbiw	r24, 0x00	; 0
    1228:	89 f4       	brne	.+34     	; 0x124c <H_Led_void_setON+0x56>
	{
	case RED_LED :
#if (LED_RED_DIRECTION == LED_FORWARD )
		M_DIO_void_setPinValue(LED_RED_PORT,LED_RED_PIN,HIGH);
    122a:	82 e0       	ldi	r24, 0x02	; 2
    122c:	60 e0       	ldi	r22, 0x00	; 0
    122e:	41 e0       	ldi	r20, 0x01	; 1
    1230:	0e 94 b2 06 	call	0xd64	; 0xd64 <M_DIO_void_setPinValue>
    1234:	0b c0       	rjmp	.+22     	; 0x124c <H_Led_void_setON+0x56>
#endif
		break;

	case GRN_LED :
#if (LED_GRN_DIRECTION == LED_FORWARD )
		M_DIO_void_setPinValue(LED_GRN_PORT,LED_GRN_PIN,HIGH);
    1236:	82 e0       	ldi	r24, 0x02	; 2
    1238:	62 e0       	ldi	r22, 0x02	; 2
    123a:	41 e0       	ldi	r20, 0x01	; 1
    123c:	0e 94 b2 06 	call	0xd64	; 0xd64 <M_DIO_void_setPinValue>
    1240:	05 c0       	rjmp	.+10     	; 0x124c <H_Led_void_setON+0x56>
		M_DIO_void_setPinValue(LED_GRN_PORT,LED_GRN_PIN,LOW);
#endif
		break;
	case BLU_LED :
	#if (LED_BLU_DIRECTION == LED_FORWARD )
			M_DIO_void_setPinValue(LED_BLU_PORT,LED_BLU_PIN,HIGH);
    1242:	82 e0       	ldi	r24, 0x02	; 2
    1244:	61 e0       	ldi	r22, 0x01	; 1
    1246:	41 e0       	ldi	r20, 0x01	; 1
    1248:	0e 94 b2 06 	call	0xd64	; 0xd64 <M_DIO_void_setPinValue>
			break;



	}
}
    124c:	0f 90       	pop	r0
    124e:	0f 90       	pop	r0
    1250:	0f 90       	pop	r0
    1252:	cf 91       	pop	r28
    1254:	df 91       	pop	r29
    1256:	08 95       	ret

00001258 <H_Led_void_setOFF>:
void  H_Led_void_setOFF(u8 LedID)
{
    1258:	df 93       	push	r29
    125a:	cf 93       	push	r28
    125c:	00 d0       	rcall	.+0      	; 0x125e <H_Led_void_setOFF+0x6>
    125e:	0f 92       	push	r0
    1260:	cd b7       	in	r28, 0x3d	; 61
    1262:	de b7       	in	r29, 0x3e	; 62
    1264:	89 83       	std	Y+1, r24	; 0x01
	switch(LedID)
    1266:	89 81       	ldd	r24, Y+1	; 0x01
    1268:	28 2f       	mov	r18, r24
    126a:	30 e0       	ldi	r19, 0x00	; 0
    126c:	3b 83       	std	Y+3, r19	; 0x03
    126e:	2a 83       	std	Y+2, r18	; 0x02
    1270:	8a 81       	ldd	r24, Y+2	; 0x02
    1272:	9b 81       	ldd	r25, Y+3	; 0x03
    1274:	81 30       	cpi	r24, 0x01	; 1
    1276:	91 05       	cpc	r25, r1
    1278:	79 f0       	breq	.+30     	; 0x1298 <H_Led_void_setOFF+0x40>
    127a:	2a 81       	ldd	r18, Y+2	; 0x02
    127c:	3b 81       	ldd	r19, Y+3	; 0x03
    127e:	22 30       	cpi	r18, 0x02	; 2
    1280:	31 05       	cpc	r19, r1
    1282:	81 f0       	breq	.+32     	; 0x12a4 <H_Led_void_setOFF+0x4c>
    1284:	8a 81       	ldd	r24, Y+2	; 0x02
    1286:	9b 81       	ldd	r25, Y+3	; 0x03
    1288:	00 97       	sbiw	r24, 0x00	; 0
    128a:	89 f4       	brne	.+34     	; 0x12ae <H_Led_void_setOFF+0x56>
		{
		case RED_LED :
	#if (LED_RED_DIRECTION == LED_FORWARD )
			M_DIO_void_setPinValue(LED_RED_PORT,LED_RED_PIN,LOW);
    128c:	82 e0       	ldi	r24, 0x02	; 2
    128e:	60 e0       	ldi	r22, 0x00	; 0
    1290:	40 e0       	ldi	r20, 0x00	; 0
    1292:	0e 94 b2 06 	call	0xd64	; 0xd64 <M_DIO_void_setPinValue>
    1296:	0b c0       	rjmp	.+22     	; 0x12ae <H_Led_void_setOFF+0x56>
	#endif
			break;

		case GRN_LED :
	#if (LED_GRN_DIRECTION == LED_FORWARD )
			M_DIO_void_setPinValue(LED_GRN_PORT,LED_GRN_PIN,LOW);
    1298:	82 e0       	ldi	r24, 0x02	; 2
    129a:	62 e0       	ldi	r22, 0x02	; 2
    129c:	40 e0       	ldi	r20, 0x00	; 0
    129e:	0e 94 b2 06 	call	0xd64	; 0xd64 <M_DIO_void_setPinValue>
    12a2:	05 c0       	rjmp	.+10     	; 0x12ae <H_Led_void_setOFF+0x56>
			M_DIO_void_setPinValue(LED_GRN_PORT,LED_GRN_PIN,HIGH);
	#endif
			break;
		case BLU_LED :
		#if (LED_BLU_DIRECTION == LED_FORWARD )
				M_DIO_void_setPinValue(LED_BLU_PORT,LED_BLU_PIN,LOW);
    12a4:	82 e0       	ldi	r24, 0x02	; 2
    12a6:	61 e0       	ldi	r22, 0x01	; 1
    12a8:	40 e0       	ldi	r20, 0x00	; 0
    12aa:	0e 94 b2 06 	call	0xd64	; 0xd64 <M_DIO_void_setPinValue>
				M_DIO_void_setPinValue(LED_BLU_PORT,LED_BLU_PIN,HIGH);
		#endif
				break;

		}
}
    12ae:	0f 90       	pop	r0
    12b0:	0f 90       	pop	r0
    12b2:	0f 90       	pop	r0
    12b4:	cf 91       	pop	r28
    12b6:	df 91       	pop	r29
    12b8:	08 95       	ret

000012ba <H_Led_void_toggle>:

void  H_Led_void_toggle(u8 LedID)
{
    12ba:	df 93       	push	r29
    12bc:	cf 93       	push	r28
    12be:	00 d0       	rcall	.+0      	; 0x12c0 <H_Led_void_toggle+0x6>
    12c0:	0f 92       	push	r0
    12c2:	cd b7       	in	r28, 0x3d	; 61
    12c4:	de b7       	in	r29, 0x3e	; 62
    12c6:	89 83       	std	Y+1, r24	; 0x01
	switch (LedID)
    12c8:	89 81       	ldd	r24, Y+1	; 0x01
    12ca:	28 2f       	mov	r18, r24
    12cc:	30 e0       	ldi	r19, 0x00	; 0
    12ce:	3b 83       	std	Y+3, r19	; 0x03
    12d0:	2a 83       	std	Y+2, r18	; 0x02
    12d2:	8a 81       	ldd	r24, Y+2	; 0x02
    12d4:	9b 81       	ldd	r25, Y+3	; 0x03
    12d6:	81 30       	cpi	r24, 0x01	; 1
    12d8:	91 05       	cpc	r25, r1
    12da:	71 f0       	breq	.+28     	; 0x12f8 <H_Led_void_toggle+0x3e>
    12dc:	2a 81       	ldd	r18, Y+2	; 0x02
    12de:	3b 81       	ldd	r19, Y+3	; 0x03
    12e0:	22 30       	cpi	r18, 0x02	; 2
    12e2:	31 05       	cpc	r19, r1
    12e4:	71 f0       	breq	.+28     	; 0x1302 <H_Led_void_toggle+0x48>
    12e6:	8a 81       	ldd	r24, Y+2	; 0x02
    12e8:	9b 81       	ldd	r25, Y+3	; 0x03
    12ea:	00 97       	sbiw	r24, 0x00	; 0
    12ec:	71 f4       	brne	.+28     	; 0x130a <H_Led_void_toggle+0x50>
		{
		case RED_LED :
			 M_DIO_void_TogPinValue(LED_RED_PORT,LED_RED_PIN);
    12ee:	82 e0       	ldi	r24, 0x02	; 2
    12f0:	60 e0       	ldi	r22, 0x00	; 0
    12f2:	0e 94 4d 08 	call	0x109a	; 0x109a <M_DIO_void_TogPinValue>
    12f6:	09 c0       	rjmp	.+18     	; 0x130a <H_Led_void_toggle+0x50>

			break;
		case GRN_LED :
			 M_DIO_void_TogPinValue(LED_GRN_PORT, LED_GRN_PIN);
    12f8:	82 e0       	ldi	r24, 0x02	; 2
    12fa:	62 e0       	ldi	r22, 0x02	; 2
    12fc:	0e 94 4d 08 	call	0x109a	; 0x109a <M_DIO_void_TogPinValue>
    1300:	04 c0       	rjmp	.+8      	; 0x130a <H_Led_void_toggle+0x50>

				break;
		case BLU_LED :
			 M_DIO_void_TogPinValue(LED_BLU_PORT,LED_BLU_PIN);
    1302:	82 e0       	ldi	r24, 0x02	; 2
    1304:	61 e0       	ldi	r22, 0x01	; 1
    1306:	0e 94 4d 08 	call	0x109a	; 0x109a <M_DIO_void_TogPinValue>

				break;
		}
}
    130a:	0f 90       	pop	r0
    130c:	0f 90       	pop	r0
    130e:	0f 90       	pop	r0
    1310:	cf 91       	pop	r28
    1312:	df 91       	pop	r29
    1314:	08 95       	ret

00001316 <Animation1>:

void Animation1()
{
    1316:	0f 93       	push	r16
    1318:	1f 93       	push	r17
    131a:	df 93       	push	r29
    131c:	cf 93       	push	r28
    131e:	cd b7       	in	r28, 0x3d	; 61
    1320:	de b7       	in	r29, 0x3e	; 62
    1322:	c4 55       	subi	r28, 0x54	; 84
    1324:	d0 40       	sbci	r29, 0x00	; 0
    1326:	0f b6       	in	r0, 0x3f	; 63
    1328:	f8 94       	cli
    132a:	de bf       	out	0x3e, r29	; 62
    132c:	0f be       	out	0x3f, r0	; 63
    132e:	cd bf       	out	0x3d, r28	; 61
	H_Led_void_setON(RED_LED);
    1330:	80 e0       	ldi	r24, 0x00	; 0
    1332:	0e 94 fb 08 	call	0x11f6	; 0x11f6 <H_Led_void_setON>
	H_Led_void_setON(BLU_LED);
    1336:	82 e0       	ldi	r24, 0x02	; 2
    1338:	0e 94 fb 08 	call	0x11f6	; 0x11f6 <H_Led_void_setON>
    133c:	fe 01       	movw	r30, r28
    133e:	ef 5a       	subi	r30, 0xAF	; 175
    1340:	ff 4f       	sbci	r31, 0xFF	; 255
    1342:	80 e0       	ldi	r24, 0x00	; 0
    1344:	90 e0       	ldi	r25, 0x00	; 0
    1346:	aa ef       	ldi	r26, 0xFA	; 250
    1348:	b3 e4       	ldi	r27, 0x43	; 67
    134a:	80 83       	st	Z, r24
    134c:	91 83       	std	Z+1, r25	; 0x01
    134e:	a2 83       	std	Z+2, r26	; 0x02
    1350:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1352:	8e 01       	movw	r16, r28
    1354:	03 5b       	subi	r16, 0xB3	; 179
    1356:	1f 4f       	sbci	r17, 0xFF	; 255
    1358:	fe 01       	movw	r30, r28
    135a:	ef 5a       	subi	r30, 0xAF	; 175
    135c:	ff 4f       	sbci	r31, 0xFF	; 255
    135e:	60 81       	ld	r22, Z
    1360:	71 81       	ldd	r23, Z+1	; 0x01
    1362:	82 81       	ldd	r24, Z+2	; 0x02
    1364:	93 81       	ldd	r25, Z+3	; 0x03
    1366:	20 e0       	ldi	r18, 0x00	; 0
    1368:	30 e0       	ldi	r19, 0x00	; 0
    136a:	4a e7       	ldi	r20, 0x7A	; 122
    136c:	55 e4       	ldi	r21, 0x45	; 69
    136e:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1372:	dc 01       	movw	r26, r24
    1374:	cb 01       	movw	r24, r22
    1376:	f8 01       	movw	r30, r16
    1378:	80 83       	st	Z, r24
    137a:	91 83       	std	Z+1, r25	; 0x01
    137c:	a2 83       	std	Z+2, r26	; 0x02
    137e:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    1380:	fe 01       	movw	r30, r28
    1382:	e3 5b       	subi	r30, 0xB3	; 179
    1384:	ff 4f       	sbci	r31, 0xFF	; 255
    1386:	60 81       	ld	r22, Z
    1388:	71 81       	ldd	r23, Z+1	; 0x01
    138a:	82 81       	ldd	r24, Z+2	; 0x02
    138c:	93 81       	ldd	r25, Z+3	; 0x03
    138e:	20 e0       	ldi	r18, 0x00	; 0
    1390:	30 e0       	ldi	r19, 0x00	; 0
    1392:	40 e8       	ldi	r20, 0x80	; 128
    1394:	5f e3       	ldi	r21, 0x3F	; 63
    1396:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    139a:	88 23       	and	r24, r24
    139c:	44 f4       	brge	.+16     	; 0x13ae <Animation1+0x98>
		__ticks = 1;
    139e:	fe 01       	movw	r30, r28
    13a0:	e5 5b       	subi	r30, 0xB5	; 181
    13a2:	ff 4f       	sbci	r31, 0xFF	; 255
    13a4:	81 e0       	ldi	r24, 0x01	; 1
    13a6:	90 e0       	ldi	r25, 0x00	; 0
    13a8:	91 83       	std	Z+1, r25	; 0x01
    13aa:	80 83       	st	Z, r24
    13ac:	64 c0       	rjmp	.+200    	; 0x1476 <Animation1+0x160>
	else if (__tmp > 65535)
    13ae:	fe 01       	movw	r30, r28
    13b0:	e3 5b       	subi	r30, 0xB3	; 179
    13b2:	ff 4f       	sbci	r31, 0xFF	; 255
    13b4:	60 81       	ld	r22, Z
    13b6:	71 81       	ldd	r23, Z+1	; 0x01
    13b8:	82 81       	ldd	r24, Z+2	; 0x02
    13ba:	93 81       	ldd	r25, Z+3	; 0x03
    13bc:	20 e0       	ldi	r18, 0x00	; 0
    13be:	3f ef       	ldi	r19, 0xFF	; 255
    13c0:	4f e7       	ldi	r20, 0x7F	; 127
    13c2:	57 e4       	ldi	r21, 0x47	; 71
    13c4:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    13c8:	18 16       	cp	r1, r24
    13ca:	0c f0       	brlt	.+2      	; 0x13ce <Animation1+0xb8>
    13cc:	43 c0       	rjmp	.+134    	; 0x1454 <Animation1+0x13e>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    13ce:	fe 01       	movw	r30, r28
    13d0:	ef 5a       	subi	r30, 0xAF	; 175
    13d2:	ff 4f       	sbci	r31, 0xFF	; 255
    13d4:	60 81       	ld	r22, Z
    13d6:	71 81       	ldd	r23, Z+1	; 0x01
    13d8:	82 81       	ldd	r24, Z+2	; 0x02
    13da:	93 81       	ldd	r25, Z+3	; 0x03
    13dc:	20 e0       	ldi	r18, 0x00	; 0
    13de:	30 e0       	ldi	r19, 0x00	; 0
    13e0:	40 e2       	ldi	r20, 0x20	; 32
    13e2:	51 e4       	ldi	r21, 0x41	; 65
    13e4:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    13e8:	dc 01       	movw	r26, r24
    13ea:	cb 01       	movw	r24, r22
    13ec:	8e 01       	movw	r16, r28
    13ee:	05 5b       	subi	r16, 0xB5	; 181
    13f0:	1f 4f       	sbci	r17, 0xFF	; 255
    13f2:	bc 01       	movw	r22, r24
    13f4:	cd 01       	movw	r24, r26
    13f6:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    13fa:	dc 01       	movw	r26, r24
    13fc:	cb 01       	movw	r24, r22
    13fe:	f8 01       	movw	r30, r16
    1400:	91 83       	std	Z+1, r25	; 0x01
    1402:	80 83       	st	Z, r24
    1404:	1f c0       	rjmp	.+62     	; 0x1444 <Animation1+0x12e>
    1406:	fe 01       	movw	r30, r28
    1408:	e7 5b       	subi	r30, 0xB7	; 183
    140a:	ff 4f       	sbci	r31, 0xFF	; 255
    140c:	80 e9       	ldi	r24, 0x90	; 144
    140e:	91 e0       	ldi	r25, 0x01	; 1
    1410:	91 83       	std	Z+1, r25	; 0x01
    1412:	80 83       	st	Z, r24
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
    1414:	fe 01       	movw	r30, r28
    1416:	e7 5b       	subi	r30, 0xB7	; 183
    1418:	ff 4f       	sbci	r31, 0xFF	; 255
    141a:	80 81       	ld	r24, Z
    141c:	91 81       	ldd	r25, Z+1	; 0x01
    141e:	01 97       	sbiw	r24, 0x01	; 1
    1420:	f1 f7       	brne	.-4      	; 0x141e <Animation1+0x108>
    1422:	fe 01       	movw	r30, r28
    1424:	e7 5b       	subi	r30, 0xB7	; 183
    1426:	ff 4f       	sbci	r31, 0xFF	; 255
    1428:	91 83       	std	Z+1, r25	; 0x01
    142a:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    142c:	de 01       	movw	r26, r28
    142e:	a5 5b       	subi	r26, 0xB5	; 181
    1430:	bf 4f       	sbci	r27, 0xFF	; 255
    1432:	fe 01       	movw	r30, r28
    1434:	e5 5b       	subi	r30, 0xB5	; 181
    1436:	ff 4f       	sbci	r31, 0xFF	; 255
    1438:	80 81       	ld	r24, Z
    143a:	91 81       	ldd	r25, Z+1	; 0x01
    143c:	01 97       	sbiw	r24, 0x01	; 1
    143e:	11 96       	adiw	r26, 0x01	; 1
    1440:	9c 93       	st	X, r25
    1442:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1444:	fe 01       	movw	r30, r28
    1446:	e5 5b       	subi	r30, 0xB5	; 181
    1448:	ff 4f       	sbci	r31, 0xFF	; 255
    144a:	80 81       	ld	r24, Z
    144c:	91 81       	ldd	r25, Z+1	; 0x01
    144e:	00 97       	sbiw	r24, 0x00	; 0
    1450:	d1 f6       	brne	.-76     	; 0x1406 <Animation1+0xf0>
    1452:	27 c0       	rjmp	.+78     	; 0x14a2 <Animation1+0x18c>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1454:	8e 01       	movw	r16, r28
    1456:	05 5b       	subi	r16, 0xB5	; 181
    1458:	1f 4f       	sbci	r17, 0xFF	; 255
    145a:	fe 01       	movw	r30, r28
    145c:	e3 5b       	subi	r30, 0xB3	; 179
    145e:	ff 4f       	sbci	r31, 0xFF	; 255
    1460:	60 81       	ld	r22, Z
    1462:	71 81       	ldd	r23, Z+1	; 0x01
    1464:	82 81       	ldd	r24, Z+2	; 0x02
    1466:	93 81       	ldd	r25, Z+3	; 0x03
    1468:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    146c:	dc 01       	movw	r26, r24
    146e:	cb 01       	movw	r24, r22
    1470:	f8 01       	movw	r30, r16
    1472:	91 83       	std	Z+1, r25	; 0x01
    1474:	80 83       	st	Z, r24
    1476:	de 01       	movw	r26, r28
    1478:	a9 5b       	subi	r26, 0xB9	; 185
    147a:	bf 4f       	sbci	r27, 0xFF	; 255
    147c:	fe 01       	movw	r30, r28
    147e:	e5 5b       	subi	r30, 0xB5	; 181
    1480:	ff 4f       	sbci	r31, 0xFF	; 255
    1482:	80 81       	ld	r24, Z
    1484:	91 81       	ldd	r25, Z+1	; 0x01
    1486:	8d 93       	st	X+, r24
    1488:	9c 93       	st	X, r25
    148a:	fe 01       	movw	r30, r28
    148c:	e9 5b       	subi	r30, 0xB9	; 185
    148e:	ff 4f       	sbci	r31, 0xFF	; 255
    1490:	80 81       	ld	r24, Z
    1492:	91 81       	ldd	r25, Z+1	; 0x01
    1494:	01 97       	sbiw	r24, 0x01	; 1
    1496:	f1 f7       	brne	.-4      	; 0x1494 <Animation1+0x17e>
    1498:	fe 01       	movw	r30, r28
    149a:	e9 5b       	subi	r30, 0xB9	; 185
    149c:	ff 4f       	sbci	r31, 0xFF	; 255
    149e:	91 83       	std	Z+1, r25	; 0x01
    14a0:	80 83       	st	Z, r24
	_delay_ms(500);
	H_Led_void_setOFF(RED_LED);
    14a2:	80 e0       	ldi	r24, 0x00	; 0
    14a4:	0e 94 2c 09 	call	0x1258	; 0x1258 <H_Led_void_setOFF>
	H_Led_void_setOFF(BLU_LED);
    14a8:	82 e0       	ldi	r24, 0x02	; 2
    14aa:	0e 94 2c 09 	call	0x1258	; 0x1258 <H_Led_void_setOFF>
    14ae:	fe 01       	movw	r30, r28
    14b0:	ed 5b       	subi	r30, 0xBD	; 189
    14b2:	ff 4f       	sbci	r31, 0xFF	; 255
    14b4:	80 e0       	ldi	r24, 0x00	; 0
    14b6:	90 e0       	ldi	r25, 0x00	; 0
    14b8:	aa ef       	ldi	r26, 0xFA	; 250
    14ba:	b3 e4       	ldi	r27, 0x43	; 67
    14bc:	80 83       	st	Z, r24
    14be:	91 83       	std	Z+1, r25	; 0x01
    14c0:	a2 83       	std	Z+2, r26	; 0x02
    14c2:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    14c4:	8e 01       	movw	r16, r28
    14c6:	01 5c       	subi	r16, 0xC1	; 193
    14c8:	1f 4f       	sbci	r17, 0xFF	; 255
    14ca:	fe 01       	movw	r30, r28
    14cc:	ed 5b       	subi	r30, 0xBD	; 189
    14ce:	ff 4f       	sbci	r31, 0xFF	; 255
    14d0:	60 81       	ld	r22, Z
    14d2:	71 81       	ldd	r23, Z+1	; 0x01
    14d4:	82 81       	ldd	r24, Z+2	; 0x02
    14d6:	93 81       	ldd	r25, Z+3	; 0x03
    14d8:	20 e0       	ldi	r18, 0x00	; 0
    14da:	30 e0       	ldi	r19, 0x00	; 0
    14dc:	4a e7       	ldi	r20, 0x7A	; 122
    14de:	55 e4       	ldi	r21, 0x45	; 69
    14e0:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    14e4:	dc 01       	movw	r26, r24
    14e6:	cb 01       	movw	r24, r22
    14e8:	f8 01       	movw	r30, r16
    14ea:	80 83       	st	Z, r24
    14ec:	91 83       	std	Z+1, r25	; 0x01
    14ee:	a2 83       	std	Z+2, r26	; 0x02
    14f0:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    14f2:	fe 01       	movw	r30, r28
    14f4:	ff 96       	adiw	r30, 0x3f	; 63
    14f6:	60 81       	ld	r22, Z
    14f8:	71 81       	ldd	r23, Z+1	; 0x01
    14fa:	82 81       	ldd	r24, Z+2	; 0x02
    14fc:	93 81       	ldd	r25, Z+3	; 0x03
    14fe:	20 e0       	ldi	r18, 0x00	; 0
    1500:	30 e0       	ldi	r19, 0x00	; 0
    1502:	40 e8       	ldi	r20, 0x80	; 128
    1504:	5f e3       	ldi	r21, 0x3F	; 63
    1506:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    150a:	88 23       	and	r24, r24
    150c:	2c f4       	brge	.+10     	; 0x1518 <Animation1+0x202>
		__ticks = 1;
    150e:	81 e0       	ldi	r24, 0x01	; 1
    1510:	90 e0       	ldi	r25, 0x00	; 0
    1512:	9e af       	std	Y+62, r25	; 0x3e
    1514:	8d af       	std	Y+61, r24	; 0x3d
    1516:	46 c0       	rjmp	.+140    	; 0x15a4 <Animation1+0x28e>
	else if (__tmp > 65535)
    1518:	fe 01       	movw	r30, r28
    151a:	ff 96       	adiw	r30, 0x3f	; 63
    151c:	60 81       	ld	r22, Z
    151e:	71 81       	ldd	r23, Z+1	; 0x01
    1520:	82 81       	ldd	r24, Z+2	; 0x02
    1522:	93 81       	ldd	r25, Z+3	; 0x03
    1524:	20 e0       	ldi	r18, 0x00	; 0
    1526:	3f ef       	ldi	r19, 0xFF	; 255
    1528:	4f e7       	ldi	r20, 0x7F	; 127
    152a:	57 e4       	ldi	r21, 0x47	; 71
    152c:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    1530:	18 16       	cp	r1, r24
    1532:	64 f5       	brge	.+88     	; 0x158c <Animation1+0x276>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1534:	fe 01       	movw	r30, r28
    1536:	ed 5b       	subi	r30, 0xBD	; 189
    1538:	ff 4f       	sbci	r31, 0xFF	; 255
    153a:	60 81       	ld	r22, Z
    153c:	71 81       	ldd	r23, Z+1	; 0x01
    153e:	82 81       	ldd	r24, Z+2	; 0x02
    1540:	93 81       	ldd	r25, Z+3	; 0x03
    1542:	20 e0       	ldi	r18, 0x00	; 0
    1544:	30 e0       	ldi	r19, 0x00	; 0
    1546:	40 e2       	ldi	r20, 0x20	; 32
    1548:	51 e4       	ldi	r21, 0x41	; 65
    154a:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    154e:	dc 01       	movw	r26, r24
    1550:	cb 01       	movw	r24, r22
    1552:	bc 01       	movw	r22, r24
    1554:	cd 01       	movw	r24, r26
    1556:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    155a:	dc 01       	movw	r26, r24
    155c:	cb 01       	movw	r24, r22
    155e:	9e af       	std	Y+62, r25	; 0x3e
    1560:	8d af       	std	Y+61, r24	; 0x3d
    1562:	0f c0       	rjmp	.+30     	; 0x1582 <Animation1+0x26c>
    1564:	80 e9       	ldi	r24, 0x90	; 144
    1566:	91 e0       	ldi	r25, 0x01	; 1
    1568:	9c af       	std	Y+60, r25	; 0x3c
    156a:	8b af       	std	Y+59, r24	; 0x3b
    156c:	8b ad       	ldd	r24, Y+59	; 0x3b
    156e:	9c ad       	ldd	r25, Y+60	; 0x3c
    1570:	01 97       	sbiw	r24, 0x01	; 1
    1572:	f1 f7       	brne	.-4      	; 0x1570 <Animation1+0x25a>
    1574:	9c af       	std	Y+60, r25	; 0x3c
    1576:	8b af       	std	Y+59, r24	; 0x3b
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1578:	8d ad       	ldd	r24, Y+61	; 0x3d
    157a:	9e ad       	ldd	r25, Y+62	; 0x3e
    157c:	01 97       	sbiw	r24, 0x01	; 1
    157e:	9e af       	std	Y+62, r25	; 0x3e
    1580:	8d af       	std	Y+61, r24	; 0x3d
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1582:	8d ad       	ldd	r24, Y+61	; 0x3d
    1584:	9e ad       	ldd	r25, Y+62	; 0x3e
    1586:	00 97       	sbiw	r24, 0x00	; 0
    1588:	69 f7       	brne	.-38     	; 0x1564 <Animation1+0x24e>
    158a:	16 c0       	rjmp	.+44     	; 0x15b8 <Animation1+0x2a2>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    158c:	fe 01       	movw	r30, r28
    158e:	ff 96       	adiw	r30, 0x3f	; 63
    1590:	60 81       	ld	r22, Z
    1592:	71 81       	ldd	r23, Z+1	; 0x01
    1594:	82 81       	ldd	r24, Z+2	; 0x02
    1596:	93 81       	ldd	r25, Z+3	; 0x03
    1598:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    159c:	dc 01       	movw	r26, r24
    159e:	cb 01       	movw	r24, r22
    15a0:	9e af       	std	Y+62, r25	; 0x3e
    15a2:	8d af       	std	Y+61, r24	; 0x3d
    15a4:	8d ad       	ldd	r24, Y+61	; 0x3d
    15a6:	9e ad       	ldd	r25, Y+62	; 0x3e
    15a8:	9a af       	std	Y+58, r25	; 0x3a
    15aa:	89 af       	std	Y+57, r24	; 0x39
    15ac:	89 ad       	ldd	r24, Y+57	; 0x39
    15ae:	9a ad       	ldd	r25, Y+58	; 0x3a
    15b0:	01 97       	sbiw	r24, 0x01	; 1
    15b2:	f1 f7       	brne	.-4      	; 0x15b0 <Animation1+0x29a>
    15b4:	9a af       	std	Y+58, r25	; 0x3a
    15b6:	89 af       	std	Y+57, r24	; 0x39
	_delay_ms(500);
    H_Led_void_setON(BLU_LED);
    15b8:	82 e0       	ldi	r24, 0x02	; 2
    15ba:	0e 94 fb 08 	call	0x11f6	; 0x11f6 <H_Led_void_setON>
    H_Led_void_setON(GRN_LED);
    15be:	81 e0       	ldi	r24, 0x01	; 1
    15c0:	0e 94 fb 08 	call	0x11f6	; 0x11f6 <H_Led_void_setON>
    15c4:	80 e0       	ldi	r24, 0x00	; 0
    15c6:	90 e0       	ldi	r25, 0x00	; 0
    15c8:	aa ef       	ldi	r26, 0xFA	; 250
    15ca:	b3 e4       	ldi	r27, 0x43	; 67
    15cc:	8d ab       	std	Y+53, r24	; 0x35
    15ce:	9e ab       	std	Y+54, r25	; 0x36
    15d0:	af ab       	std	Y+55, r26	; 0x37
    15d2:	b8 af       	std	Y+56, r27	; 0x38
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    15d4:	6d a9       	ldd	r22, Y+53	; 0x35
    15d6:	7e a9       	ldd	r23, Y+54	; 0x36
    15d8:	8f a9       	ldd	r24, Y+55	; 0x37
    15da:	98 ad       	ldd	r25, Y+56	; 0x38
    15dc:	20 e0       	ldi	r18, 0x00	; 0
    15de:	30 e0       	ldi	r19, 0x00	; 0
    15e0:	4a e7       	ldi	r20, 0x7A	; 122
    15e2:	55 e4       	ldi	r21, 0x45	; 69
    15e4:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    15e8:	dc 01       	movw	r26, r24
    15ea:	cb 01       	movw	r24, r22
    15ec:	89 ab       	std	Y+49, r24	; 0x31
    15ee:	9a ab       	std	Y+50, r25	; 0x32
    15f0:	ab ab       	std	Y+51, r26	; 0x33
    15f2:	bc ab       	std	Y+52, r27	; 0x34
	if (__tmp < 1.0)
    15f4:	69 a9       	ldd	r22, Y+49	; 0x31
    15f6:	7a a9       	ldd	r23, Y+50	; 0x32
    15f8:	8b a9       	ldd	r24, Y+51	; 0x33
    15fa:	9c a9       	ldd	r25, Y+52	; 0x34
    15fc:	20 e0       	ldi	r18, 0x00	; 0
    15fe:	30 e0       	ldi	r19, 0x00	; 0
    1600:	40 e8       	ldi	r20, 0x80	; 128
    1602:	5f e3       	ldi	r21, 0x3F	; 63
    1604:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    1608:	88 23       	and	r24, r24
    160a:	2c f4       	brge	.+10     	; 0x1616 <Animation1+0x300>
		__ticks = 1;
    160c:	81 e0       	ldi	r24, 0x01	; 1
    160e:	90 e0       	ldi	r25, 0x00	; 0
    1610:	98 ab       	std	Y+48, r25	; 0x30
    1612:	8f a7       	std	Y+47, r24	; 0x2f
    1614:	3f c0       	rjmp	.+126    	; 0x1694 <Animation1+0x37e>
	else if (__tmp > 65535)
    1616:	69 a9       	ldd	r22, Y+49	; 0x31
    1618:	7a a9       	ldd	r23, Y+50	; 0x32
    161a:	8b a9       	ldd	r24, Y+51	; 0x33
    161c:	9c a9       	ldd	r25, Y+52	; 0x34
    161e:	20 e0       	ldi	r18, 0x00	; 0
    1620:	3f ef       	ldi	r19, 0xFF	; 255
    1622:	4f e7       	ldi	r20, 0x7F	; 127
    1624:	57 e4       	ldi	r21, 0x47	; 71
    1626:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    162a:	18 16       	cp	r1, r24
    162c:	4c f5       	brge	.+82     	; 0x1680 <Animation1+0x36a>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    162e:	6d a9       	ldd	r22, Y+53	; 0x35
    1630:	7e a9       	ldd	r23, Y+54	; 0x36
    1632:	8f a9       	ldd	r24, Y+55	; 0x37
    1634:	98 ad       	ldd	r25, Y+56	; 0x38
    1636:	20 e0       	ldi	r18, 0x00	; 0
    1638:	30 e0       	ldi	r19, 0x00	; 0
    163a:	40 e2       	ldi	r20, 0x20	; 32
    163c:	51 e4       	ldi	r21, 0x41	; 65
    163e:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1642:	dc 01       	movw	r26, r24
    1644:	cb 01       	movw	r24, r22
    1646:	bc 01       	movw	r22, r24
    1648:	cd 01       	movw	r24, r26
    164a:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    164e:	dc 01       	movw	r26, r24
    1650:	cb 01       	movw	r24, r22
    1652:	98 ab       	std	Y+48, r25	; 0x30
    1654:	8f a7       	std	Y+47, r24	; 0x2f
    1656:	0f c0       	rjmp	.+30     	; 0x1676 <Animation1+0x360>
    1658:	80 e9       	ldi	r24, 0x90	; 144
    165a:	91 e0       	ldi	r25, 0x01	; 1
    165c:	9e a7       	std	Y+46, r25	; 0x2e
    165e:	8d a7       	std	Y+45, r24	; 0x2d
    1660:	8d a5       	ldd	r24, Y+45	; 0x2d
    1662:	9e a5       	ldd	r25, Y+46	; 0x2e
    1664:	01 97       	sbiw	r24, 0x01	; 1
    1666:	f1 f7       	brne	.-4      	; 0x1664 <Animation1+0x34e>
    1668:	9e a7       	std	Y+46, r25	; 0x2e
    166a:	8d a7       	std	Y+45, r24	; 0x2d
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    166c:	8f a5       	ldd	r24, Y+47	; 0x2f
    166e:	98 a9       	ldd	r25, Y+48	; 0x30
    1670:	01 97       	sbiw	r24, 0x01	; 1
    1672:	98 ab       	std	Y+48, r25	; 0x30
    1674:	8f a7       	std	Y+47, r24	; 0x2f
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1676:	8f a5       	ldd	r24, Y+47	; 0x2f
    1678:	98 a9       	ldd	r25, Y+48	; 0x30
    167a:	00 97       	sbiw	r24, 0x00	; 0
    167c:	69 f7       	brne	.-38     	; 0x1658 <Animation1+0x342>
    167e:	14 c0       	rjmp	.+40     	; 0x16a8 <Animation1+0x392>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1680:	69 a9       	ldd	r22, Y+49	; 0x31
    1682:	7a a9       	ldd	r23, Y+50	; 0x32
    1684:	8b a9       	ldd	r24, Y+51	; 0x33
    1686:	9c a9       	ldd	r25, Y+52	; 0x34
    1688:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    168c:	dc 01       	movw	r26, r24
    168e:	cb 01       	movw	r24, r22
    1690:	98 ab       	std	Y+48, r25	; 0x30
    1692:	8f a7       	std	Y+47, r24	; 0x2f
    1694:	8f a5       	ldd	r24, Y+47	; 0x2f
    1696:	98 a9       	ldd	r25, Y+48	; 0x30
    1698:	9c a7       	std	Y+44, r25	; 0x2c
    169a:	8b a7       	std	Y+43, r24	; 0x2b
    169c:	8b a5       	ldd	r24, Y+43	; 0x2b
    169e:	9c a5       	ldd	r25, Y+44	; 0x2c
    16a0:	01 97       	sbiw	r24, 0x01	; 1
    16a2:	f1 f7       	brne	.-4      	; 0x16a0 <Animation1+0x38a>
    16a4:	9c a7       	std	Y+44, r25	; 0x2c
    16a6:	8b a7       	std	Y+43, r24	; 0x2b
    _delay_ms(500);
    H_Led_void_setOFF(BLU_LED);
    16a8:	82 e0       	ldi	r24, 0x02	; 2
    16aa:	0e 94 2c 09 	call	0x1258	; 0x1258 <H_Led_void_setOFF>
    H_Led_void_setOFF(GRN_LED);
    16ae:	81 e0       	ldi	r24, 0x01	; 1
    16b0:	0e 94 2c 09 	call	0x1258	; 0x1258 <H_Led_void_setOFF>
    16b4:	80 e0       	ldi	r24, 0x00	; 0
    16b6:	90 e0       	ldi	r25, 0x00	; 0
    16b8:	aa ef       	ldi	r26, 0xFA	; 250
    16ba:	b3 e4       	ldi	r27, 0x43	; 67
    16bc:	8f a3       	std	Y+39, r24	; 0x27
    16be:	98 a7       	std	Y+40, r25	; 0x28
    16c0:	a9 a7       	std	Y+41, r26	; 0x29
    16c2:	ba a7       	std	Y+42, r27	; 0x2a
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    16c4:	6f a1       	ldd	r22, Y+39	; 0x27
    16c6:	78 a5       	ldd	r23, Y+40	; 0x28
    16c8:	89 a5       	ldd	r24, Y+41	; 0x29
    16ca:	9a a5       	ldd	r25, Y+42	; 0x2a
    16cc:	20 e0       	ldi	r18, 0x00	; 0
    16ce:	30 e0       	ldi	r19, 0x00	; 0
    16d0:	4a e7       	ldi	r20, 0x7A	; 122
    16d2:	55 e4       	ldi	r21, 0x45	; 69
    16d4:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    16d8:	dc 01       	movw	r26, r24
    16da:	cb 01       	movw	r24, r22
    16dc:	8b a3       	std	Y+35, r24	; 0x23
    16de:	9c a3       	std	Y+36, r25	; 0x24
    16e0:	ad a3       	std	Y+37, r26	; 0x25
    16e2:	be a3       	std	Y+38, r27	; 0x26
	if (__tmp < 1.0)
    16e4:	6b a1       	ldd	r22, Y+35	; 0x23
    16e6:	7c a1       	ldd	r23, Y+36	; 0x24
    16e8:	8d a1       	ldd	r24, Y+37	; 0x25
    16ea:	9e a1       	ldd	r25, Y+38	; 0x26
    16ec:	20 e0       	ldi	r18, 0x00	; 0
    16ee:	30 e0       	ldi	r19, 0x00	; 0
    16f0:	40 e8       	ldi	r20, 0x80	; 128
    16f2:	5f e3       	ldi	r21, 0x3F	; 63
    16f4:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    16f8:	88 23       	and	r24, r24
    16fa:	2c f4       	brge	.+10     	; 0x1706 <Animation1+0x3f0>
		__ticks = 1;
    16fc:	81 e0       	ldi	r24, 0x01	; 1
    16fe:	90 e0       	ldi	r25, 0x00	; 0
    1700:	9a a3       	std	Y+34, r25	; 0x22
    1702:	89 a3       	std	Y+33, r24	; 0x21
    1704:	3f c0       	rjmp	.+126    	; 0x1784 <Animation1+0x46e>
	else if (__tmp > 65535)
    1706:	6b a1       	ldd	r22, Y+35	; 0x23
    1708:	7c a1       	ldd	r23, Y+36	; 0x24
    170a:	8d a1       	ldd	r24, Y+37	; 0x25
    170c:	9e a1       	ldd	r25, Y+38	; 0x26
    170e:	20 e0       	ldi	r18, 0x00	; 0
    1710:	3f ef       	ldi	r19, 0xFF	; 255
    1712:	4f e7       	ldi	r20, 0x7F	; 127
    1714:	57 e4       	ldi	r21, 0x47	; 71
    1716:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    171a:	18 16       	cp	r1, r24
    171c:	4c f5       	brge	.+82     	; 0x1770 <Animation1+0x45a>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    171e:	6f a1       	ldd	r22, Y+39	; 0x27
    1720:	78 a5       	ldd	r23, Y+40	; 0x28
    1722:	89 a5       	ldd	r24, Y+41	; 0x29
    1724:	9a a5       	ldd	r25, Y+42	; 0x2a
    1726:	20 e0       	ldi	r18, 0x00	; 0
    1728:	30 e0       	ldi	r19, 0x00	; 0
    172a:	40 e2       	ldi	r20, 0x20	; 32
    172c:	51 e4       	ldi	r21, 0x41	; 65
    172e:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1732:	dc 01       	movw	r26, r24
    1734:	cb 01       	movw	r24, r22
    1736:	bc 01       	movw	r22, r24
    1738:	cd 01       	movw	r24, r26
    173a:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    173e:	dc 01       	movw	r26, r24
    1740:	cb 01       	movw	r24, r22
    1742:	9a a3       	std	Y+34, r25	; 0x22
    1744:	89 a3       	std	Y+33, r24	; 0x21
    1746:	0f c0       	rjmp	.+30     	; 0x1766 <Animation1+0x450>
    1748:	80 e9       	ldi	r24, 0x90	; 144
    174a:	91 e0       	ldi	r25, 0x01	; 1
    174c:	98 a3       	std	Y+32, r25	; 0x20
    174e:	8f 8f       	std	Y+31, r24	; 0x1f
    1750:	8f 8d       	ldd	r24, Y+31	; 0x1f
    1752:	98 a1       	ldd	r25, Y+32	; 0x20
    1754:	01 97       	sbiw	r24, 0x01	; 1
    1756:	f1 f7       	brne	.-4      	; 0x1754 <Animation1+0x43e>
    1758:	98 a3       	std	Y+32, r25	; 0x20
    175a:	8f 8f       	std	Y+31, r24	; 0x1f
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    175c:	89 a1       	ldd	r24, Y+33	; 0x21
    175e:	9a a1       	ldd	r25, Y+34	; 0x22
    1760:	01 97       	sbiw	r24, 0x01	; 1
    1762:	9a a3       	std	Y+34, r25	; 0x22
    1764:	89 a3       	std	Y+33, r24	; 0x21
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1766:	89 a1       	ldd	r24, Y+33	; 0x21
    1768:	9a a1       	ldd	r25, Y+34	; 0x22
    176a:	00 97       	sbiw	r24, 0x00	; 0
    176c:	69 f7       	brne	.-38     	; 0x1748 <Animation1+0x432>
    176e:	14 c0       	rjmp	.+40     	; 0x1798 <Animation1+0x482>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1770:	6b a1       	ldd	r22, Y+35	; 0x23
    1772:	7c a1       	ldd	r23, Y+36	; 0x24
    1774:	8d a1       	ldd	r24, Y+37	; 0x25
    1776:	9e a1       	ldd	r25, Y+38	; 0x26
    1778:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    177c:	dc 01       	movw	r26, r24
    177e:	cb 01       	movw	r24, r22
    1780:	9a a3       	std	Y+34, r25	; 0x22
    1782:	89 a3       	std	Y+33, r24	; 0x21
    1784:	89 a1       	ldd	r24, Y+33	; 0x21
    1786:	9a a1       	ldd	r25, Y+34	; 0x22
    1788:	9e 8f       	std	Y+30, r25	; 0x1e
    178a:	8d 8f       	std	Y+29, r24	; 0x1d
    178c:	8d 8d       	ldd	r24, Y+29	; 0x1d
    178e:	9e 8d       	ldd	r25, Y+30	; 0x1e
    1790:	01 97       	sbiw	r24, 0x01	; 1
    1792:	f1 f7       	brne	.-4      	; 0x1790 <Animation1+0x47a>
    1794:	9e 8f       	std	Y+30, r25	; 0x1e
    1796:	8d 8f       	std	Y+29, r24	; 0x1d
    _delay_ms(500);
    H_Led_void_setON(RED_LED);
    1798:	80 e0       	ldi	r24, 0x00	; 0
    179a:	0e 94 fb 08 	call	0x11f6	; 0x11f6 <H_Led_void_setON>
    H_Led_void_setON(GRN_LED);
    179e:	81 e0       	ldi	r24, 0x01	; 1
    17a0:	0e 94 fb 08 	call	0x11f6	; 0x11f6 <H_Led_void_setON>
    17a4:	80 e0       	ldi	r24, 0x00	; 0
    17a6:	90 e0       	ldi	r25, 0x00	; 0
    17a8:	aa ef       	ldi	r26, 0xFA	; 250
    17aa:	b3 e4       	ldi	r27, 0x43	; 67
    17ac:	89 8f       	std	Y+25, r24	; 0x19
    17ae:	9a 8f       	std	Y+26, r25	; 0x1a
    17b0:	ab 8f       	std	Y+27, r26	; 0x1b
    17b2:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    17b4:	69 8d       	ldd	r22, Y+25	; 0x19
    17b6:	7a 8d       	ldd	r23, Y+26	; 0x1a
    17b8:	8b 8d       	ldd	r24, Y+27	; 0x1b
    17ba:	9c 8d       	ldd	r25, Y+28	; 0x1c
    17bc:	20 e0       	ldi	r18, 0x00	; 0
    17be:	30 e0       	ldi	r19, 0x00	; 0
    17c0:	4a e7       	ldi	r20, 0x7A	; 122
    17c2:	55 e4       	ldi	r21, 0x45	; 69
    17c4:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    17c8:	dc 01       	movw	r26, r24
    17ca:	cb 01       	movw	r24, r22
    17cc:	8d 8b       	std	Y+21, r24	; 0x15
    17ce:	9e 8b       	std	Y+22, r25	; 0x16
    17d0:	af 8b       	std	Y+23, r26	; 0x17
    17d2:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    17d4:	6d 89       	ldd	r22, Y+21	; 0x15
    17d6:	7e 89       	ldd	r23, Y+22	; 0x16
    17d8:	8f 89       	ldd	r24, Y+23	; 0x17
    17da:	98 8d       	ldd	r25, Y+24	; 0x18
    17dc:	20 e0       	ldi	r18, 0x00	; 0
    17de:	30 e0       	ldi	r19, 0x00	; 0
    17e0:	40 e8       	ldi	r20, 0x80	; 128
    17e2:	5f e3       	ldi	r21, 0x3F	; 63
    17e4:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    17e8:	88 23       	and	r24, r24
    17ea:	2c f4       	brge	.+10     	; 0x17f6 <Animation1+0x4e0>
		__ticks = 1;
    17ec:	81 e0       	ldi	r24, 0x01	; 1
    17ee:	90 e0       	ldi	r25, 0x00	; 0
    17f0:	9c 8b       	std	Y+20, r25	; 0x14
    17f2:	8b 8b       	std	Y+19, r24	; 0x13
    17f4:	3f c0       	rjmp	.+126    	; 0x1874 <Animation1+0x55e>
	else if (__tmp > 65535)
    17f6:	6d 89       	ldd	r22, Y+21	; 0x15
    17f8:	7e 89       	ldd	r23, Y+22	; 0x16
    17fa:	8f 89       	ldd	r24, Y+23	; 0x17
    17fc:	98 8d       	ldd	r25, Y+24	; 0x18
    17fe:	20 e0       	ldi	r18, 0x00	; 0
    1800:	3f ef       	ldi	r19, 0xFF	; 255
    1802:	4f e7       	ldi	r20, 0x7F	; 127
    1804:	57 e4       	ldi	r21, 0x47	; 71
    1806:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    180a:	18 16       	cp	r1, r24
    180c:	4c f5       	brge	.+82     	; 0x1860 <Animation1+0x54a>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    180e:	69 8d       	ldd	r22, Y+25	; 0x19
    1810:	7a 8d       	ldd	r23, Y+26	; 0x1a
    1812:	8b 8d       	ldd	r24, Y+27	; 0x1b
    1814:	9c 8d       	ldd	r25, Y+28	; 0x1c
    1816:	20 e0       	ldi	r18, 0x00	; 0
    1818:	30 e0       	ldi	r19, 0x00	; 0
    181a:	40 e2       	ldi	r20, 0x20	; 32
    181c:	51 e4       	ldi	r21, 0x41	; 65
    181e:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1822:	dc 01       	movw	r26, r24
    1824:	cb 01       	movw	r24, r22
    1826:	bc 01       	movw	r22, r24
    1828:	cd 01       	movw	r24, r26
    182a:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    182e:	dc 01       	movw	r26, r24
    1830:	cb 01       	movw	r24, r22
    1832:	9c 8b       	std	Y+20, r25	; 0x14
    1834:	8b 8b       	std	Y+19, r24	; 0x13
    1836:	0f c0       	rjmp	.+30     	; 0x1856 <Animation1+0x540>
    1838:	80 e9       	ldi	r24, 0x90	; 144
    183a:	91 e0       	ldi	r25, 0x01	; 1
    183c:	9a 8b       	std	Y+18, r25	; 0x12
    183e:	89 8b       	std	Y+17, r24	; 0x11
    1840:	89 89       	ldd	r24, Y+17	; 0x11
    1842:	9a 89       	ldd	r25, Y+18	; 0x12
    1844:	01 97       	sbiw	r24, 0x01	; 1
    1846:	f1 f7       	brne	.-4      	; 0x1844 <Animation1+0x52e>
    1848:	9a 8b       	std	Y+18, r25	; 0x12
    184a:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    184c:	8b 89       	ldd	r24, Y+19	; 0x13
    184e:	9c 89       	ldd	r25, Y+20	; 0x14
    1850:	01 97       	sbiw	r24, 0x01	; 1
    1852:	9c 8b       	std	Y+20, r25	; 0x14
    1854:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1856:	8b 89       	ldd	r24, Y+19	; 0x13
    1858:	9c 89       	ldd	r25, Y+20	; 0x14
    185a:	00 97       	sbiw	r24, 0x00	; 0
    185c:	69 f7       	brne	.-38     	; 0x1838 <Animation1+0x522>
    185e:	14 c0       	rjmp	.+40     	; 0x1888 <Animation1+0x572>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1860:	6d 89       	ldd	r22, Y+21	; 0x15
    1862:	7e 89       	ldd	r23, Y+22	; 0x16
    1864:	8f 89       	ldd	r24, Y+23	; 0x17
    1866:	98 8d       	ldd	r25, Y+24	; 0x18
    1868:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    186c:	dc 01       	movw	r26, r24
    186e:	cb 01       	movw	r24, r22
    1870:	9c 8b       	std	Y+20, r25	; 0x14
    1872:	8b 8b       	std	Y+19, r24	; 0x13
    1874:	8b 89       	ldd	r24, Y+19	; 0x13
    1876:	9c 89       	ldd	r25, Y+20	; 0x14
    1878:	98 8b       	std	Y+16, r25	; 0x10
    187a:	8f 87       	std	Y+15, r24	; 0x0f
    187c:	8f 85       	ldd	r24, Y+15	; 0x0f
    187e:	98 89       	ldd	r25, Y+16	; 0x10
    1880:	01 97       	sbiw	r24, 0x01	; 1
    1882:	f1 f7       	brne	.-4      	; 0x1880 <Animation1+0x56a>
    1884:	98 8b       	std	Y+16, r25	; 0x10
    1886:	8f 87       	std	Y+15, r24	; 0x0f
     _delay_ms(500);
     H_Led_void_setOFF(RED_LED);
    1888:	80 e0       	ldi	r24, 0x00	; 0
    188a:	0e 94 2c 09 	call	0x1258	; 0x1258 <H_Led_void_setOFF>
     H_Led_void_setOFF(GRN_LED);
    188e:	81 e0       	ldi	r24, 0x01	; 1
    1890:	0e 94 2c 09 	call	0x1258	; 0x1258 <H_Led_void_setOFF>
    1894:	80 e0       	ldi	r24, 0x00	; 0
    1896:	90 e0       	ldi	r25, 0x00	; 0
    1898:	aa ef       	ldi	r26, 0xFA	; 250
    189a:	b3 e4       	ldi	r27, 0x43	; 67
    189c:	8b 87       	std	Y+11, r24	; 0x0b
    189e:	9c 87       	std	Y+12, r25	; 0x0c
    18a0:	ad 87       	std	Y+13, r26	; 0x0d
    18a2:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    18a4:	6b 85       	ldd	r22, Y+11	; 0x0b
    18a6:	7c 85       	ldd	r23, Y+12	; 0x0c
    18a8:	8d 85       	ldd	r24, Y+13	; 0x0d
    18aa:	9e 85       	ldd	r25, Y+14	; 0x0e
    18ac:	20 e0       	ldi	r18, 0x00	; 0
    18ae:	30 e0       	ldi	r19, 0x00	; 0
    18b0:	4a e7       	ldi	r20, 0x7A	; 122
    18b2:	55 e4       	ldi	r21, 0x45	; 69
    18b4:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    18b8:	dc 01       	movw	r26, r24
    18ba:	cb 01       	movw	r24, r22
    18bc:	8f 83       	std	Y+7, r24	; 0x07
    18be:	98 87       	std	Y+8, r25	; 0x08
    18c0:	a9 87       	std	Y+9, r26	; 0x09
    18c2:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    18c4:	6f 81       	ldd	r22, Y+7	; 0x07
    18c6:	78 85       	ldd	r23, Y+8	; 0x08
    18c8:	89 85       	ldd	r24, Y+9	; 0x09
    18ca:	9a 85       	ldd	r25, Y+10	; 0x0a
    18cc:	20 e0       	ldi	r18, 0x00	; 0
    18ce:	30 e0       	ldi	r19, 0x00	; 0
    18d0:	40 e8       	ldi	r20, 0x80	; 128
    18d2:	5f e3       	ldi	r21, 0x3F	; 63
    18d4:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    18d8:	88 23       	and	r24, r24
    18da:	2c f4       	brge	.+10     	; 0x18e6 <Animation1+0x5d0>
		__ticks = 1;
    18dc:	81 e0       	ldi	r24, 0x01	; 1
    18de:	90 e0       	ldi	r25, 0x00	; 0
    18e0:	9e 83       	std	Y+6, r25	; 0x06
    18e2:	8d 83       	std	Y+5, r24	; 0x05
    18e4:	3f c0       	rjmp	.+126    	; 0x1964 <Animation1+0x64e>
	else if (__tmp > 65535)
    18e6:	6f 81       	ldd	r22, Y+7	; 0x07
    18e8:	78 85       	ldd	r23, Y+8	; 0x08
    18ea:	89 85       	ldd	r24, Y+9	; 0x09
    18ec:	9a 85       	ldd	r25, Y+10	; 0x0a
    18ee:	20 e0       	ldi	r18, 0x00	; 0
    18f0:	3f ef       	ldi	r19, 0xFF	; 255
    18f2:	4f e7       	ldi	r20, 0x7F	; 127
    18f4:	57 e4       	ldi	r21, 0x47	; 71
    18f6:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    18fa:	18 16       	cp	r1, r24
    18fc:	4c f5       	brge	.+82     	; 0x1950 <Animation1+0x63a>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    18fe:	6b 85       	ldd	r22, Y+11	; 0x0b
    1900:	7c 85       	ldd	r23, Y+12	; 0x0c
    1902:	8d 85       	ldd	r24, Y+13	; 0x0d
    1904:	9e 85       	ldd	r25, Y+14	; 0x0e
    1906:	20 e0       	ldi	r18, 0x00	; 0
    1908:	30 e0       	ldi	r19, 0x00	; 0
    190a:	40 e2       	ldi	r20, 0x20	; 32
    190c:	51 e4       	ldi	r21, 0x41	; 65
    190e:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1912:	dc 01       	movw	r26, r24
    1914:	cb 01       	movw	r24, r22
    1916:	bc 01       	movw	r22, r24
    1918:	cd 01       	movw	r24, r26
    191a:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    191e:	dc 01       	movw	r26, r24
    1920:	cb 01       	movw	r24, r22
    1922:	9e 83       	std	Y+6, r25	; 0x06
    1924:	8d 83       	std	Y+5, r24	; 0x05
    1926:	0f c0       	rjmp	.+30     	; 0x1946 <Animation1+0x630>
    1928:	80 e9       	ldi	r24, 0x90	; 144
    192a:	91 e0       	ldi	r25, 0x01	; 1
    192c:	9c 83       	std	Y+4, r25	; 0x04
    192e:	8b 83       	std	Y+3, r24	; 0x03
    1930:	8b 81       	ldd	r24, Y+3	; 0x03
    1932:	9c 81       	ldd	r25, Y+4	; 0x04
    1934:	01 97       	sbiw	r24, 0x01	; 1
    1936:	f1 f7       	brne	.-4      	; 0x1934 <Animation1+0x61e>
    1938:	9c 83       	std	Y+4, r25	; 0x04
    193a:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    193c:	8d 81       	ldd	r24, Y+5	; 0x05
    193e:	9e 81       	ldd	r25, Y+6	; 0x06
    1940:	01 97       	sbiw	r24, 0x01	; 1
    1942:	9e 83       	std	Y+6, r25	; 0x06
    1944:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1946:	8d 81       	ldd	r24, Y+5	; 0x05
    1948:	9e 81       	ldd	r25, Y+6	; 0x06
    194a:	00 97       	sbiw	r24, 0x00	; 0
    194c:	69 f7       	brne	.-38     	; 0x1928 <Animation1+0x612>
    194e:	14 c0       	rjmp	.+40     	; 0x1978 <Animation1+0x662>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1950:	6f 81       	ldd	r22, Y+7	; 0x07
    1952:	78 85       	ldd	r23, Y+8	; 0x08
    1954:	89 85       	ldd	r24, Y+9	; 0x09
    1956:	9a 85       	ldd	r25, Y+10	; 0x0a
    1958:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    195c:	dc 01       	movw	r26, r24
    195e:	cb 01       	movw	r24, r22
    1960:	9e 83       	std	Y+6, r25	; 0x06
    1962:	8d 83       	std	Y+5, r24	; 0x05
    1964:	8d 81       	ldd	r24, Y+5	; 0x05
    1966:	9e 81       	ldd	r25, Y+6	; 0x06
    1968:	9a 83       	std	Y+2, r25	; 0x02
    196a:	89 83       	std	Y+1, r24	; 0x01
    196c:	89 81       	ldd	r24, Y+1	; 0x01
    196e:	9a 81       	ldd	r25, Y+2	; 0x02
    1970:	01 97       	sbiw	r24, 0x01	; 1
    1972:	f1 f7       	brne	.-4      	; 0x1970 <Animation1+0x65a>
    1974:	9a 83       	std	Y+2, r25	; 0x02
    1976:	89 83       	std	Y+1, r24	; 0x01
     _delay_ms(500);

}
    1978:	cc 5a       	subi	r28, 0xAC	; 172
    197a:	df 4f       	sbci	r29, 0xFF	; 255
    197c:	0f b6       	in	r0, 0x3f	; 63
    197e:	f8 94       	cli
    1980:	de bf       	out	0x3e, r29	; 62
    1982:	0f be       	out	0x3f, r0	; 63
    1984:	cd bf       	out	0x3d, r28	; 61
    1986:	cf 91       	pop	r28
    1988:	df 91       	pop	r29
    198a:	1f 91       	pop	r17
    198c:	0f 91       	pop	r16
    198e:	08 95       	ret

00001990 <Animation2>:
void Animation2()
{
    1990:	0f 93       	push	r16
    1992:	1f 93       	push	r17
    1994:	df 93       	push	r29
    1996:	cf 93       	push	r28
    1998:	cd b7       	in	r28, 0x3d	; 61
    199a:	de b7       	in	r29, 0x3e	; 62
    199c:	c4 55       	subi	r28, 0x54	; 84
    199e:	d0 40       	sbci	r29, 0x00	; 0
    19a0:	0f b6       	in	r0, 0x3f	; 63
    19a2:	f8 94       	cli
    19a4:	de bf       	out	0x3e, r29	; 62
    19a6:	0f be       	out	0x3f, r0	; 63
    19a8:	cd bf       	out	0x3d, r28	; 61
	H_Led_void_setON(RED_LED);
    19aa:	80 e0       	ldi	r24, 0x00	; 0
    19ac:	0e 94 fb 08 	call	0x11f6	; 0x11f6 <H_Led_void_setON>
    19b0:	fe 01       	movw	r30, r28
    19b2:	ef 5a       	subi	r30, 0xAF	; 175
    19b4:	ff 4f       	sbci	r31, 0xFF	; 255
    19b6:	80 e0       	ldi	r24, 0x00	; 0
    19b8:	90 e0       	ldi	r25, 0x00	; 0
    19ba:	aa ef       	ldi	r26, 0xFA	; 250
    19bc:	b3 e4       	ldi	r27, 0x43	; 67
    19be:	80 83       	st	Z, r24
    19c0:	91 83       	std	Z+1, r25	; 0x01
    19c2:	a2 83       	std	Z+2, r26	; 0x02
    19c4:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    19c6:	8e 01       	movw	r16, r28
    19c8:	03 5b       	subi	r16, 0xB3	; 179
    19ca:	1f 4f       	sbci	r17, 0xFF	; 255
    19cc:	fe 01       	movw	r30, r28
    19ce:	ef 5a       	subi	r30, 0xAF	; 175
    19d0:	ff 4f       	sbci	r31, 0xFF	; 255
    19d2:	60 81       	ld	r22, Z
    19d4:	71 81       	ldd	r23, Z+1	; 0x01
    19d6:	82 81       	ldd	r24, Z+2	; 0x02
    19d8:	93 81       	ldd	r25, Z+3	; 0x03
    19da:	20 e0       	ldi	r18, 0x00	; 0
    19dc:	30 e0       	ldi	r19, 0x00	; 0
    19de:	4a e7       	ldi	r20, 0x7A	; 122
    19e0:	55 e4       	ldi	r21, 0x45	; 69
    19e2:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    19e6:	dc 01       	movw	r26, r24
    19e8:	cb 01       	movw	r24, r22
    19ea:	f8 01       	movw	r30, r16
    19ec:	80 83       	st	Z, r24
    19ee:	91 83       	std	Z+1, r25	; 0x01
    19f0:	a2 83       	std	Z+2, r26	; 0x02
    19f2:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    19f4:	fe 01       	movw	r30, r28
    19f6:	e3 5b       	subi	r30, 0xB3	; 179
    19f8:	ff 4f       	sbci	r31, 0xFF	; 255
    19fa:	60 81       	ld	r22, Z
    19fc:	71 81       	ldd	r23, Z+1	; 0x01
    19fe:	82 81       	ldd	r24, Z+2	; 0x02
    1a00:	93 81       	ldd	r25, Z+3	; 0x03
    1a02:	20 e0       	ldi	r18, 0x00	; 0
    1a04:	30 e0       	ldi	r19, 0x00	; 0
    1a06:	40 e8       	ldi	r20, 0x80	; 128
    1a08:	5f e3       	ldi	r21, 0x3F	; 63
    1a0a:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    1a0e:	88 23       	and	r24, r24
    1a10:	44 f4       	brge	.+16     	; 0x1a22 <Animation2+0x92>
		__ticks = 1;
    1a12:	fe 01       	movw	r30, r28
    1a14:	e5 5b       	subi	r30, 0xB5	; 181
    1a16:	ff 4f       	sbci	r31, 0xFF	; 255
    1a18:	81 e0       	ldi	r24, 0x01	; 1
    1a1a:	90 e0       	ldi	r25, 0x00	; 0
    1a1c:	91 83       	std	Z+1, r25	; 0x01
    1a1e:	80 83       	st	Z, r24
    1a20:	64 c0       	rjmp	.+200    	; 0x1aea <Animation2+0x15a>
	else if (__tmp > 65535)
    1a22:	fe 01       	movw	r30, r28
    1a24:	e3 5b       	subi	r30, 0xB3	; 179
    1a26:	ff 4f       	sbci	r31, 0xFF	; 255
    1a28:	60 81       	ld	r22, Z
    1a2a:	71 81       	ldd	r23, Z+1	; 0x01
    1a2c:	82 81       	ldd	r24, Z+2	; 0x02
    1a2e:	93 81       	ldd	r25, Z+3	; 0x03
    1a30:	20 e0       	ldi	r18, 0x00	; 0
    1a32:	3f ef       	ldi	r19, 0xFF	; 255
    1a34:	4f e7       	ldi	r20, 0x7F	; 127
    1a36:	57 e4       	ldi	r21, 0x47	; 71
    1a38:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    1a3c:	18 16       	cp	r1, r24
    1a3e:	0c f0       	brlt	.+2      	; 0x1a42 <Animation2+0xb2>
    1a40:	43 c0       	rjmp	.+134    	; 0x1ac8 <Animation2+0x138>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1a42:	fe 01       	movw	r30, r28
    1a44:	ef 5a       	subi	r30, 0xAF	; 175
    1a46:	ff 4f       	sbci	r31, 0xFF	; 255
    1a48:	60 81       	ld	r22, Z
    1a4a:	71 81       	ldd	r23, Z+1	; 0x01
    1a4c:	82 81       	ldd	r24, Z+2	; 0x02
    1a4e:	93 81       	ldd	r25, Z+3	; 0x03
    1a50:	20 e0       	ldi	r18, 0x00	; 0
    1a52:	30 e0       	ldi	r19, 0x00	; 0
    1a54:	40 e2       	ldi	r20, 0x20	; 32
    1a56:	51 e4       	ldi	r21, 0x41	; 65
    1a58:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1a5c:	dc 01       	movw	r26, r24
    1a5e:	cb 01       	movw	r24, r22
    1a60:	8e 01       	movw	r16, r28
    1a62:	05 5b       	subi	r16, 0xB5	; 181
    1a64:	1f 4f       	sbci	r17, 0xFF	; 255
    1a66:	bc 01       	movw	r22, r24
    1a68:	cd 01       	movw	r24, r26
    1a6a:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1a6e:	dc 01       	movw	r26, r24
    1a70:	cb 01       	movw	r24, r22
    1a72:	f8 01       	movw	r30, r16
    1a74:	91 83       	std	Z+1, r25	; 0x01
    1a76:	80 83       	st	Z, r24
    1a78:	1f c0       	rjmp	.+62     	; 0x1ab8 <Animation2+0x128>
    1a7a:	fe 01       	movw	r30, r28
    1a7c:	e7 5b       	subi	r30, 0xB7	; 183
    1a7e:	ff 4f       	sbci	r31, 0xFF	; 255
    1a80:	80 e9       	ldi	r24, 0x90	; 144
    1a82:	91 e0       	ldi	r25, 0x01	; 1
    1a84:	91 83       	std	Z+1, r25	; 0x01
    1a86:	80 83       	st	Z, r24
    1a88:	fe 01       	movw	r30, r28
    1a8a:	e7 5b       	subi	r30, 0xB7	; 183
    1a8c:	ff 4f       	sbci	r31, 0xFF	; 255
    1a8e:	80 81       	ld	r24, Z
    1a90:	91 81       	ldd	r25, Z+1	; 0x01
    1a92:	01 97       	sbiw	r24, 0x01	; 1
    1a94:	f1 f7       	brne	.-4      	; 0x1a92 <Animation2+0x102>
    1a96:	fe 01       	movw	r30, r28
    1a98:	e7 5b       	subi	r30, 0xB7	; 183
    1a9a:	ff 4f       	sbci	r31, 0xFF	; 255
    1a9c:	91 83       	std	Z+1, r25	; 0x01
    1a9e:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1aa0:	de 01       	movw	r26, r28
    1aa2:	a5 5b       	subi	r26, 0xB5	; 181
    1aa4:	bf 4f       	sbci	r27, 0xFF	; 255
    1aa6:	fe 01       	movw	r30, r28
    1aa8:	e5 5b       	subi	r30, 0xB5	; 181
    1aaa:	ff 4f       	sbci	r31, 0xFF	; 255
    1aac:	80 81       	ld	r24, Z
    1aae:	91 81       	ldd	r25, Z+1	; 0x01
    1ab0:	01 97       	sbiw	r24, 0x01	; 1
    1ab2:	11 96       	adiw	r26, 0x01	; 1
    1ab4:	9c 93       	st	X, r25
    1ab6:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1ab8:	fe 01       	movw	r30, r28
    1aba:	e5 5b       	subi	r30, 0xB5	; 181
    1abc:	ff 4f       	sbci	r31, 0xFF	; 255
    1abe:	80 81       	ld	r24, Z
    1ac0:	91 81       	ldd	r25, Z+1	; 0x01
    1ac2:	00 97       	sbiw	r24, 0x00	; 0
    1ac4:	d1 f6       	brne	.-76     	; 0x1a7a <Animation2+0xea>
    1ac6:	27 c0       	rjmp	.+78     	; 0x1b16 <Animation2+0x186>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1ac8:	8e 01       	movw	r16, r28
    1aca:	05 5b       	subi	r16, 0xB5	; 181
    1acc:	1f 4f       	sbci	r17, 0xFF	; 255
    1ace:	fe 01       	movw	r30, r28
    1ad0:	e3 5b       	subi	r30, 0xB3	; 179
    1ad2:	ff 4f       	sbci	r31, 0xFF	; 255
    1ad4:	60 81       	ld	r22, Z
    1ad6:	71 81       	ldd	r23, Z+1	; 0x01
    1ad8:	82 81       	ldd	r24, Z+2	; 0x02
    1ada:	93 81       	ldd	r25, Z+3	; 0x03
    1adc:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1ae0:	dc 01       	movw	r26, r24
    1ae2:	cb 01       	movw	r24, r22
    1ae4:	f8 01       	movw	r30, r16
    1ae6:	91 83       	std	Z+1, r25	; 0x01
    1ae8:	80 83       	st	Z, r24
    1aea:	de 01       	movw	r26, r28
    1aec:	a9 5b       	subi	r26, 0xB9	; 185
    1aee:	bf 4f       	sbci	r27, 0xFF	; 255
    1af0:	fe 01       	movw	r30, r28
    1af2:	e5 5b       	subi	r30, 0xB5	; 181
    1af4:	ff 4f       	sbci	r31, 0xFF	; 255
    1af6:	80 81       	ld	r24, Z
    1af8:	91 81       	ldd	r25, Z+1	; 0x01
    1afa:	8d 93       	st	X+, r24
    1afc:	9c 93       	st	X, r25
    1afe:	fe 01       	movw	r30, r28
    1b00:	e9 5b       	subi	r30, 0xB9	; 185
    1b02:	ff 4f       	sbci	r31, 0xFF	; 255
    1b04:	80 81       	ld	r24, Z
    1b06:	91 81       	ldd	r25, Z+1	; 0x01
    1b08:	01 97       	sbiw	r24, 0x01	; 1
    1b0a:	f1 f7       	brne	.-4      	; 0x1b08 <Animation2+0x178>
    1b0c:	fe 01       	movw	r30, r28
    1b0e:	e9 5b       	subi	r30, 0xB9	; 185
    1b10:	ff 4f       	sbci	r31, 0xFF	; 255
    1b12:	91 83       	std	Z+1, r25	; 0x01
    1b14:	80 83       	st	Z, r24
	_delay_ms(500);
	H_Led_void_setOFF(RED_LED);
    1b16:	80 e0       	ldi	r24, 0x00	; 0
    1b18:	0e 94 2c 09 	call	0x1258	; 0x1258 <H_Led_void_setOFF>
    1b1c:	fe 01       	movw	r30, r28
    1b1e:	ed 5b       	subi	r30, 0xBD	; 189
    1b20:	ff 4f       	sbci	r31, 0xFF	; 255
    1b22:	80 e0       	ldi	r24, 0x00	; 0
    1b24:	90 e0       	ldi	r25, 0x00	; 0
    1b26:	aa ef       	ldi	r26, 0xFA	; 250
    1b28:	b3 e4       	ldi	r27, 0x43	; 67
    1b2a:	80 83       	st	Z, r24
    1b2c:	91 83       	std	Z+1, r25	; 0x01
    1b2e:	a2 83       	std	Z+2, r26	; 0x02
    1b30:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1b32:	8e 01       	movw	r16, r28
    1b34:	01 5c       	subi	r16, 0xC1	; 193
    1b36:	1f 4f       	sbci	r17, 0xFF	; 255
    1b38:	fe 01       	movw	r30, r28
    1b3a:	ed 5b       	subi	r30, 0xBD	; 189
    1b3c:	ff 4f       	sbci	r31, 0xFF	; 255
    1b3e:	60 81       	ld	r22, Z
    1b40:	71 81       	ldd	r23, Z+1	; 0x01
    1b42:	82 81       	ldd	r24, Z+2	; 0x02
    1b44:	93 81       	ldd	r25, Z+3	; 0x03
    1b46:	20 e0       	ldi	r18, 0x00	; 0
    1b48:	30 e0       	ldi	r19, 0x00	; 0
    1b4a:	4a e7       	ldi	r20, 0x7A	; 122
    1b4c:	55 e4       	ldi	r21, 0x45	; 69
    1b4e:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1b52:	dc 01       	movw	r26, r24
    1b54:	cb 01       	movw	r24, r22
    1b56:	f8 01       	movw	r30, r16
    1b58:	80 83       	st	Z, r24
    1b5a:	91 83       	std	Z+1, r25	; 0x01
    1b5c:	a2 83       	std	Z+2, r26	; 0x02
    1b5e:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    1b60:	fe 01       	movw	r30, r28
    1b62:	ff 96       	adiw	r30, 0x3f	; 63
    1b64:	60 81       	ld	r22, Z
    1b66:	71 81       	ldd	r23, Z+1	; 0x01
    1b68:	82 81       	ldd	r24, Z+2	; 0x02
    1b6a:	93 81       	ldd	r25, Z+3	; 0x03
    1b6c:	20 e0       	ldi	r18, 0x00	; 0
    1b6e:	30 e0       	ldi	r19, 0x00	; 0
    1b70:	40 e8       	ldi	r20, 0x80	; 128
    1b72:	5f e3       	ldi	r21, 0x3F	; 63
    1b74:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    1b78:	88 23       	and	r24, r24
    1b7a:	2c f4       	brge	.+10     	; 0x1b86 <Animation2+0x1f6>
		__ticks = 1;
    1b7c:	81 e0       	ldi	r24, 0x01	; 1
    1b7e:	90 e0       	ldi	r25, 0x00	; 0
    1b80:	9e af       	std	Y+62, r25	; 0x3e
    1b82:	8d af       	std	Y+61, r24	; 0x3d
    1b84:	46 c0       	rjmp	.+140    	; 0x1c12 <Animation2+0x282>
	else if (__tmp > 65535)
    1b86:	fe 01       	movw	r30, r28
    1b88:	ff 96       	adiw	r30, 0x3f	; 63
    1b8a:	60 81       	ld	r22, Z
    1b8c:	71 81       	ldd	r23, Z+1	; 0x01
    1b8e:	82 81       	ldd	r24, Z+2	; 0x02
    1b90:	93 81       	ldd	r25, Z+3	; 0x03
    1b92:	20 e0       	ldi	r18, 0x00	; 0
    1b94:	3f ef       	ldi	r19, 0xFF	; 255
    1b96:	4f e7       	ldi	r20, 0x7F	; 127
    1b98:	57 e4       	ldi	r21, 0x47	; 71
    1b9a:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    1b9e:	18 16       	cp	r1, r24
    1ba0:	64 f5       	brge	.+88     	; 0x1bfa <Animation2+0x26a>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1ba2:	fe 01       	movw	r30, r28
    1ba4:	ed 5b       	subi	r30, 0xBD	; 189
    1ba6:	ff 4f       	sbci	r31, 0xFF	; 255
    1ba8:	60 81       	ld	r22, Z
    1baa:	71 81       	ldd	r23, Z+1	; 0x01
    1bac:	82 81       	ldd	r24, Z+2	; 0x02
    1bae:	93 81       	ldd	r25, Z+3	; 0x03
    1bb0:	20 e0       	ldi	r18, 0x00	; 0
    1bb2:	30 e0       	ldi	r19, 0x00	; 0
    1bb4:	40 e2       	ldi	r20, 0x20	; 32
    1bb6:	51 e4       	ldi	r21, 0x41	; 65
    1bb8:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1bbc:	dc 01       	movw	r26, r24
    1bbe:	cb 01       	movw	r24, r22
    1bc0:	bc 01       	movw	r22, r24
    1bc2:	cd 01       	movw	r24, r26
    1bc4:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1bc8:	dc 01       	movw	r26, r24
    1bca:	cb 01       	movw	r24, r22
    1bcc:	9e af       	std	Y+62, r25	; 0x3e
    1bce:	8d af       	std	Y+61, r24	; 0x3d
    1bd0:	0f c0       	rjmp	.+30     	; 0x1bf0 <Animation2+0x260>
    1bd2:	80 e9       	ldi	r24, 0x90	; 144
    1bd4:	91 e0       	ldi	r25, 0x01	; 1
    1bd6:	9c af       	std	Y+60, r25	; 0x3c
    1bd8:	8b af       	std	Y+59, r24	; 0x3b
    1bda:	8b ad       	ldd	r24, Y+59	; 0x3b
    1bdc:	9c ad       	ldd	r25, Y+60	; 0x3c
    1bde:	01 97       	sbiw	r24, 0x01	; 1
    1be0:	f1 f7       	brne	.-4      	; 0x1bde <Animation2+0x24e>
    1be2:	9c af       	std	Y+60, r25	; 0x3c
    1be4:	8b af       	std	Y+59, r24	; 0x3b
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1be6:	8d ad       	ldd	r24, Y+61	; 0x3d
    1be8:	9e ad       	ldd	r25, Y+62	; 0x3e
    1bea:	01 97       	sbiw	r24, 0x01	; 1
    1bec:	9e af       	std	Y+62, r25	; 0x3e
    1bee:	8d af       	std	Y+61, r24	; 0x3d
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1bf0:	8d ad       	ldd	r24, Y+61	; 0x3d
    1bf2:	9e ad       	ldd	r25, Y+62	; 0x3e
    1bf4:	00 97       	sbiw	r24, 0x00	; 0
    1bf6:	69 f7       	brne	.-38     	; 0x1bd2 <Animation2+0x242>
    1bf8:	16 c0       	rjmp	.+44     	; 0x1c26 <Animation2+0x296>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1bfa:	fe 01       	movw	r30, r28
    1bfc:	ff 96       	adiw	r30, 0x3f	; 63
    1bfe:	60 81       	ld	r22, Z
    1c00:	71 81       	ldd	r23, Z+1	; 0x01
    1c02:	82 81       	ldd	r24, Z+2	; 0x02
    1c04:	93 81       	ldd	r25, Z+3	; 0x03
    1c06:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1c0a:	dc 01       	movw	r26, r24
    1c0c:	cb 01       	movw	r24, r22
    1c0e:	9e af       	std	Y+62, r25	; 0x3e
    1c10:	8d af       	std	Y+61, r24	; 0x3d
    1c12:	8d ad       	ldd	r24, Y+61	; 0x3d
    1c14:	9e ad       	ldd	r25, Y+62	; 0x3e
    1c16:	9a af       	std	Y+58, r25	; 0x3a
    1c18:	89 af       	std	Y+57, r24	; 0x39
    1c1a:	89 ad       	ldd	r24, Y+57	; 0x39
    1c1c:	9a ad       	ldd	r25, Y+58	; 0x3a
    1c1e:	01 97       	sbiw	r24, 0x01	; 1
    1c20:	f1 f7       	brne	.-4      	; 0x1c1e <Animation2+0x28e>
    1c22:	9a af       	std	Y+58, r25	; 0x3a
    1c24:	89 af       	std	Y+57, r24	; 0x39
	_delay_ms(500);
    H_Led_void_setON(BLU_LED);
    1c26:	82 e0       	ldi	r24, 0x02	; 2
    1c28:	0e 94 fb 08 	call	0x11f6	; 0x11f6 <H_Led_void_setON>
    1c2c:	80 e0       	ldi	r24, 0x00	; 0
    1c2e:	90 e0       	ldi	r25, 0x00	; 0
    1c30:	aa ef       	ldi	r26, 0xFA	; 250
    1c32:	b3 e4       	ldi	r27, 0x43	; 67
    1c34:	8d ab       	std	Y+53, r24	; 0x35
    1c36:	9e ab       	std	Y+54, r25	; 0x36
    1c38:	af ab       	std	Y+55, r26	; 0x37
    1c3a:	b8 af       	std	Y+56, r27	; 0x38
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1c3c:	6d a9       	ldd	r22, Y+53	; 0x35
    1c3e:	7e a9       	ldd	r23, Y+54	; 0x36
    1c40:	8f a9       	ldd	r24, Y+55	; 0x37
    1c42:	98 ad       	ldd	r25, Y+56	; 0x38
    1c44:	20 e0       	ldi	r18, 0x00	; 0
    1c46:	30 e0       	ldi	r19, 0x00	; 0
    1c48:	4a e7       	ldi	r20, 0x7A	; 122
    1c4a:	55 e4       	ldi	r21, 0x45	; 69
    1c4c:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1c50:	dc 01       	movw	r26, r24
    1c52:	cb 01       	movw	r24, r22
    1c54:	89 ab       	std	Y+49, r24	; 0x31
    1c56:	9a ab       	std	Y+50, r25	; 0x32
    1c58:	ab ab       	std	Y+51, r26	; 0x33
    1c5a:	bc ab       	std	Y+52, r27	; 0x34
	if (__tmp < 1.0)
    1c5c:	69 a9       	ldd	r22, Y+49	; 0x31
    1c5e:	7a a9       	ldd	r23, Y+50	; 0x32
    1c60:	8b a9       	ldd	r24, Y+51	; 0x33
    1c62:	9c a9       	ldd	r25, Y+52	; 0x34
    1c64:	20 e0       	ldi	r18, 0x00	; 0
    1c66:	30 e0       	ldi	r19, 0x00	; 0
    1c68:	40 e8       	ldi	r20, 0x80	; 128
    1c6a:	5f e3       	ldi	r21, 0x3F	; 63
    1c6c:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    1c70:	88 23       	and	r24, r24
    1c72:	2c f4       	brge	.+10     	; 0x1c7e <Animation2+0x2ee>
		__ticks = 1;
    1c74:	81 e0       	ldi	r24, 0x01	; 1
    1c76:	90 e0       	ldi	r25, 0x00	; 0
    1c78:	98 ab       	std	Y+48, r25	; 0x30
    1c7a:	8f a7       	std	Y+47, r24	; 0x2f
    1c7c:	3f c0       	rjmp	.+126    	; 0x1cfc <Animation2+0x36c>
	else if (__tmp > 65535)
    1c7e:	69 a9       	ldd	r22, Y+49	; 0x31
    1c80:	7a a9       	ldd	r23, Y+50	; 0x32
    1c82:	8b a9       	ldd	r24, Y+51	; 0x33
    1c84:	9c a9       	ldd	r25, Y+52	; 0x34
    1c86:	20 e0       	ldi	r18, 0x00	; 0
    1c88:	3f ef       	ldi	r19, 0xFF	; 255
    1c8a:	4f e7       	ldi	r20, 0x7F	; 127
    1c8c:	57 e4       	ldi	r21, 0x47	; 71
    1c8e:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    1c92:	18 16       	cp	r1, r24
    1c94:	4c f5       	brge	.+82     	; 0x1ce8 <Animation2+0x358>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1c96:	6d a9       	ldd	r22, Y+53	; 0x35
    1c98:	7e a9       	ldd	r23, Y+54	; 0x36
    1c9a:	8f a9       	ldd	r24, Y+55	; 0x37
    1c9c:	98 ad       	ldd	r25, Y+56	; 0x38
    1c9e:	20 e0       	ldi	r18, 0x00	; 0
    1ca0:	30 e0       	ldi	r19, 0x00	; 0
    1ca2:	40 e2       	ldi	r20, 0x20	; 32
    1ca4:	51 e4       	ldi	r21, 0x41	; 65
    1ca6:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1caa:	dc 01       	movw	r26, r24
    1cac:	cb 01       	movw	r24, r22
    1cae:	bc 01       	movw	r22, r24
    1cb0:	cd 01       	movw	r24, r26
    1cb2:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1cb6:	dc 01       	movw	r26, r24
    1cb8:	cb 01       	movw	r24, r22
    1cba:	98 ab       	std	Y+48, r25	; 0x30
    1cbc:	8f a7       	std	Y+47, r24	; 0x2f
    1cbe:	0f c0       	rjmp	.+30     	; 0x1cde <Animation2+0x34e>
    1cc0:	80 e9       	ldi	r24, 0x90	; 144
    1cc2:	91 e0       	ldi	r25, 0x01	; 1
    1cc4:	9e a7       	std	Y+46, r25	; 0x2e
    1cc6:	8d a7       	std	Y+45, r24	; 0x2d
    1cc8:	8d a5       	ldd	r24, Y+45	; 0x2d
    1cca:	9e a5       	ldd	r25, Y+46	; 0x2e
    1ccc:	01 97       	sbiw	r24, 0x01	; 1
    1cce:	f1 f7       	brne	.-4      	; 0x1ccc <Animation2+0x33c>
    1cd0:	9e a7       	std	Y+46, r25	; 0x2e
    1cd2:	8d a7       	std	Y+45, r24	; 0x2d
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1cd4:	8f a5       	ldd	r24, Y+47	; 0x2f
    1cd6:	98 a9       	ldd	r25, Y+48	; 0x30
    1cd8:	01 97       	sbiw	r24, 0x01	; 1
    1cda:	98 ab       	std	Y+48, r25	; 0x30
    1cdc:	8f a7       	std	Y+47, r24	; 0x2f
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1cde:	8f a5       	ldd	r24, Y+47	; 0x2f
    1ce0:	98 a9       	ldd	r25, Y+48	; 0x30
    1ce2:	00 97       	sbiw	r24, 0x00	; 0
    1ce4:	69 f7       	brne	.-38     	; 0x1cc0 <Animation2+0x330>
    1ce6:	14 c0       	rjmp	.+40     	; 0x1d10 <Animation2+0x380>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1ce8:	69 a9       	ldd	r22, Y+49	; 0x31
    1cea:	7a a9       	ldd	r23, Y+50	; 0x32
    1cec:	8b a9       	ldd	r24, Y+51	; 0x33
    1cee:	9c a9       	ldd	r25, Y+52	; 0x34
    1cf0:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1cf4:	dc 01       	movw	r26, r24
    1cf6:	cb 01       	movw	r24, r22
    1cf8:	98 ab       	std	Y+48, r25	; 0x30
    1cfa:	8f a7       	std	Y+47, r24	; 0x2f
    1cfc:	8f a5       	ldd	r24, Y+47	; 0x2f
    1cfe:	98 a9       	ldd	r25, Y+48	; 0x30
    1d00:	9c a7       	std	Y+44, r25	; 0x2c
    1d02:	8b a7       	std	Y+43, r24	; 0x2b
    1d04:	8b a5       	ldd	r24, Y+43	; 0x2b
    1d06:	9c a5       	ldd	r25, Y+44	; 0x2c
    1d08:	01 97       	sbiw	r24, 0x01	; 1
    1d0a:	f1 f7       	brne	.-4      	; 0x1d08 <Animation2+0x378>
    1d0c:	9c a7       	std	Y+44, r25	; 0x2c
    1d0e:	8b a7       	std	Y+43, r24	; 0x2b
    _delay_ms(500);
    H_Led_void_setOFF(BLU_LED);
    1d10:	82 e0       	ldi	r24, 0x02	; 2
    1d12:	0e 94 2c 09 	call	0x1258	; 0x1258 <H_Led_void_setOFF>
    1d16:	80 e0       	ldi	r24, 0x00	; 0
    1d18:	90 e0       	ldi	r25, 0x00	; 0
    1d1a:	aa ef       	ldi	r26, 0xFA	; 250
    1d1c:	b3 e4       	ldi	r27, 0x43	; 67
    1d1e:	8f a3       	std	Y+39, r24	; 0x27
    1d20:	98 a7       	std	Y+40, r25	; 0x28
    1d22:	a9 a7       	std	Y+41, r26	; 0x29
    1d24:	ba a7       	std	Y+42, r27	; 0x2a
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1d26:	6f a1       	ldd	r22, Y+39	; 0x27
    1d28:	78 a5       	ldd	r23, Y+40	; 0x28
    1d2a:	89 a5       	ldd	r24, Y+41	; 0x29
    1d2c:	9a a5       	ldd	r25, Y+42	; 0x2a
    1d2e:	20 e0       	ldi	r18, 0x00	; 0
    1d30:	30 e0       	ldi	r19, 0x00	; 0
    1d32:	4a e7       	ldi	r20, 0x7A	; 122
    1d34:	55 e4       	ldi	r21, 0x45	; 69
    1d36:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1d3a:	dc 01       	movw	r26, r24
    1d3c:	cb 01       	movw	r24, r22
    1d3e:	8b a3       	std	Y+35, r24	; 0x23
    1d40:	9c a3       	std	Y+36, r25	; 0x24
    1d42:	ad a3       	std	Y+37, r26	; 0x25
    1d44:	be a3       	std	Y+38, r27	; 0x26
	if (__tmp < 1.0)
    1d46:	6b a1       	ldd	r22, Y+35	; 0x23
    1d48:	7c a1       	ldd	r23, Y+36	; 0x24
    1d4a:	8d a1       	ldd	r24, Y+37	; 0x25
    1d4c:	9e a1       	ldd	r25, Y+38	; 0x26
    1d4e:	20 e0       	ldi	r18, 0x00	; 0
    1d50:	30 e0       	ldi	r19, 0x00	; 0
    1d52:	40 e8       	ldi	r20, 0x80	; 128
    1d54:	5f e3       	ldi	r21, 0x3F	; 63
    1d56:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    1d5a:	88 23       	and	r24, r24
    1d5c:	2c f4       	brge	.+10     	; 0x1d68 <Animation2+0x3d8>
		__ticks = 1;
    1d5e:	81 e0       	ldi	r24, 0x01	; 1
    1d60:	90 e0       	ldi	r25, 0x00	; 0
    1d62:	9a a3       	std	Y+34, r25	; 0x22
    1d64:	89 a3       	std	Y+33, r24	; 0x21
    1d66:	3f c0       	rjmp	.+126    	; 0x1de6 <Animation2+0x456>
	else if (__tmp > 65535)
    1d68:	6b a1       	ldd	r22, Y+35	; 0x23
    1d6a:	7c a1       	ldd	r23, Y+36	; 0x24
    1d6c:	8d a1       	ldd	r24, Y+37	; 0x25
    1d6e:	9e a1       	ldd	r25, Y+38	; 0x26
    1d70:	20 e0       	ldi	r18, 0x00	; 0
    1d72:	3f ef       	ldi	r19, 0xFF	; 255
    1d74:	4f e7       	ldi	r20, 0x7F	; 127
    1d76:	57 e4       	ldi	r21, 0x47	; 71
    1d78:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    1d7c:	18 16       	cp	r1, r24
    1d7e:	4c f5       	brge	.+82     	; 0x1dd2 <Animation2+0x442>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1d80:	6f a1       	ldd	r22, Y+39	; 0x27
    1d82:	78 a5       	ldd	r23, Y+40	; 0x28
    1d84:	89 a5       	ldd	r24, Y+41	; 0x29
    1d86:	9a a5       	ldd	r25, Y+42	; 0x2a
    1d88:	20 e0       	ldi	r18, 0x00	; 0
    1d8a:	30 e0       	ldi	r19, 0x00	; 0
    1d8c:	40 e2       	ldi	r20, 0x20	; 32
    1d8e:	51 e4       	ldi	r21, 0x41	; 65
    1d90:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1d94:	dc 01       	movw	r26, r24
    1d96:	cb 01       	movw	r24, r22
    1d98:	bc 01       	movw	r22, r24
    1d9a:	cd 01       	movw	r24, r26
    1d9c:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1da0:	dc 01       	movw	r26, r24
    1da2:	cb 01       	movw	r24, r22
    1da4:	9a a3       	std	Y+34, r25	; 0x22
    1da6:	89 a3       	std	Y+33, r24	; 0x21
    1da8:	0f c0       	rjmp	.+30     	; 0x1dc8 <Animation2+0x438>
    1daa:	80 e9       	ldi	r24, 0x90	; 144
    1dac:	91 e0       	ldi	r25, 0x01	; 1
    1dae:	98 a3       	std	Y+32, r25	; 0x20
    1db0:	8f 8f       	std	Y+31, r24	; 0x1f
    1db2:	8f 8d       	ldd	r24, Y+31	; 0x1f
    1db4:	98 a1       	ldd	r25, Y+32	; 0x20
    1db6:	01 97       	sbiw	r24, 0x01	; 1
    1db8:	f1 f7       	brne	.-4      	; 0x1db6 <Animation2+0x426>
    1dba:	98 a3       	std	Y+32, r25	; 0x20
    1dbc:	8f 8f       	std	Y+31, r24	; 0x1f
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1dbe:	89 a1       	ldd	r24, Y+33	; 0x21
    1dc0:	9a a1       	ldd	r25, Y+34	; 0x22
    1dc2:	01 97       	sbiw	r24, 0x01	; 1
    1dc4:	9a a3       	std	Y+34, r25	; 0x22
    1dc6:	89 a3       	std	Y+33, r24	; 0x21
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1dc8:	89 a1       	ldd	r24, Y+33	; 0x21
    1dca:	9a a1       	ldd	r25, Y+34	; 0x22
    1dcc:	00 97       	sbiw	r24, 0x00	; 0
    1dce:	69 f7       	brne	.-38     	; 0x1daa <Animation2+0x41a>
    1dd0:	14 c0       	rjmp	.+40     	; 0x1dfa <Animation2+0x46a>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1dd2:	6b a1       	ldd	r22, Y+35	; 0x23
    1dd4:	7c a1       	ldd	r23, Y+36	; 0x24
    1dd6:	8d a1       	ldd	r24, Y+37	; 0x25
    1dd8:	9e a1       	ldd	r25, Y+38	; 0x26
    1dda:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1dde:	dc 01       	movw	r26, r24
    1de0:	cb 01       	movw	r24, r22
    1de2:	9a a3       	std	Y+34, r25	; 0x22
    1de4:	89 a3       	std	Y+33, r24	; 0x21
    1de6:	89 a1       	ldd	r24, Y+33	; 0x21
    1de8:	9a a1       	ldd	r25, Y+34	; 0x22
    1dea:	9e 8f       	std	Y+30, r25	; 0x1e
    1dec:	8d 8f       	std	Y+29, r24	; 0x1d
    1dee:	8d 8d       	ldd	r24, Y+29	; 0x1d
    1df0:	9e 8d       	ldd	r25, Y+30	; 0x1e
    1df2:	01 97       	sbiw	r24, 0x01	; 1
    1df4:	f1 f7       	brne	.-4      	; 0x1df2 <Animation2+0x462>
    1df6:	9e 8f       	std	Y+30, r25	; 0x1e
    1df8:	8d 8f       	std	Y+29, r24	; 0x1d
    _delay_ms(500);
    H_Led_void_setON(GRN_LED);
    1dfa:	81 e0       	ldi	r24, 0x01	; 1
    1dfc:	0e 94 fb 08 	call	0x11f6	; 0x11f6 <H_Led_void_setON>
    1e00:	80 e0       	ldi	r24, 0x00	; 0
    1e02:	90 e0       	ldi	r25, 0x00	; 0
    1e04:	aa ef       	ldi	r26, 0xFA	; 250
    1e06:	b3 e4       	ldi	r27, 0x43	; 67
    1e08:	89 8f       	std	Y+25, r24	; 0x19
    1e0a:	9a 8f       	std	Y+26, r25	; 0x1a
    1e0c:	ab 8f       	std	Y+27, r26	; 0x1b
    1e0e:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1e10:	69 8d       	ldd	r22, Y+25	; 0x19
    1e12:	7a 8d       	ldd	r23, Y+26	; 0x1a
    1e14:	8b 8d       	ldd	r24, Y+27	; 0x1b
    1e16:	9c 8d       	ldd	r25, Y+28	; 0x1c
    1e18:	20 e0       	ldi	r18, 0x00	; 0
    1e1a:	30 e0       	ldi	r19, 0x00	; 0
    1e1c:	4a e7       	ldi	r20, 0x7A	; 122
    1e1e:	55 e4       	ldi	r21, 0x45	; 69
    1e20:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1e24:	dc 01       	movw	r26, r24
    1e26:	cb 01       	movw	r24, r22
    1e28:	8d 8b       	std	Y+21, r24	; 0x15
    1e2a:	9e 8b       	std	Y+22, r25	; 0x16
    1e2c:	af 8b       	std	Y+23, r26	; 0x17
    1e2e:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    1e30:	6d 89       	ldd	r22, Y+21	; 0x15
    1e32:	7e 89       	ldd	r23, Y+22	; 0x16
    1e34:	8f 89       	ldd	r24, Y+23	; 0x17
    1e36:	98 8d       	ldd	r25, Y+24	; 0x18
    1e38:	20 e0       	ldi	r18, 0x00	; 0
    1e3a:	30 e0       	ldi	r19, 0x00	; 0
    1e3c:	40 e8       	ldi	r20, 0x80	; 128
    1e3e:	5f e3       	ldi	r21, 0x3F	; 63
    1e40:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    1e44:	88 23       	and	r24, r24
    1e46:	2c f4       	brge	.+10     	; 0x1e52 <Animation2+0x4c2>
		__ticks = 1;
    1e48:	81 e0       	ldi	r24, 0x01	; 1
    1e4a:	90 e0       	ldi	r25, 0x00	; 0
    1e4c:	9c 8b       	std	Y+20, r25	; 0x14
    1e4e:	8b 8b       	std	Y+19, r24	; 0x13
    1e50:	3f c0       	rjmp	.+126    	; 0x1ed0 <Animation2+0x540>
	else if (__tmp > 65535)
    1e52:	6d 89       	ldd	r22, Y+21	; 0x15
    1e54:	7e 89       	ldd	r23, Y+22	; 0x16
    1e56:	8f 89       	ldd	r24, Y+23	; 0x17
    1e58:	98 8d       	ldd	r25, Y+24	; 0x18
    1e5a:	20 e0       	ldi	r18, 0x00	; 0
    1e5c:	3f ef       	ldi	r19, 0xFF	; 255
    1e5e:	4f e7       	ldi	r20, 0x7F	; 127
    1e60:	57 e4       	ldi	r21, 0x47	; 71
    1e62:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    1e66:	18 16       	cp	r1, r24
    1e68:	4c f5       	brge	.+82     	; 0x1ebc <Animation2+0x52c>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1e6a:	69 8d       	ldd	r22, Y+25	; 0x19
    1e6c:	7a 8d       	ldd	r23, Y+26	; 0x1a
    1e6e:	8b 8d       	ldd	r24, Y+27	; 0x1b
    1e70:	9c 8d       	ldd	r25, Y+28	; 0x1c
    1e72:	20 e0       	ldi	r18, 0x00	; 0
    1e74:	30 e0       	ldi	r19, 0x00	; 0
    1e76:	40 e2       	ldi	r20, 0x20	; 32
    1e78:	51 e4       	ldi	r21, 0x41	; 65
    1e7a:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1e7e:	dc 01       	movw	r26, r24
    1e80:	cb 01       	movw	r24, r22
    1e82:	bc 01       	movw	r22, r24
    1e84:	cd 01       	movw	r24, r26
    1e86:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1e8a:	dc 01       	movw	r26, r24
    1e8c:	cb 01       	movw	r24, r22
    1e8e:	9c 8b       	std	Y+20, r25	; 0x14
    1e90:	8b 8b       	std	Y+19, r24	; 0x13
    1e92:	0f c0       	rjmp	.+30     	; 0x1eb2 <Animation2+0x522>
    1e94:	80 e9       	ldi	r24, 0x90	; 144
    1e96:	91 e0       	ldi	r25, 0x01	; 1
    1e98:	9a 8b       	std	Y+18, r25	; 0x12
    1e9a:	89 8b       	std	Y+17, r24	; 0x11
    1e9c:	89 89       	ldd	r24, Y+17	; 0x11
    1e9e:	9a 89       	ldd	r25, Y+18	; 0x12
    1ea0:	01 97       	sbiw	r24, 0x01	; 1
    1ea2:	f1 f7       	brne	.-4      	; 0x1ea0 <Animation2+0x510>
    1ea4:	9a 8b       	std	Y+18, r25	; 0x12
    1ea6:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1ea8:	8b 89       	ldd	r24, Y+19	; 0x13
    1eaa:	9c 89       	ldd	r25, Y+20	; 0x14
    1eac:	01 97       	sbiw	r24, 0x01	; 1
    1eae:	9c 8b       	std	Y+20, r25	; 0x14
    1eb0:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1eb2:	8b 89       	ldd	r24, Y+19	; 0x13
    1eb4:	9c 89       	ldd	r25, Y+20	; 0x14
    1eb6:	00 97       	sbiw	r24, 0x00	; 0
    1eb8:	69 f7       	brne	.-38     	; 0x1e94 <Animation2+0x504>
    1eba:	14 c0       	rjmp	.+40     	; 0x1ee4 <Animation2+0x554>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1ebc:	6d 89       	ldd	r22, Y+21	; 0x15
    1ebe:	7e 89       	ldd	r23, Y+22	; 0x16
    1ec0:	8f 89       	ldd	r24, Y+23	; 0x17
    1ec2:	98 8d       	ldd	r25, Y+24	; 0x18
    1ec4:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1ec8:	dc 01       	movw	r26, r24
    1eca:	cb 01       	movw	r24, r22
    1ecc:	9c 8b       	std	Y+20, r25	; 0x14
    1ece:	8b 8b       	std	Y+19, r24	; 0x13
    1ed0:	8b 89       	ldd	r24, Y+19	; 0x13
    1ed2:	9c 89       	ldd	r25, Y+20	; 0x14
    1ed4:	98 8b       	std	Y+16, r25	; 0x10
    1ed6:	8f 87       	std	Y+15, r24	; 0x0f
    1ed8:	8f 85       	ldd	r24, Y+15	; 0x0f
    1eda:	98 89       	ldd	r25, Y+16	; 0x10
    1edc:	01 97       	sbiw	r24, 0x01	; 1
    1ede:	f1 f7       	brne	.-4      	; 0x1edc <Animation2+0x54c>
    1ee0:	98 8b       	std	Y+16, r25	; 0x10
    1ee2:	8f 87       	std	Y+15, r24	; 0x0f
     _delay_ms(500);
    H_Led_void_setOFF(GRN_LED);
    1ee4:	81 e0       	ldi	r24, 0x01	; 1
    1ee6:	0e 94 2c 09 	call	0x1258	; 0x1258 <H_Led_void_setOFF>
    1eea:	80 e0       	ldi	r24, 0x00	; 0
    1eec:	90 e0       	ldi	r25, 0x00	; 0
    1eee:	aa ef       	ldi	r26, 0xFA	; 250
    1ef0:	b3 e4       	ldi	r27, 0x43	; 67
    1ef2:	8b 87       	std	Y+11, r24	; 0x0b
    1ef4:	9c 87       	std	Y+12, r25	; 0x0c
    1ef6:	ad 87       	std	Y+13, r26	; 0x0d
    1ef8:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1efa:	6b 85       	ldd	r22, Y+11	; 0x0b
    1efc:	7c 85       	ldd	r23, Y+12	; 0x0c
    1efe:	8d 85       	ldd	r24, Y+13	; 0x0d
    1f00:	9e 85       	ldd	r25, Y+14	; 0x0e
    1f02:	20 e0       	ldi	r18, 0x00	; 0
    1f04:	30 e0       	ldi	r19, 0x00	; 0
    1f06:	4a e7       	ldi	r20, 0x7A	; 122
    1f08:	55 e4       	ldi	r21, 0x45	; 69
    1f0a:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1f0e:	dc 01       	movw	r26, r24
    1f10:	cb 01       	movw	r24, r22
    1f12:	8f 83       	std	Y+7, r24	; 0x07
    1f14:	98 87       	std	Y+8, r25	; 0x08
    1f16:	a9 87       	std	Y+9, r26	; 0x09
    1f18:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    1f1a:	6f 81       	ldd	r22, Y+7	; 0x07
    1f1c:	78 85       	ldd	r23, Y+8	; 0x08
    1f1e:	89 85       	ldd	r24, Y+9	; 0x09
    1f20:	9a 85       	ldd	r25, Y+10	; 0x0a
    1f22:	20 e0       	ldi	r18, 0x00	; 0
    1f24:	30 e0       	ldi	r19, 0x00	; 0
    1f26:	40 e8       	ldi	r20, 0x80	; 128
    1f28:	5f e3       	ldi	r21, 0x3F	; 63
    1f2a:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    1f2e:	88 23       	and	r24, r24
    1f30:	2c f4       	brge	.+10     	; 0x1f3c <Animation2+0x5ac>
		__ticks = 1;
    1f32:	81 e0       	ldi	r24, 0x01	; 1
    1f34:	90 e0       	ldi	r25, 0x00	; 0
    1f36:	9e 83       	std	Y+6, r25	; 0x06
    1f38:	8d 83       	std	Y+5, r24	; 0x05
    1f3a:	3f c0       	rjmp	.+126    	; 0x1fba <Animation2+0x62a>
	else if (__tmp > 65535)
    1f3c:	6f 81       	ldd	r22, Y+7	; 0x07
    1f3e:	78 85       	ldd	r23, Y+8	; 0x08
    1f40:	89 85       	ldd	r24, Y+9	; 0x09
    1f42:	9a 85       	ldd	r25, Y+10	; 0x0a
    1f44:	20 e0       	ldi	r18, 0x00	; 0
    1f46:	3f ef       	ldi	r19, 0xFF	; 255
    1f48:	4f e7       	ldi	r20, 0x7F	; 127
    1f4a:	57 e4       	ldi	r21, 0x47	; 71
    1f4c:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    1f50:	18 16       	cp	r1, r24
    1f52:	4c f5       	brge	.+82     	; 0x1fa6 <Animation2+0x616>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1f54:	6b 85       	ldd	r22, Y+11	; 0x0b
    1f56:	7c 85       	ldd	r23, Y+12	; 0x0c
    1f58:	8d 85       	ldd	r24, Y+13	; 0x0d
    1f5a:	9e 85       	ldd	r25, Y+14	; 0x0e
    1f5c:	20 e0       	ldi	r18, 0x00	; 0
    1f5e:	30 e0       	ldi	r19, 0x00	; 0
    1f60:	40 e2       	ldi	r20, 0x20	; 32
    1f62:	51 e4       	ldi	r21, 0x41	; 65
    1f64:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1f68:	dc 01       	movw	r26, r24
    1f6a:	cb 01       	movw	r24, r22
    1f6c:	bc 01       	movw	r22, r24
    1f6e:	cd 01       	movw	r24, r26
    1f70:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1f74:	dc 01       	movw	r26, r24
    1f76:	cb 01       	movw	r24, r22
    1f78:	9e 83       	std	Y+6, r25	; 0x06
    1f7a:	8d 83       	std	Y+5, r24	; 0x05
    1f7c:	0f c0       	rjmp	.+30     	; 0x1f9c <Animation2+0x60c>
    1f7e:	80 e9       	ldi	r24, 0x90	; 144
    1f80:	91 e0       	ldi	r25, 0x01	; 1
    1f82:	9c 83       	std	Y+4, r25	; 0x04
    1f84:	8b 83       	std	Y+3, r24	; 0x03
    1f86:	8b 81       	ldd	r24, Y+3	; 0x03
    1f88:	9c 81       	ldd	r25, Y+4	; 0x04
    1f8a:	01 97       	sbiw	r24, 0x01	; 1
    1f8c:	f1 f7       	brne	.-4      	; 0x1f8a <Animation2+0x5fa>
    1f8e:	9c 83       	std	Y+4, r25	; 0x04
    1f90:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1f92:	8d 81       	ldd	r24, Y+5	; 0x05
    1f94:	9e 81       	ldd	r25, Y+6	; 0x06
    1f96:	01 97       	sbiw	r24, 0x01	; 1
    1f98:	9e 83       	std	Y+6, r25	; 0x06
    1f9a:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1f9c:	8d 81       	ldd	r24, Y+5	; 0x05
    1f9e:	9e 81       	ldd	r25, Y+6	; 0x06
    1fa0:	00 97       	sbiw	r24, 0x00	; 0
    1fa2:	69 f7       	brne	.-38     	; 0x1f7e <Animation2+0x5ee>
    1fa4:	14 c0       	rjmp	.+40     	; 0x1fce <Animation2+0x63e>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1fa6:	6f 81       	ldd	r22, Y+7	; 0x07
    1fa8:	78 85       	ldd	r23, Y+8	; 0x08
    1faa:	89 85       	ldd	r24, Y+9	; 0x09
    1fac:	9a 85       	ldd	r25, Y+10	; 0x0a
    1fae:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1fb2:	dc 01       	movw	r26, r24
    1fb4:	cb 01       	movw	r24, r22
    1fb6:	9e 83       	std	Y+6, r25	; 0x06
    1fb8:	8d 83       	std	Y+5, r24	; 0x05
    1fba:	8d 81       	ldd	r24, Y+5	; 0x05
    1fbc:	9e 81       	ldd	r25, Y+6	; 0x06
    1fbe:	9a 83       	std	Y+2, r25	; 0x02
    1fc0:	89 83       	std	Y+1, r24	; 0x01
    1fc2:	89 81       	ldd	r24, Y+1	; 0x01
    1fc4:	9a 81       	ldd	r25, Y+2	; 0x02
    1fc6:	01 97       	sbiw	r24, 0x01	; 1
    1fc8:	f1 f7       	brne	.-4      	; 0x1fc6 <Animation2+0x636>
    1fca:	9a 83       	std	Y+2, r25	; 0x02
    1fcc:	89 83       	std	Y+1, r24	; 0x01
     _delay_ms(500);

}
    1fce:	cc 5a       	subi	r28, 0xAC	; 172
    1fd0:	df 4f       	sbci	r29, 0xFF	; 255
    1fd2:	0f b6       	in	r0, 0x3f	; 63
    1fd4:	f8 94       	cli
    1fd6:	de bf       	out	0x3e, r29	; 62
    1fd8:	0f be       	out	0x3f, r0	; 63
    1fda:	cd bf       	out	0x3d, r28	; 61
    1fdc:	cf 91       	pop	r28
    1fde:	df 91       	pop	r29
    1fe0:	1f 91       	pop	r17
    1fe2:	0f 91       	pop	r16
    1fe4:	08 95       	ret

00001fe6 <Animation3>:
void Animation3()
{
    1fe6:	df 93       	push	r29
    1fe8:	cf 93       	push	r28
    1fea:	cd b7       	in	r28, 0x3d	; 61
    1fec:	de b7       	in	r29, 0x3e	; 62
    1fee:	6c 97       	sbiw	r28, 0x1c	; 28
    1ff0:	0f b6       	in	r0, 0x3f	; 63
    1ff2:	f8 94       	cli
    1ff4:	de bf       	out	0x3e, r29	; 62
    1ff6:	0f be       	out	0x3f, r0	; 63
    1ff8:	cd bf       	out	0x3d, r28	; 61
	H_Led_void_setON(RED_LED);
    1ffa:	80 e0       	ldi	r24, 0x00	; 0
    1ffc:	0e 94 fb 08 	call	0x11f6	; 0x11f6 <H_Led_void_setON>
	H_Led_void_setON(BLU_LED);
    2000:	82 e0       	ldi	r24, 0x02	; 2
    2002:	0e 94 fb 08 	call	0x11f6	; 0x11f6 <H_Led_void_setON>
	H_Led_void_setON(GRN_LED);
    2006:	81 e0       	ldi	r24, 0x01	; 1
    2008:	0e 94 fb 08 	call	0x11f6	; 0x11f6 <H_Led_void_setON>
    200c:	80 e0       	ldi	r24, 0x00	; 0
    200e:	90 e0       	ldi	r25, 0x00	; 0
    2010:	aa ef       	ldi	r26, 0xFA	; 250
    2012:	b3 e4       	ldi	r27, 0x43	; 67
    2014:	89 8f       	std	Y+25, r24	; 0x19
    2016:	9a 8f       	std	Y+26, r25	; 0x1a
    2018:	ab 8f       	std	Y+27, r26	; 0x1b
    201a:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    201c:	69 8d       	ldd	r22, Y+25	; 0x19
    201e:	7a 8d       	ldd	r23, Y+26	; 0x1a
    2020:	8b 8d       	ldd	r24, Y+27	; 0x1b
    2022:	9c 8d       	ldd	r25, Y+28	; 0x1c
    2024:	20 e0       	ldi	r18, 0x00	; 0
    2026:	30 e0       	ldi	r19, 0x00	; 0
    2028:	4a e7       	ldi	r20, 0x7A	; 122
    202a:	55 e4       	ldi	r21, 0x45	; 69
    202c:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2030:	dc 01       	movw	r26, r24
    2032:	cb 01       	movw	r24, r22
    2034:	8d 8b       	std	Y+21, r24	; 0x15
    2036:	9e 8b       	std	Y+22, r25	; 0x16
    2038:	af 8b       	std	Y+23, r26	; 0x17
    203a:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    203c:	6d 89       	ldd	r22, Y+21	; 0x15
    203e:	7e 89       	ldd	r23, Y+22	; 0x16
    2040:	8f 89       	ldd	r24, Y+23	; 0x17
    2042:	98 8d       	ldd	r25, Y+24	; 0x18
    2044:	20 e0       	ldi	r18, 0x00	; 0
    2046:	30 e0       	ldi	r19, 0x00	; 0
    2048:	40 e8       	ldi	r20, 0x80	; 128
    204a:	5f e3       	ldi	r21, 0x3F	; 63
    204c:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    2050:	88 23       	and	r24, r24
    2052:	2c f4       	brge	.+10     	; 0x205e <Animation3+0x78>
		__ticks = 1;
    2054:	81 e0       	ldi	r24, 0x01	; 1
    2056:	90 e0       	ldi	r25, 0x00	; 0
    2058:	9c 8b       	std	Y+20, r25	; 0x14
    205a:	8b 8b       	std	Y+19, r24	; 0x13
    205c:	3f c0       	rjmp	.+126    	; 0x20dc <Animation3+0xf6>
	else if (__tmp > 65535)
    205e:	6d 89       	ldd	r22, Y+21	; 0x15
    2060:	7e 89       	ldd	r23, Y+22	; 0x16
    2062:	8f 89       	ldd	r24, Y+23	; 0x17
    2064:	98 8d       	ldd	r25, Y+24	; 0x18
    2066:	20 e0       	ldi	r18, 0x00	; 0
    2068:	3f ef       	ldi	r19, 0xFF	; 255
    206a:	4f e7       	ldi	r20, 0x7F	; 127
    206c:	57 e4       	ldi	r21, 0x47	; 71
    206e:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    2072:	18 16       	cp	r1, r24
    2074:	4c f5       	brge	.+82     	; 0x20c8 <Animation3+0xe2>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2076:	69 8d       	ldd	r22, Y+25	; 0x19
    2078:	7a 8d       	ldd	r23, Y+26	; 0x1a
    207a:	8b 8d       	ldd	r24, Y+27	; 0x1b
    207c:	9c 8d       	ldd	r25, Y+28	; 0x1c
    207e:	20 e0       	ldi	r18, 0x00	; 0
    2080:	30 e0       	ldi	r19, 0x00	; 0
    2082:	40 e2       	ldi	r20, 0x20	; 32
    2084:	51 e4       	ldi	r21, 0x41	; 65
    2086:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    208a:	dc 01       	movw	r26, r24
    208c:	cb 01       	movw	r24, r22
    208e:	bc 01       	movw	r22, r24
    2090:	cd 01       	movw	r24, r26
    2092:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2096:	dc 01       	movw	r26, r24
    2098:	cb 01       	movw	r24, r22
    209a:	9c 8b       	std	Y+20, r25	; 0x14
    209c:	8b 8b       	std	Y+19, r24	; 0x13
    209e:	0f c0       	rjmp	.+30     	; 0x20be <Animation3+0xd8>
    20a0:	80 e9       	ldi	r24, 0x90	; 144
    20a2:	91 e0       	ldi	r25, 0x01	; 1
    20a4:	9a 8b       	std	Y+18, r25	; 0x12
    20a6:	89 8b       	std	Y+17, r24	; 0x11
    20a8:	89 89       	ldd	r24, Y+17	; 0x11
    20aa:	9a 89       	ldd	r25, Y+18	; 0x12
    20ac:	01 97       	sbiw	r24, 0x01	; 1
    20ae:	f1 f7       	brne	.-4      	; 0x20ac <Animation3+0xc6>
    20b0:	9a 8b       	std	Y+18, r25	; 0x12
    20b2:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    20b4:	8b 89       	ldd	r24, Y+19	; 0x13
    20b6:	9c 89       	ldd	r25, Y+20	; 0x14
    20b8:	01 97       	sbiw	r24, 0x01	; 1
    20ba:	9c 8b       	std	Y+20, r25	; 0x14
    20bc:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    20be:	8b 89       	ldd	r24, Y+19	; 0x13
    20c0:	9c 89       	ldd	r25, Y+20	; 0x14
    20c2:	00 97       	sbiw	r24, 0x00	; 0
    20c4:	69 f7       	brne	.-38     	; 0x20a0 <Animation3+0xba>
    20c6:	14 c0       	rjmp	.+40     	; 0x20f0 <Animation3+0x10a>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    20c8:	6d 89       	ldd	r22, Y+21	; 0x15
    20ca:	7e 89       	ldd	r23, Y+22	; 0x16
    20cc:	8f 89       	ldd	r24, Y+23	; 0x17
    20ce:	98 8d       	ldd	r25, Y+24	; 0x18
    20d0:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    20d4:	dc 01       	movw	r26, r24
    20d6:	cb 01       	movw	r24, r22
    20d8:	9c 8b       	std	Y+20, r25	; 0x14
    20da:	8b 8b       	std	Y+19, r24	; 0x13
    20dc:	8b 89       	ldd	r24, Y+19	; 0x13
    20de:	9c 89       	ldd	r25, Y+20	; 0x14
    20e0:	98 8b       	std	Y+16, r25	; 0x10
    20e2:	8f 87       	std	Y+15, r24	; 0x0f
    20e4:	8f 85       	ldd	r24, Y+15	; 0x0f
    20e6:	98 89       	ldd	r25, Y+16	; 0x10
    20e8:	01 97       	sbiw	r24, 0x01	; 1
    20ea:	f1 f7       	brne	.-4      	; 0x20e8 <Animation3+0x102>
    20ec:	98 8b       	std	Y+16, r25	; 0x10
    20ee:	8f 87       	std	Y+15, r24	; 0x0f
	_delay_ms(500);
	H_Led_void_setOFF(RED_LED);
    20f0:	80 e0       	ldi	r24, 0x00	; 0
    20f2:	0e 94 2c 09 	call	0x1258	; 0x1258 <H_Led_void_setOFF>
	H_Led_void_setOFF(BLU_LED);
    20f6:	82 e0       	ldi	r24, 0x02	; 2
    20f8:	0e 94 2c 09 	call	0x1258	; 0x1258 <H_Led_void_setOFF>
	H_Led_void_setOFF(GRN_LED);
    20fc:	81 e0       	ldi	r24, 0x01	; 1
    20fe:	0e 94 2c 09 	call	0x1258	; 0x1258 <H_Led_void_setOFF>
    2102:	80 e0       	ldi	r24, 0x00	; 0
    2104:	90 e0       	ldi	r25, 0x00	; 0
    2106:	aa ef       	ldi	r26, 0xFA	; 250
    2108:	b3 e4       	ldi	r27, 0x43	; 67
    210a:	8b 87       	std	Y+11, r24	; 0x0b
    210c:	9c 87       	std	Y+12, r25	; 0x0c
    210e:	ad 87       	std	Y+13, r26	; 0x0d
    2110:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2112:	6b 85       	ldd	r22, Y+11	; 0x0b
    2114:	7c 85       	ldd	r23, Y+12	; 0x0c
    2116:	8d 85       	ldd	r24, Y+13	; 0x0d
    2118:	9e 85       	ldd	r25, Y+14	; 0x0e
    211a:	20 e0       	ldi	r18, 0x00	; 0
    211c:	30 e0       	ldi	r19, 0x00	; 0
    211e:	4a e7       	ldi	r20, 0x7A	; 122
    2120:	55 e4       	ldi	r21, 0x45	; 69
    2122:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2126:	dc 01       	movw	r26, r24
    2128:	cb 01       	movw	r24, r22
    212a:	8f 83       	std	Y+7, r24	; 0x07
    212c:	98 87       	std	Y+8, r25	; 0x08
    212e:	a9 87       	std	Y+9, r26	; 0x09
    2130:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    2132:	6f 81       	ldd	r22, Y+7	; 0x07
    2134:	78 85       	ldd	r23, Y+8	; 0x08
    2136:	89 85       	ldd	r24, Y+9	; 0x09
    2138:	9a 85       	ldd	r25, Y+10	; 0x0a
    213a:	20 e0       	ldi	r18, 0x00	; 0
    213c:	30 e0       	ldi	r19, 0x00	; 0
    213e:	40 e8       	ldi	r20, 0x80	; 128
    2140:	5f e3       	ldi	r21, 0x3F	; 63
    2142:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    2146:	88 23       	and	r24, r24
    2148:	2c f4       	brge	.+10     	; 0x2154 <Animation3+0x16e>
		__ticks = 1;
    214a:	81 e0       	ldi	r24, 0x01	; 1
    214c:	90 e0       	ldi	r25, 0x00	; 0
    214e:	9e 83       	std	Y+6, r25	; 0x06
    2150:	8d 83       	std	Y+5, r24	; 0x05
    2152:	3f c0       	rjmp	.+126    	; 0x21d2 <Animation3+0x1ec>
	else if (__tmp > 65535)
    2154:	6f 81       	ldd	r22, Y+7	; 0x07
    2156:	78 85       	ldd	r23, Y+8	; 0x08
    2158:	89 85       	ldd	r24, Y+9	; 0x09
    215a:	9a 85       	ldd	r25, Y+10	; 0x0a
    215c:	20 e0       	ldi	r18, 0x00	; 0
    215e:	3f ef       	ldi	r19, 0xFF	; 255
    2160:	4f e7       	ldi	r20, 0x7F	; 127
    2162:	57 e4       	ldi	r21, 0x47	; 71
    2164:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    2168:	18 16       	cp	r1, r24
    216a:	4c f5       	brge	.+82     	; 0x21be <Animation3+0x1d8>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    216c:	6b 85       	ldd	r22, Y+11	; 0x0b
    216e:	7c 85       	ldd	r23, Y+12	; 0x0c
    2170:	8d 85       	ldd	r24, Y+13	; 0x0d
    2172:	9e 85       	ldd	r25, Y+14	; 0x0e
    2174:	20 e0       	ldi	r18, 0x00	; 0
    2176:	30 e0       	ldi	r19, 0x00	; 0
    2178:	40 e2       	ldi	r20, 0x20	; 32
    217a:	51 e4       	ldi	r21, 0x41	; 65
    217c:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2180:	dc 01       	movw	r26, r24
    2182:	cb 01       	movw	r24, r22
    2184:	bc 01       	movw	r22, r24
    2186:	cd 01       	movw	r24, r26
    2188:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    218c:	dc 01       	movw	r26, r24
    218e:	cb 01       	movw	r24, r22
    2190:	9e 83       	std	Y+6, r25	; 0x06
    2192:	8d 83       	std	Y+5, r24	; 0x05
    2194:	0f c0       	rjmp	.+30     	; 0x21b4 <Animation3+0x1ce>
    2196:	80 e9       	ldi	r24, 0x90	; 144
    2198:	91 e0       	ldi	r25, 0x01	; 1
    219a:	9c 83       	std	Y+4, r25	; 0x04
    219c:	8b 83       	std	Y+3, r24	; 0x03
    219e:	8b 81       	ldd	r24, Y+3	; 0x03
    21a0:	9c 81       	ldd	r25, Y+4	; 0x04
    21a2:	01 97       	sbiw	r24, 0x01	; 1
    21a4:	f1 f7       	brne	.-4      	; 0x21a2 <Animation3+0x1bc>
    21a6:	9c 83       	std	Y+4, r25	; 0x04
    21a8:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    21aa:	8d 81       	ldd	r24, Y+5	; 0x05
    21ac:	9e 81       	ldd	r25, Y+6	; 0x06
    21ae:	01 97       	sbiw	r24, 0x01	; 1
    21b0:	9e 83       	std	Y+6, r25	; 0x06
    21b2:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    21b4:	8d 81       	ldd	r24, Y+5	; 0x05
    21b6:	9e 81       	ldd	r25, Y+6	; 0x06
    21b8:	00 97       	sbiw	r24, 0x00	; 0
    21ba:	69 f7       	brne	.-38     	; 0x2196 <Animation3+0x1b0>
    21bc:	14 c0       	rjmp	.+40     	; 0x21e6 <Animation3+0x200>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    21be:	6f 81       	ldd	r22, Y+7	; 0x07
    21c0:	78 85       	ldd	r23, Y+8	; 0x08
    21c2:	89 85       	ldd	r24, Y+9	; 0x09
    21c4:	9a 85       	ldd	r25, Y+10	; 0x0a
    21c6:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    21ca:	dc 01       	movw	r26, r24
    21cc:	cb 01       	movw	r24, r22
    21ce:	9e 83       	std	Y+6, r25	; 0x06
    21d0:	8d 83       	std	Y+5, r24	; 0x05
    21d2:	8d 81       	ldd	r24, Y+5	; 0x05
    21d4:	9e 81       	ldd	r25, Y+6	; 0x06
    21d6:	9a 83       	std	Y+2, r25	; 0x02
    21d8:	89 83       	std	Y+1, r24	; 0x01
    21da:	89 81       	ldd	r24, Y+1	; 0x01
    21dc:	9a 81       	ldd	r25, Y+2	; 0x02
    21de:	01 97       	sbiw	r24, 0x01	; 1
    21e0:	f1 f7       	brne	.-4      	; 0x21de <Animation3+0x1f8>
    21e2:	9a 83       	std	Y+2, r25	; 0x02
    21e4:	89 83       	std	Y+1, r24	; 0x01
	_delay_ms(500);

}
    21e6:	6c 96       	adiw	r28, 0x1c	; 28
    21e8:	0f b6       	in	r0, 0x3f	; 63
    21ea:	f8 94       	cli
    21ec:	de bf       	out	0x3e, r29	; 62
    21ee:	0f be       	out	0x3f, r0	; 63
    21f0:	cd bf       	out	0x3d, r28	; 61
    21f2:	cf 91       	pop	r28
    21f4:	df 91       	pop	r29
    21f6:	08 95       	ret

000021f8 <H_SSD_void_init>:



//u8 arr[]={0x3f,};
void H_SSD_void_init(void)
{
    21f8:	df 93       	push	r29
    21fa:	cf 93       	push	r28
    21fc:	cd b7       	in	r28, 0x3d	; 61
    21fe:	de b7       	in	r29, 0x3e	; 62
	M_DIO_void_setPinDir(SSD_LED_A_PORT,  SSD_LED_A_PIN , OUT);
    2200:	80 e0       	ldi	r24, 0x00	; 0
    2202:	61 e0       	ldi	r22, 0x01	; 1
    2204:	41 e0       	ldi	r20, 0x01	; 1
    2206:	0e 94 9b 05 	call	0xb36	; 0xb36 <M_DIO_void_setPinDir>
	M_DIO_void_setPinDir(SSD_LED_B_PORT,  SSD_LED_B_PIN , OUT);
    220a:	80 e0       	ldi	r24, 0x00	; 0
    220c:	62 e0       	ldi	r22, 0x02	; 2
    220e:	41 e0       	ldi	r20, 0x01	; 1
    2210:	0e 94 9b 05 	call	0xb36	; 0xb36 <M_DIO_void_setPinDir>
	M_DIO_void_setPinDir(SSD_LED_C_PORT,  SSD_LED_C_PIN , OUT);
    2214:	80 e0       	ldi	r24, 0x00	; 0
    2216:	63 e0       	ldi	r22, 0x03	; 3
    2218:	41 e0       	ldi	r20, 0x01	; 1
    221a:	0e 94 9b 05 	call	0xb36	; 0xb36 <M_DIO_void_setPinDir>
	M_DIO_void_setPinDir(SSD_LED_D_PORT,  SSD_LED_D_PIN , OUT);
    221e:	80 e0       	ldi	r24, 0x00	; 0
    2220:	64 e0       	ldi	r22, 0x04	; 4
    2222:	41 e0       	ldi	r20, 0x01	; 1
    2224:	0e 94 9b 05 	call	0xb36	; 0xb36 <M_DIO_void_setPinDir>
	M_DIO_void_setPinDir(SSD_LED_E_PORT,  SSD_LED_E_PIN , OUT);
    2228:	80 e0       	ldi	r24, 0x00	; 0
    222a:	65 e0       	ldi	r22, 0x05	; 5
    222c:	41 e0       	ldi	r20, 0x01	; 1
    222e:	0e 94 9b 05 	call	0xb36	; 0xb36 <M_DIO_void_setPinDir>
	M_DIO_void_setPinDir(SSD_LED_F_PORT,  SSD_LED_F_PIN , OUT);
    2232:	80 e0       	ldi	r24, 0x00	; 0
    2234:	66 e0       	ldi	r22, 0x06	; 6
    2236:	41 e0       	ldi	r20, 0x01	; 1
    2238:	0e 94 9b 05 	call	0xb36	; 0xb36 <M_DIO_void_setPinDir>
	M_DIO_void_setPinDir(SSD_LED_G_PORT,  SSD_LED_G_PIN , OUT);
    223c:	80 e0       	ldi	r24, 0x00	; 0
    223e:	67 e0       	ldi	r22, 0x07	; 7
    2240:	41 e0       	ldi	r20, 0x01	; 1
    2242:	0e 94 9b 05 	call	0xb36	; 0xb36 <M_DIO_void_setPinDir>
	M_DIO_void_setPinDir(SSD_LED_DOT_PORT,  SSD_LED_DOT_PIN , OUT);
    2246:	81 e0       	ldi	r24, 0x01	; 1
    2248:	60 e0       	ldi	r22, 0x00	; 0
    224a:	41 e0       	ldi	r20, 0x01	; 1
    224c:	0e 94 9b 05 	call	0xb36	; 0xb36 <M_DIO_void_setPinDir>

	//ENABLE DIGITS 1

	M_DIO_void_setPinDir(SSD_DIG_1_EN_PORT,  SSD_DIG_1_EN_PIN , OUT);
    2250:	82 e0       	ldi	r24, 0x02	; 2
    2252:	66 e0       	ldi	r22, 0x06	; 6
    2254:	41 e0       	ldi	r20, 0x01	; 1
    2256:	0e 94 9b 05 	call	0xb36	; 0xb36 <M_DIO_void_setPinDir>
	M_DIO_void_setPinDir(SSD_DIG_2_EN_PORT,  SSD_DIG_2_EN_PIN , OUT);
    225a:	82 e0       	ldi	r24, 0x02	; 2
    225c:	67 e0       	ldi	r22, 0x07	; 7
    225e:	41 e0       	ldi	r20, 0x01	; 1
    2260:	0e 94 9b 05 	call	0xb36	; 0xb36 <M_DIO_void_setPinDir>
}
    2264:	cf 91       	pop	r28
    2266:	df 91       	pop	r29
    2268:	08 95       	ret

0000226a <H_SSD_void_DisplayNumber>:
void H_SSD_void_DisplayNumber(u8 number)
{
    226a:	df 93       	push	r29
    226c:	cf 93       	push	r28
    226e:	cd b7       	in	r28, 0x3d	; 61
    2270:	de b7       	in	r29, 0x3e	; 62
    2272:	a7 97       	sbiw	r28, 0x27	; 39
    2274:	0f b6       	in	r0, 0x3f	; 63
    2276:	f8 94       	cli
    2278:	de bf       	out	0x3e, r29	; 62
    227a:	0f be       	out	0x3f, r0	; 63
    227c:	cd bf       	out	0x3d, r28	; 61
    227e:	8b a3       	std	Y+35, r24	; 0x23
	if(number>99)
    2280:	8b a1       	ldd	r24, Y+35	; 0x23
    2282:	84 36       	cpi	r24, 0x64	; 100
    2284:	08 f0       	brcs	.+2      	; 0x2288 <H_SSD_void_DisplayNumber+0x1e>
    2286:	04 c5       	rjmp	.+2568   	; 0x2c90 <H_SSD_void_DisplayNumber+0xa26>
	{
		return;
	}
	u32 i ;
	u8 units =number % 10;
    2288:	8b a1       	ldd	r24, Y+35	; 0x23
    228a:	9a e0       	ldi	r25, 0x0A	; 10
    228c:	69 2f       	mov	r22, r25
    228e:	0e 94 1a 1b 	call	0x3634	; 0x3634 <__udivmodqi4>
    2292:	89 2f       	mov	r24, r25
    2294:	8e 8f       	std	Y+30, r24	; 0x1e
	u8 tens = number/10;
    2296:	8b a1       	ldd	r24, Y+35	; 0x23
    2298:	9a e0       	ldi	r25, 0x0A	; 10
    229a:	69 2f       	mov	r22, r25
    229c:	0e 94 1a 1b 	call	0x3634	; 0x3634 <__udivmodqi4>
    22a0:	8d 8f       	std	Y+29, r24	; 0x1d
	for(i=0;i<SSD_DISPLAYY_TIME ;i++){
    22a2:	1f 8e       	std	Y+31, r1	; 0x1f
    22a4:	18 a2       	std	Y+32, r1	; 0x20
    22a6:	19 a2       	std	Y+33, r1	; 0x21
    22a8:	1a a2       	std	Y+34, r1	; 0x22
    22aa:	e8 c4       	rjmp	.+2512   	; 0x2c7c <H_SSD_void_DisplayNumber+0xa12>

		switch (units)
    22ac:	8e 8d       	ldd	r24, Y+30	; 0x1e
    22ae:	28 2f       	mov	r18, r24
    22b0:	30 e0       	ldi	r19, 0x00	; 0
    22b2:	3f a3       	std	Y+39, r19	; 0x27
    22b4:	2e a3       	std	Y+38, r18	; 0x26
    22b6:	8e a1       	ldd	r24, Y+38	; 0x26
    22b8:	9f a1       	ldd	r25, Y+39	; 0x27
    22ba:	84 30       	cpi	r24, 0x04	; 4
    22bc:	91 05       	cpc	r25, r1
    22be:	09 f4       	brne	.+2      	; 0x22c2 <H_SSD_void_DisplayNumber+0x58>
    22c0:	f0 c0       	rjmp	.+480    	; 0x24a2 <H_SSD_void_DisplayNumber+0x238>
    22c2:	2e a1       	ldd	r18, Y+38	; 0x26
    22c4:	3f a1       	ldd	r19, Y+39	; 0x27
    22c6:	25 30       	cpi	r18, 0x05	; 5
    22c8:	31 05       	cpc	r19, r1
    22ca:	ec f4       	brge	.+58     	; 0x2306 <H_SSD_void_DisplayNumber+0x9c>
    22cc:	8e a1       	ldd	r24, Y+38	; 0x26
    22ce:	9f a1       	ldd	r25, Y+39	; 0x27
    22d0:	81 30       	cpi	r24, 0x01	; 1
    22d2:	91 05       	cpc	r25, r1
    22d4:	09 f4       	brne	.+2      	; 0x22d8 <H_SSD_void_DisplayNumber+0x6e>
    22d6:	6a c0       	rjmp	.+212    	; 0x23ac <H_SSD_void_DisplayNumber+0x142>
    22d8:	2e a1       	ldd	r18, Y+38	; 0x26
    22da:	3f a1       	ldd	r19, Y+39	; 0x27
    22dc:	22 30       	cpi	r18, 0x02	; 2
    22de:	31 05       	cpc	r19, r1
    22e0:	2c f4       	brge	.+10     	; 0x22ec <H_SSD_void_DisplayNumber+0x82>
    22e2:	8e a1       	ldd	r24, Y+38	; 0x26
    22e4:	9f a1       	ldd	r25, Y+39	; 0x27
    22e6:	00 97       	sbiw	r24, 0x00	; 0
    22e8:	99 f1       	breq	.+102    	; 0x2350 <H_SSD_void_DisplayNumber+0xe6>
    22ea:	d0 c1       	rjmp	.+928    	; 0x268c <H_SSD_void_DisplayNumber+0x422>
    22ec:	2e a1       	ldd	r18, Y+38	; 0x26
    22ee:	3f a1       	ldd	r19, Y+39	; 0x27
    22f0:	22 30       	cpi	r18, 0x02	; 2
    22f2:	31 05       	cpc	r19, r1
    22f4:	09 f4       	brne	.+2      	; 0x22f8 <H_SSD_void_DisplayNumber+0x8e>
    22f6:	83 c0       	rjmp	.+262    	; 0x23fe <H_SSD_void_DisplayNumber+0x194>
    22f8:	8e a1       	ldd	r24, Y+38	; 0x26
    22fa:	9f a1       	ldd	r25, Y+39	; 0x27
    22fc:	83 30       	cpi	r24, 0x03	; 3
    22fe:	91 05       	cpc	r25, r1
    2300:	09 f4       	brne	.+2      	; 0x2304 <H_SSD_void_DisplayNumber+0x9a>
    2302:	a6 c0       	rjmp	.+332    	; 0x2450 <H_SSD_void_DisplayNumber+0x1e6>
    2304:	c3 c1       	rjmp	.+902    	; 0x268c <H_SSD_void_DisplayNumber+0x422>
    2306:	2e a1       	ldd	r18, Y+38	; 0x26
    2308:	3f a1       	ldd	r19, Y+39	; 0x27
    230a:	27 30       	cpi	r18, 0x07	; 7
    230c:	31 05       	cpc	r19, r1
    230e:	09 f4       	brne	.+2      	; 0x2312 <H_SSD_void_DisplayNumber+0xa8>
    2310:	43 c1       	rjmp	.+646    	; 0x2598 <H_SSD_void_DisplayNumber+0x32e>
    2312:	8e a1       	ldd	r24, Y+38	; 0x26
    2314:	9f a1       	ldd	r25, Y+39	; 0x27
    2316:	88 30       	cpi	r24, 0x08	; 8
    2318:	91 05       	cpc	r25, r1
    231a:	6c f4       	brge	.+26     	; 0x2336 <H_SSD_void_DisplayNumber+0xcc>
    231c:	2e a1       	ldd	r18, Y+38	; 0x26
    231e:	3f a1       	ldd	r19, Y+39	; 0x27
    2320:	25 30       	cpi	r18, 0x05	; 5
    2322:	31 05       	cpc	r19, r1
    2324:	09 f4       	brne	.+2      	; 0x2328 <H_SSD_void_DisplayNumber+0xbe>
    2326:	e6 c0       	rjmp	.+460    	; 0x24f4 <H_SSD_void_DisplayNumber+0x28a>
    2328:	8e a1       	ldd	r24, Y+38	; 0x26
    232a:	9f a1       	ldd	r25, Y+39	; 0x27
    232c:	86 30       	cpi	r24, 0x06	; 6
    232e:	91 05       	cpc	r25, r1
    2330:	09 f4       	brne	.+2      	; 0x2334 <H_SSD_void_DisplayNumber+0xca>
    2332:	09 c1       	rjmp	.+530    	; 0x2546 <H_SSD_void_DisplayNumber+0x2dc>
    2334:	ab c1       	rjmp	.+854    	; 0x268c <H_SSD_void_DisplayNumber+0x422>
    2336:	2e a1       	ldd	r18, Y+38	; 0x26
    2338:	3f a1       	ldd	r19, Y+39	; 0x27
    233a:	28 30       	cpi	r18, 0x08	; 8
    233c:	31 05       	cpc	r19, r1
    233e:	09 f4       	brne	.+2      	; 0x2342 <H_SSD_void_DisplayNumber+0xd8>
    2340:	54 c1       	rjmp	.+680    	; 0x25ea <H_SSD_void_DisplayNumber+0x380>
    2342:	8e a1       	ldd	r24, Y+38	; 0x26
    2344:	9f a1       	ldd	r25, Y+39	; 0x27
    2346:	89 30       	cpi	r24, 0x09	; 9
    2348:	91 05       	cpc	r25, r1
    234a:	09 f4       	brne	.+2      	; 0x234e <H_SSD_void_DisplayNumber+0xe4>
    234c:	77 c1       	rjmp	.+750    	; 0x263c <H_SSD_void_DisplayNumber+0x3d2>
    234e:	9e c1       	rjmp	.+828    	; 0x268c <H_SSD_void_DisplayNumber+0x422>
		{
		case 0:
			M_DIO_void_setPinValue(SSD_LED_A_PORT,SSD_LED_A_PIN,HIGH);
    2350:	80 e0       	ldi	r24, 0x00	; 0
    2352:	61 e0       	ldi	r22, 0x01	; 1
    2354:	41 e0       	ldi	r20, 0x01	; 1
    2356:	0e 94 b2 06 	call	0xd64	; 0xd64 <M_DIO_void_setPinValue>
			M_DIO_void_setPinValue(SSD_LED_B_PORT,SSD_LED_B_PIN,HIGH);
    235a:	80 e0       	ldi	r24, 0x00	; 0
    235c:	62 e0       	ldi	r22, 0x02	; 2
    235e:	41 e0       	ldi	r20, 0x01	; 1
    2360:	0e 94 b2 06 	call	0xd64	; 0xd64 <M_DIO_void_setPinValue>
			M_DIO_void_setPinValue(SSD_LED_C_PORT,SSD_LED_C_PIN,HIGH);
    2364:	80 e0       	ldi	r24, 0x00	; 0
    2366:	63 e0       	ldi	r22, 0x03	; 3
    2368:	41 e0       	ldi	r20, 0x01	; 1
    236a:	0e 94 b2 06 	call	0xd64	; 0xd64 <M_DIO_void_setPinValue>
			M_DIO_void_setPinValue(SSD_LED_D_PORT,SSD_LED_D_PIN,HIGH);
    236e:	80 e0       	ldi	r24, 0x00	; 0
    2370:	64 e0       	ldi	r22, 0x04	; 4
    2372:	41 e0       	ldi	r20, 0x01	; 1
    2374:	0e 94 b2 06 	call	0xd64	; 0xd64 <M_DIO_void_setPinValue>
			M_DIO_void_setPinValue(SSD_LED_E_PORT,SSD_LED_E_PIN,HIGH);
    2378:	80 e0       	ldi	r24, 0x00	; 0
    237a:	65 e0       	ldi	r22, 0x05	; 5
    237c:	41 e0       	ldi	r20, 0x01	; 1
    237e:	0e 94 b2 06 	call	0xd64	; 0xd64 <M_DIO_void_setPinValue>
			M_DIO_void_setPinValue(SSD_LED_F_PORT,SSD_LED_F_PIN,HIGH);
    2382:	80 e0       	ldi	r24, 0x00	; 0
    2384:	66 e0       	ldi	r22, 0x06	; 6
    2386:	41 e0       	ldi	r20, 0x01	; 1
    2388:	0e 94 b2 06 	call	0xd64	; 0xd64 <M_DIO_void_setPinValue>
			M_DIO_void_setPinValue(SSD_LED_A_PORT,SSD_LED_A_PIN,HIGH);
    238c:	80 e0       	ldi	r24, 0x00	; 0
    238e:	61 e0       	ldi	r22, 0x01	; 1
    2390:	41 e0       	ldi	r20, 0x01	; 1
    2392:	0e 94 b2 06 	call	0xd64	; 0xd64 <M_DIO_void_setPinValue>
			M_DIO_void_setPinValue(SSD_LED_G_PORT,SSD_LED_G_PIN,LOW);
    2396:	80 e0       	ldi	r24, 0x00	; 0
    2398:	67 e0       	ldi	r22, 0x07	; 7
    239a:	40 e0       	ldi	r20, 0x00	; 0
    239c:	0e 94 b2 06 	call	0xd64	; 0xd64 <M_DIO_void_setPinValue>
			M_DIO_void_setPinValue(SSD_LED_DOT_PORT,SSD_LED_DOT_PIN,LOW);
    23a0:	81 e0       	ldi	r24, 0x01	; 1
    23a2:	60 e0       	ldi	r22, 0x00	; 0
    23a4:	40 e0       	ldi	r20, 0x00	; 0
    23a6:	0e 94 b2 06 	call	0xd64	; 0xd64 <M_DIO_void_setPinValue>
    23aa:	70 c1       	rjmp	.+736    	; 0x268c <H_SSD_void_DisplayNumber+0x422>
			break;

		case 1:
			M_DIO_void_setPinValue(SSD_LED_A_PORT,SSD_LED_A_PIN,LOW);
    23ac:	80 e0       	ldi	r24, 0x00	; 0
    23ae:	61 e0       	ldi	r22, 0x01	; 1
    23b0:	40 e0       	ldi	r20, 0x00	; 0
    23b2:	0e 94 b2 06 	call	0xd64	; 0xd64 <M_DIO_void_setPinValue>
			M_DIO_void_setPinValue(SSD_LED_B_PORT,SSD_LED_B_PIN,HIGH);
    23b6:	80 e0       	ldi	r24, 0x00	; 0
    23b8:	62 e0       	ldi	r22, 0x02	; 2
    23ba:	41 e0       	ldi	r20, 0x01	; 1
    23bc:	0e 94 b2 06 	call	0xd64	; 0xd64 <M_DIO_void_setPinValue>
			M_DIO_void_setPinValue(SSD_LED_C_PORT,SSD_LED_C_PIN,HIGH);
    23c0:	80 e0       	ldi	r24, 0x00	; 0
    23c2:	63 e0       	ldi	r22, 0x03	; 3
    23c4:	41 e0       	ldi	r20, 0x01	; 1
    23c6:	0e 94 b2 06 	call	0xd64	; 0xd64 <M_DIO_void_setPinValue>
			M_DIO_void_setPinValue(SSD_LED_D_PORT,SSD_LED_D_PIN,LOW);
    23ca:	80 e0       	ldi	r24, 0x00	; 0
    23cc:	64 e0       	ldi	r22, 0x04	; 4
    23ce:	40 e0       	ldi	r20, 0x00	; 0
    23d0:	0e 94 b2 06 	call	0xd64	; 0xd64 <M_DIO_void_setPinValue>
			M_DIO_void_setPinValue(SSD_LED_E_PORT,SSD_LED_E_PIN,LOW);
    23d4:	80 e0       	ldi	r24, 0x00	; 0
    23d6:	65 e0       	ldi	r22, 0x05	; 5
    23d8:	40 e0       	ldi	r20, 0x00	; 0
    23da:	0e 94 b2 06 	call	0xd64	; 0xd64 <M_DIO_void_setPinValue>
			M_DIO_void_setPinValue(SSD_LED_F_PORT,SSD_LED_F_PIN,LOW);
    23de:	80 e0       	ldi	r24, 0x00	; 0
    23e0:	66 e0       	ldi	r22, 0x06	; 6
    23e2:	40 e0       	ldi	r20, 0x00	; 0
    23e4:	0e 94 b2 06 	call	0xd64	; 0xd64 <M_DIO_void_setPinValue>
			M_DIO_void_setPinValue(SSD_LED_G_PORT,SSD_LED_G_PIN,LOW);
    23e8:	80 e0       	ldi	r24, 0x00	; 0
    23ea:	67 e0       	ldi	r22, 0x07	; 7
    23ec:	40 e0       	ldi	r20, 0x00	; 0
    23ee:	0e 94 b2 06 	call	0xd64	; 0xd64 <M_DIO_void_setPinValue>
			M_DIO_void_setPinValue(SSD_LED_DOT_PORT,SSD_LED_DOT_PIN,LOW);
    23f2:	81 e0       	ldi	r24, 0x01	; 1
    23f4:	60 e0       	ldi	r22, 0x00	; 0
    23f6:	40 e0       	ldi	r20, 0x00	; 0
    23f8:	0e 94 b2 06 	call	0xd64	; 0xd64 <M_DIO_void_setPinValue>
    23fc:	47 c1       	rjmp	.+654    	; 0x268c <H_SSD_void_DisplayNumber+0x422>
			break;

		case 2:
			M_DIO_void_setPinValue(SSD_LED_A_PORT,SSD_LED_A_PIN,HIGH);
    23fe:	80 e0       	ldi	r24, 0x00	; 0
    2400:	61 e0       	ldi	r22, 0x01	; 1
    2402:	41 e0       	ldi	r20, 0x01	; 1
    2404:	0e 94 b2 06 	call	0xd64	; 0xd64 <M_DIO_void_setPinValue>
			M_DIO_void_setPinValue(SSD_LED_B_PORT,SSD_LED_B_PIN,HIGH);
    2408:	80 e0       	ldi	r24, 0x00	; 0
    240a:	62 e0       	ldi	r22, 0x02	; 2
    240c:	41 e0       	ldi	r20, 0x01	; 1
    240e:	0e 94 b2 06 	call	0xd64	; 0xd64 <M_DIO_void_setPinValue>
			M_DIO_void_setPinValue(SSD_LED_C_PORT,SSD_LED_C_PIN,LOW);
    2412:	80 e0       	ldi	r24, 0x00	; 0
    2414:	63 e0       	ldi	r22, 0x03	; 3
    2416:	40 e0       	ldi	r20, 0x00	; 0
    2418:	0e 94 b2 06 	call	0xd64	; 0xd64 <M_DIO_void_setPinValue>
			M_DIO_void_setPinValue(SSD_LED_D_PORT,SSD_LED_D_PIN,HIGH);
    241c:	80 e0       	ldi	r24, 0x00	; 0
    241e:	64 e0       	ldi	r22, 0x04	; 4
    2420:	41 e0       	ldi	r20, 0x01	; 1
    2422:	0e 94 b2 06 	call	0xd64	; 0xd64 <M_DIO_void_setPinValue>
			M_DIO_void_setPinValue(SSD_LED_E_PORT,SSD_LED_E_PIN,HIGH);
    2426:	80 e0       	ldi	r24, 0x00	; 0
    2428:	65 e0       	ldi	r22, 0x05	; 5
    242a:	41 e0       	ldi	r20, 0x01	; 1
    242c:	0e 94 b2 06 	call	0xd64	; 0xd64 <M_DIO_void_setPinValue>
			M_DIO_void_setPinValue(SSD_LED_F_PORT,SSD_LED_F_PIN,LOW);
    2430:	80 e0       	ldi	r24, 0x00	; 0
    2432:	66 e0       	ldi	r22, 0x06	; 6
    2434:	40 e0       	ldi	r20, 0x00	; 0
    2436:	0e 94 b2 06 	call	0xd64	; 0xd64 <M_DIO_void_setPinValue>
			M_DIO_void_setPinValue(SSD_LED_G_PORT,SSD_LED_G_PIN,HIGH);
    243a:	80 e0       	ldi	r24, 0x00	; 0
    243c:	67 e0       	ldi	r22, 0x07	; 7
    243e:	41 e0       	ldi	r20, 0x01	; 1
    2440:	0e 94 b2 06 	call	0xd64	; 0xd64 <M_DIO_void_setPinValue>
			M_DIO_void_setPinValue(SSD_LED_DOT_PORT,SSD_LED_DOT_PIN,LOW);
    2444:	81 e0       	ldi	r24, 0x01	; 1
    2446:	60 e0       	ldi	r22, 0x00	; 0
    2448:	40 e0       	ldi	r20, 0x00	; 0
    244a:	0e 94 b2 06 	call	0xd64	; 0xd64 <M_DIO_void_setPinValue>
    244e:	1e c1       	rjmp	.+572    	; 0x268c <H_SSD_void_DisplayNumber+0x422>
			break;

		case 3:
			M_DIO_void_setPinValue(SSD_LED_A_PORT,SSD_LED_A_PIN,HIGH);
    2450:	80 e0       	ldi	r24, 0x00	; 0
    2452:	61 e0       	ldi	r22, 0x01	; 1
    2454:	41 e0       	ldi	r20, 0x01	; 1
    2456:	0e 94 b2 06 	call	0xd64	; 0xd64 <M_DIO_void_setPinValue>
			M_DIO_void_setPinValue(SSD_LED_B_PORT,SSD_LED_B_PIN,HIGH);
    245a:	80 e0       	ldi	r24, 0x00	; 0
    245c:	62 e0       	ldi	r22, 0x02	; 2
    245e:	41 e0       	ldi	r20, 0x01	; 1
    2460:	0e 94 b2 06 	call	0xd64	; 0xd64 <M_DIO_void_setPinValue>
			M_DIO_void_setPinValue(SSD_LED_C_PORT,SSD_LED_C_PIN,HIGH);
    2464:	80 e0       	ldi	r24, 0x00	; 0
    2466:	63 e0       	ldi	r22, 0x03	; 3
    2468:	41 e0       	ldi	r20, 0x01	; 1
    246a:	0e 94 b2 06 	call	0xd64	; 0xd64 <M_DIO_void_setPinValue>
			M_DIO_void_setPinValue(SSD_LED_D_PORT,SSD_LED_D_PIN,HIGH);
    246e:	80 e0       	ldi	r24, 0x00	; 0
    2470:	64 e0       	ldi	r22, 0x04	; 4
    2472:	41 e0       	ldi	r20, 0x01	; 1
    2474:	0e 94 b2 06 	call	0xd64	; 0xd64 <M_DIO_void_setPinValue>
			M_DIO_void_setPinValue(SSD_LED_E_PORT,SSD_LED_E_PIN,LOW);
    2478:	80 e0       	ldi	r24, 0x00	; 0
    247a:	65 e0       	ldi	r22, 0x05	; 5
    247c:	40 e0       	ldi	r20, 0x00	; 0
    247e:	0e 94 b2 06 	call	0xd64	; 0xd64 <M_DIO_void_setPinValue>
			M_DIO_void_setPinValue(SSD_LED_F_PORT,SSD_LED_F_PIN,LOW);
    2482:	80 e0       	ldi	r24, 0x00	; 0
    2484:	66 e0       	ldi	r22, 0x06	; 6
    2486:	40 e0       	ldi	r20, 0x00	; 0
    2488:	0e 94 b2 06 	call	0xd64	; 0xd64 <M_DIO_void_setPinValue>
			M_DIO_void_setPinValue(SSD_LED_G_PORT,SSD_LED_G_PIN,HIGH);
    248c:	80 e0       	ldi	r24, 0x00	; 0
    248e:	67 e0       	ldi	r22, 0x07	; 7
    2490:	41 e0       	ldi	r20, 0x01	; 1
    2492:	0e 94 b2 06 	call	0xd64	; 0xd64 <M_DIO_void_setPinValue>
			M_DIO_void_setPinValue(SSD_LED_DOT_PORT,SSD_LED_DOT_PIN,LOW);
    2496:	81 e0       	ldi	r24, 0x01	; 1
    2498:	60 e0       	ldi	r22, 0x00	; 0
    249a:	40 e0       	ldi	r20, 0x00	; 0
    249c:	0e 94 b2 06 	call	0xd64	; 0xd64 <M_DIO_void_setPinValue>
    24a0:	f5 c0       	rjmp	.+490    	; 0x268c <H_SSD_void_DisplayNumber+0x422>
			break;

		case 4:
			M_DIO_void_setPinValue(SSD_LED_A_PORT,SSD_LED_A_PIN,LOW);
    24a2:	80 e0       	ldi	r24, 0x00	; 0
    24a4:	61 e0       	ldi	r22, 0x01	; 1
    24a6:	40 e0       	ldi	r20, 0x00	; 0
    24a8:	0e 94 b2 06 	call	0xd64	; 0xd64 <M_DIO_void_setPinValue>
			M_DIO_void_setPinValue(SSD_LED_B_PORT,SSD_LED_B_PIN,HIGH);
    24ac:	80 e0       	ldi	r24, 0x00	; 0
    24ae:	62 e0       	ldi	r22, 0x02	; 2
    24b0:	41 e0       	ldi	r20, 0x01	; 1
    24b2:	0e 94 b2 06 	call	0xd64	; 0xd64 <M_DIO_void_setPinValue>
			M_DIO_void_setPinValue(SSD_LED_C_PORT,SSD_LED_C_PIN,HIGH);
    24b6:	80 e0       	ldi	r24, 0x00	; 0
    24b8:	63 e0       	ldi	r22, 0x03	; 3
    24ba:	41 e0       	ldi	r20, 0x01	; 1
    24bc:	0e 94 b2 06 	call	0xd64	; 0xd64 <M_DIO_void_setPinValue>
			M_DIO_void_setPinValue(SSD_LED_D_PORT,SSD_LED_D_PIN,LOW);
    24c0:	80 e0       	ldi	r24, 0x00	; 0
    24c2:	64 e0       	ldi	r22, 0x04	; 4
    24c4:	40 e0       	ldi	r20, 0x00	; 0
    24c6:	0e 94 b2 06 	call	0xd64	; 0xd64 <M_DIO_void_setPinValue>
			M_DIO_void_setPinValue(SSD_LED_E_PORT,SSD_LED_E_PIN,LOW);
    24ca:	80 e0       	ldi	r24, 0x00	; 0
    24cc:	65 e0       	ldi	r22, 0x05	; 5
    24ce:	40 e0       	ldi	r20, 0x00	; 0
    24d0:	0e 94 b2 06 	call	0xd64	; 0xd64 <M_DIO_void_setPinValue>
			M_DIO_void_setPinValue(SSD_LED_F_PORT,SSD_LED_F_PIN,HIGH);
    24d4:	80 e0       	ldi	r24, 0x00	; 0
    24d6:	66 e0       	ldi	r22, 0x06	; 6
    24d8:	41 e0       	ldi	r20, 0x01	; 1
    24da:	0e 94 b2 06 	call	0xd64	; 0xd64 <M_DIO_void_setPinValue>
			M_DIO_void_setPinValue(SSD_LED_G_PORT,SSD_LED_G_PIN,HIGH);
    24de:	80 e0       	ldi	r24, 0x00	; 0
    24e0:	67 e0       	ldi	r22, 0x07	; 7
    24e2:	41 e0       	ldi	r20, 0x01	; 1
    24e4:	0e 94 b2 06 	call	0xd64	; 0xd64 <M_DIO_void_setPinValue>
			M_DIO_void_setPinValue(SSD_LED_DOT_PORT,SSD_LED_DOT_PIN,LOW);
    24e8:	81 e0       	ldi	r24, 0x01	; 1
    24ea:	60 e0       	ldi	r22, 0x00	; 0
    24ec:	40 e0       	ldi	r20, 0x00	; 0
    24ee:	0e 94 b2 06 	call	0xd64	; 0xd64 <M_DIO_void_setPinValue>
    24f2:	cc c0       	rjmp	.+408    	; 0x268c <H_SSD_void_DisplayNumber+0x422>
			break;

		case 5:
			M_DIO_void_setPinValue(SSD_LED_A_PORT,SSD_LED_A_PIN,HIGH);
    24f4:	80 e0       	ldi	r24, 0x00	; 0
    24f6:	61 e0       	ldi	r22, 0x01	; 1
    24f8:	41 e0       	ldi	r20, 0x01	; 1
    24fa:	0e 94 b2 06 	call	0xd64	; 0xd64 <M_DIO_void_setPinValue>
			M_DIO_void_setPinValue(SSD_LED_B_PORT,SSD_LED_B_PIN,LOW);
    24fe:	80 e0       	ldi	r24, 0x00	; 0
    2500:	62 e0       	ldi	r22, 0x02	; 2
    2502:	40 e0       	ldi	r20, 0x00	; 0
    2504:	0e 94 b2 06 	call	0xd64	; 0xd64 <M_DIO_void_setPinValue>
			M_DIO_void_setPinValue(SSD_LED_C_PORT,SSD_LED_C_PIN,HIGH);
    2508:	80 e0       	ldi	r24, 0x00	; 0
    250a:	63 e0       	ldi	r22, 0x03	; 3
    250c:	41 e0       	ldi	r20, 0x01	; 1
    250e:	0e 94 b2 06 	call	0xd64	; 0xd64 <M_DIO_void_setPinValue>
			M_DIO_void_setPinValue(SSD_LED_D_PORT,SSD_LED_D_PIN,HIGH);
    2512:	80 e0       	ldi	r24, 0x00	; 0
    2514:	64 e0       	ldi	r22, 0x04	; 4
    2516:	41 e0       	ldi	r20, 0x01	; 1
    2518:	0e 94 b2 06 	call	0xd64	; 0xd64 <M_DIO_void_setPinValue>
			M_DIO_void_setPinValue(SSD_LED_E_PORT,SSD_LED_E_PIN,LOW);
    251c:	80 e0       	ldi	r24, 0x00	; 0
    251e:	65 e0       	ldi	r22, 0x05	; 5
    2520:	40 e0       	ldi	r20, 0x00	; 0
    2522:	0e 94 b2 06 	call	0xd64	; 0xd64 <M_DIO_void_setPinValue>
			M_DIO_void_setPinValue(SSD_LED_F_PORT,SSD_LED_F_PIN,HIGH);
    2526:	80 e0       	ldi	r24, 0x00	; 0
    2528:	66 e0       	ldi	r22, 0x06	; 6
    252a:	41 e0       	ldi	r20, 0x01	; 1
    252c:	0e 94 b2 06 	call	0xd64	; 0xd64 <M_DIO_void_setPinValue>
			M_DIO_void_setPinValue(SSD_LED_G_PORT,SSD_LED_G_PIN,HIGH);
    2530:	80 e0       	ldi	r24, 0x00	; 0
    2532:	67 e0       	ldi	r22, 0x07	; 7
    2534:	41 e0       	ldi	r20, 0x01	; 1
    2536:	0e 94 b2 06 	call	0xd64	; 0xd64 <M_DIO_void_setPinValue>
			M_DIO_void_setPinValue(SSD_LED_DOT_PORT,SSD_LED_DOT_PIN,LOW);
    253a:	81 e0       	ldi	r24, 0x01	; 1
    253c:	60 e0       	ldi	r22, 0x00	; 0
    253e:	40 e0       	ldi	r20, 0x00	; 0
    2540:	0e 94 b2 06 	call	0xd64	; 0xd64 <M_DIO_void_setPinValue>
    2544:	a3 c0       	rjmp	.+326    	; 0x268c <H_SSD_void_DisplayNumber+0x422>
			break;
		case 6:
			M_DIO_void_setPinValue(SSD_LED_A_PORT,SSD_LED_A_PIN,HIGH);
    2546:	80 e0       	ldi	r24, 0x00	; 0
    2548:	61 e0       	ldi	r22, 0x01	; 1
    254a:	41 e0       	ldi	r20, 0x01	; 1
    254c:	0e 94 b2 06 	call	0xd64	; 0xd64 <M_DIO_void_setPinValue>
			M_DIO_void_setPinValue(SSD_LED_B_PORT,SSD_LED_B_PIN,LOW);
    2550:	80 e0       	ldi	r24, 0x00	; 0
    2552:	62 e0       	ldi	r22, 0x02	; 2
    2554:	40 e0       	ldi	r20, 0x00	; 0
    2556:	0e 94 b2 06 	call	0xd64	; 0xd64 <M_DIO_void_setPinValue>
			M_DIO_void_setPinValue(SSD_LED_C_PORT,SSD_LED_C_PIN,HIGH);
    255a:	80 e0       	ldi	r24, 0x00	; 0
    255c:	63 e0       	ldi	r22, 0x03	; 3
    255e:	41 e0       	ldi	r20, 0x01	; 1
    2560:	0e 94 b2 06 	call	0xd64	; 0xd64 <M_DIO_void_setPinValue>
			M_DIO_void_setPinValue(SSD_LED_D_PORT,SSD_LED_D_PIN,HIGH);
    2564:	80 e0       	ldi	r24, 0x00	; 0
    2566:	64 e0       	ldi	r22, 0x04	; 4
    2568:	41 e0       	ldi	r20, 0x01	; 1
    256a:	0e 94 b2 06 	call	0xd64	; 0xd64 <M_DIO_void_setPinValue>
			M_DIO_void_setPinValue(SSD_LED_E_PORT,SSD_LED_E_PIN,HIGH);
    256e:	80 e0       	ldi	r24, 0x00	; 0
    2570:	65 e0       	ldi	r22, 0x05	; 5
    2572:	41 e0       	ldi	r20, 0x01	; 1
    2574:	0e 94 b2 06 	call	0xd64	; 0xd64 <M_DIO_void_setPinValue>
			M_DIO_void_setPinValue(SSD_LED_F_PORT,SSD_LED_F_PIN,HIGH);
    2578:	80 e0       	ldi	r24, 0x00	; 0
    257a:	66 e0       	ldi	r22, 0x06	; 6
    257c:	41 e0       	ldi	r20, 0x01	; 1
    257e:	0e 94 b2 06 	call	0xd64	; 0xd64 <M_DIO_void_setPinValue>
			M_DIO_void_setPinValue(SSD_LED_G_PORT,SSD_LED_G_PIN,HIGH);
    2582:	80 e0       	ldi	r24, 0x00	; 0
    2584:	67 e0       	ldi	r22, 0x07	; 7
    2586:	41 e0       	ldi	r20, 0x01	; 1
    2588:	0e 94 b2 06 	call	0xd64	; 0xd64 <M_DIO_void_setPinValue>
			M_DIO_void_setPinValue(SSD_LED_DOT_PORT,SSD_LED_DOT_PIN,LOW);
    258c:	81 e0       	ldi	r24, 0x01	; 1
    258e:	60 e0       	ldi	r22, 0x00	; 0
    2590:	40 e0       	ldi	r20, 0x00	; 0
    2592:	0e 94 b2 06 	call	0xd64	; 0xd64 <M_DIO_void_setPinValue>
    2596:	7a c0       	rjmp	.+244    	; 0x268c <H_SSD_void_DisplayNumber+0x422>
			break;
		case 7:
			M_DIO_void_setPinValue(SSD_LED_A_PORT,SSD_LED_A_PIN,HIGH);
    2598:	80 e0       	ldi	r24, 0x00	; 0
    259a:	61 e0       	ldi	r22, 0x01	; 1
    259c:	41 e0       	ldi	r20, 0x01	; 1
    259e:	0e 94 b2 06 	call	0xd64	; 0xd64 <M_DIO_void_setPinValue>
			M_DIO_void_setPinValue(SSD_LED_B_PORT,SSD_LED_B_PIN,HIGH);
    25a2:	80 e0       	ldi	r24, 0x00	; 0
    25a4:	62 e0       	ldi	r22, 0x02	; 2
    25a6:	41 e0       	ldi	r20, 0x01	; 1
    25a8:	0e 94 b2 06 	call	0xd64	; 0xd64 <M_DIO_void_setPinValue>
			M_DIO_void_setPinValue(SSD_LED_C_PORT,SSD_LED_C_PIN,HIGH);
    25ac:	80 e0       	ldi	r24, 0x00	; 0
    25ae:	63 e0       	ldi	r22, 0x03	; 3
    25b0:	41 e0       	ldi	r20, 0x01	; 1
    25b2:	0e 94 b2 06 	call	0xd64	; 0xd64 <M_DIO_void_setPinValue>
			M_DIO_void_setPinValue(SSD_LED_D_PORT,SSD_LED_D_PIN,LOW);
    25b6:	80 e0       	ldi	r24, 0x00	; 0
    25b8:	64 e0       	ldi	r22, 0x04	; 4
    25ba:	40 e0       	ldi	r20, 0x00	; 0
    25bc:	0e 94 b2 06 	call	0xd64	; 0xd64 <M_DIO_void_setPinValue>
			M_DIO_void_setPinValue(SSD_LED_E_PORT,SSD_LED_E_PIN,LOW);
    25c0:	80 e0       	ldi	r24, 0x00	; 0
    25c2:	65 e0       	ldi	r22, 0x05	; 5
    25c4:	40 e0       	ldi	r20, 0x00	; 0
    25c6:	0e 94 b2 06 	call	0xd64	; 0xd64 <M_DIO_void_setPinValue>
			M_DIO_void_setPinValue(SSD_LED_F_PORT,SSD_LED_F_PIN,LOW);
    25ca:	80 e0       	ldi	r24, 0x00	; 0
    25cc:	66 e0       	ldi	r22, 0x06	; 6
    25ce:	40 e0       	ldi	r20, 0x00	; 0
    25d0:	0e 94 b2 06 	call	0xd64	; 0xd64 <M_DIO_void_setPinValue>
			M_DIO_void_setPinValue(SSD_LED_G_PORT,SSD_LED_G_PIN,LOW);
    25d4:	80 e0       	ldi	r24, 0x00	; 0
    25d6:	67 e0       	ldi	r22, 0x07	; 7
    25d8:	40 e0       	ldi	r20, 0x00	; 0
    25da:	0e 94 b2 06 	call	0xd64	; 0xd64 <M_DIO_void_setPinValue>
			M_DIO_void_setPinValue(SSD_LED_DOT_PORT,SSD_LED_DOT_PIN,LOW);
    25de:	81 e0       	ldi	r24, 0x01	; 1
    25e0:	60 e0       	ldi	r22, 0x00	; 0
    25e2:	40 e0       	ldi	r20, 0x00	; 0
    25e4:	0e 94 b2 06 	call	0xd64	; 0xd64 <M_DIO_void_setPinValue>
    25e8:	51 c0       	rjmp	.+162    	; 0x268c <H_SSD_void_DisplayNumber+0x422>
			break;
		case 8:
			M_DIO_void_setPinValue(SSD_LED_A_PORT,SSD_LED_A_PIN,HIGH);
    25ea:	80 e0       	ldi	r24, 0x00	; 0
    25ec:	61 e0       	ldi	r22, 0x01	; 1
    25ee:	41 e0       	ldi	r20, 0x01	; 1
    25f0:	0e 94 b2 06 	call	0xd64	; 0xd64 <M_DIO_void_setPinValue>
			M_DIO_void_setPinValue(SSD_LED_B_PORT,SSD_LED_B_PIN,HIGH);
    25f4:	80 e0       	ldi	r24, 0x00	; 0
    25f6:	62 e0       	ldi	r22, 0x02	; 2
    25f8:	41 e0       	ldi	r20, 0x01	; 1
    25fa:	0e 94 b2 06 	call	0xd64	; 0xd64 <M_DIO_void_setPinValue>
			M_DIO_void_setPinValue(SSD_LED_C_PORT,SSD_LED_C_PIN,HIGH);
    25fe:	80 e0       	ldi	r24, 0x00	; 0
    2600:	63 e0       	ldi	r22, 0x03	; 3
    2602:	41 e0       	ldi	r20, 0x01	; 1
    2604:	0e 94 b2 06 	call	0xd64	; 0xd64 <M_DIO_void_setPinValue>
			M_DIO_void_setPinValue(SSD_LED_D_PORT,SSD_LED_D_PIN,HIGH);
    2608:	80 e0       	ldi	r24, 0x00	; 0
    260a:	64 e0       	ldi	r22, 0x04	; 4
    260c:	41 e0       	ldi	r20, 0x01	; 1
    260e:	0e 94 b2 06 	call	0xd64	; 0xd64 <M_DIO_void_setPinValue>
			M_DIO_void_setPinValue(SSD_LED_E_PORT,SSD_LED_E_PIN,HIGH);
    2612:	80 e0       	ldi	r24, 0x00	; 0
    2614:	65 e0       	ldi	r22, 0x05	; 5
    2616:	41 e0       	ldi	r20, 0x01	; 1
    2618:	0e 94 b2 06 	call	0xd64	; 0xd64 <M_DIO_void_setPinValue>
			M_DIO_void_setPinValue(SSD_LED_F_PORT,SSD_LED_F_PIN,HIGH);
    261c:	80 e0       	ldi	r24, 0x00	; 0
    261e:	66 e0       	ldi	r22, 0x06	; 6
    2620:	41 e0       	ldi	r20, 0x01	; 1
    2622:	0e 94 b2 06 	call	0xd64	; 0xd64 <M_DIO_void_setPinValue>
			M_DIO_void_setPinValue(SSD_LED_G_PORT,SSD_LED_G_PIN,HIGH);
    2626:	80 e0       	ldi	r24, 0x00	; 0
    2628:	67 e0       	ldi	r22, 0x07	; 7
    262a:	41 e0       	ldi	r20, 0x01	; 1
    262c:	0e 94 b2 06 	call	0xd64	; 0xd64 <M_DIO_void_setPinValue>
			M_DIO_void_setPinValue(SSD_LED_DOT_PORT,SSD_LED_DOT_PIN,LOW);
    2630:	81 e0       	ldi	r24, 0x01	; 1
    2632:	60 e0       	ldi	r22, 0x00	; 0
    2634:	40 e0       	ldi	r20, 0x00	; 0
    2636:	0e 94 b2 06 	call	0xd64	; 0xd64 <M_DIO_void_setPinValue>
    263a:	28 c0       	rjmp	.+80     	; 0x268c <H_SSD_void_DisplayNumber+0x422>
			break;
		case 9:
			M_DIO_void_setPinValue(SSD_LED_A_PORT,SSD_LED_A_PIN,HIGH);
    263c:	80 e0       	ldi	r24, 0x00	; 0
    263e:	61 e0       	ldi	r22, 0x01	; 1
    2640:	41 e0       	ldi	r20, 0x01	; 1
    2642:	0e 94 b2 06 	call	0xd64	; 0xd64 <M_DIO_void_setPinValue>
			M_DIO_void_setPinValue(SSD_LED_B_PORT,SSD_LED_B_PIN,HIGH);
    2646:	80 e0       	ldi	r24, 0x00	; 0
    2648:	62 e0       	ldi	r22, 0x02	; 2
    264a:	41 e0       	ldi	r20, 0x01	; 1
    264c:	0e 94 b2 06 	call	0xd64	; 0xd64 <M_DIO_void_setPinValue>
			M_DIO_void_setPinValue(SSD_LED_C_PORT,SSD_LED_C_PIN,HIGH);
    2650:	80 e0       	ldi	r24, 0x00	; 0
    2652:	63 e0       	ldi	r22, 0x03	; 3
    2654:	41 e0       	ldi	r20, 0x01	; 1
    2656:	0e 94 b2 06 	call	0xd64	; 0xd64 <M_DIO_void_setPinValue>
			M_DIO_void_setPinValue(SSD_LED_D_PORT,SSD_LED_D_PIN,HIGH);
    265a:	80 e0       	ldi	r24, 0x00	; 0
    265c:	64 e0       	ldi	r22, 0x04	; 4
    265e:	41 e0       	ldi	r20, 0x01	; 1
    2660:	0e 94 b2 06 	call	0xd64	; 0xd64 <M_DIO_void_setPinValue>
			M_DIO_void_setPinValue(SSD_LED_E_PORT,SSD_LED_E_PIN,LOW);
    2664:	80 e0       	ldi	r24, 0x00	; 0
    2666:	65 e0       	ldi	r22, 0x05	; 5
    2668:	40 e0       	ldi	r20, 0x00	; 0
    266a:	0e 94 b2 06 	call	0xd64	; 0xd64 <M_DIO_void_setPinValue>
			M_DIO_void_setPinValue(SSD_LED_F_PORT,SSD_LED_F_PIN,HIGH);
    266e:	80 e0       	ldi	r24, 0x00	; 0
    2670:	66 e0       	ldi	r22, 0x06	; 6
    2672:	41 e0       	ldi	r20, 0x01	; 1
    2674:	0e 94 b2 06 	call	0xd64	; 0xd64 <M_DIO_void_setPinValue>
			M_DIO_void_setPinValue(SSD_LED_G_PORT,SSD_LED_G_PIN,HIGH);
    2678:	80 e0       	ldi	r24, 0x00	; 0
    267a:	67 e0       	ldi	r22, 0x07	; 7
    267c:	41 e0       	ldi	r20, 0x01	; 1
    267e:	0e 94 b2 06 	call	0xd64	; 0xd64 <M_DIO_void_setPinValue>
			M_DIO_void_setPinValue(SSD_LED_DOT_PORT,SSD_LED_DOT_PIN,LOW);
    2682:	81 e0       	ldi	r24, 0x01	; 1
    2684:	60 e0       	ldi	r22, 0x00	; 0
    2686:	40 e0       	ldi	r20, 0x00	; 0
    2688:	0e 94 b2 06 	call	0xd64	; 0xd64 <M_DIO_void_setPinValue>


		}
		//enable digit 1
		//disable digit 2
		M_DIO_void_setPinValue(SSD_DIG_1_EN_PORT,SSD_DIG_1_EN_PIN,HIGH);
    268c:	82 e0       	ldi	r24, 0x02	; 2
    268e:	66 e0       	ldi	r22, 0x06	; 6
    2690:	41 e0       	ldi	r20, 0x01	; 1
    2692:	0e 94 b2 06 	call	0xd64	; 0xd64 <M_DIO_void_setPinValue>
		M_DIO_void_setPinValue(SSD_DIG_2_EN_PORT,SSD_DIG_2_EN_PIN,LOW);
    2696:	82 e0       	ldi	r24, 0x02	; 2
    2698:	67 e0       	ldi	r22, 0x07	; 7
    269a:	40 e0       	ldi	r20, 0x00	; 0
    269c:	0e 94 b2 06 	call	0xd64	; 0xd64 <M_DIO_void_setPinValue>
    26a0:	80 e0       	ldi	r24, 0x00	; 0
    26a2:	90 e0       	ldi	r25, 0x00	; 0
    26a4:	a0 e8       	ldi	r26, 0x80	; 128
    26a6:	bf e3       	ldi	r27, 0x3F	; 63
    26a8:	89 8f       	std	Y+25, r24	; 0x19
    26aa:	9a 8f       	std	Y+26, r25	; 0x1a
    26ac:	ab 8f       	std	Y+27, r26	; 0x1b
    26ae:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    26b0:	69 8d       	ldd	r22, Y+25	; 0x19
    26b2:	7a 8d       	ldd	r23, Y+26	; 0x1a
    26b4:	8b 8d       	ldd	r24, Y+27	; 0x1b
    26b6:	9c 8d       	ldd	r25, Y+28	; 0x1c
    26b8:	20 e0       	ldi	r18, 0x00	; 0
    26ba:	30 e0       	ldi	r19, 0x00	; 0
    26bc:	4a e7       	ldi	r20, 0x7A	; 122
    26be:	55 e4       	ldi	r21, 0x45	; 69
    26c0:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    26c4:	dc 01       	movw	r26, r24
    26c6:	cb 01       	movw	r24, r22
    26c8:	8d 8b       	std	Y+21, r24	; 0x15
    26ca:	9e 8b       	std	Y+22, r25	; 0x16
    26cc:	af 8b       	std	Y+23, r26	; 0x17
    26ce:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    26d0:	6d 89       	ldd	r22, Y+21	; 0x15
    26d2:	7e 89       	ldd	r23, Y+22	; 0x16
    26d4:	8f 89       	ldd	r24, Y+23	; 0x17
    26d6:	98 8d       	ldd	r25, Y+24	; 0x18
    26d8:	20 e0       	ldi	r18, 0x00	; 0
    26da:	30 e0       	ldi	r19, 0x00	; 0
    26dc:	40 e8       	ldi	r20, 0x80	; 128
    26de:	5f e3       	ldi	r21, 0x3F	; 63
    26e0:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    26e4:	88 23       	and	r24, r24
    26e6:	2c f4       	brge	.+10     	; 0x26f2 <H_SSD_void_DisplayNumber+0x488>
		__ticks = 1;
    26e8:	81 e0       	ldi	r24, 0x01	; 1
    26ea:	90 e0       	ldi	r25, 0x00	; 0
    26ec:	9c 8b       	std	Y+20, r25	; 0x14
    26ee:	8b 8b       	std	Y+19, r24	; 0x13
    26f0:	3f c0       	rjmp	.+126    	; 0x2770 <H_SSD_void_DisplayNumber+0x506>
	else if (__tmp > 65535)
    26f2:	6d 89       	ldd	r22, Y+21	; 0x15
    26f4:	7e 89       	ldd	r23, Y+22	; 0x16
    26f6:	8f 89       	ldd	r24, Y+23	; 0x17
    26f8:	98 8d       	ldd	r25, Y+24	; 0x18
    26fa:	20 e0       	ldi	r18, 0x00	; 0
    26fc:	3f ef       	ldi	r19, 0xFF	; 255
    26fe:	4f e7       	ldi	r20, 0x7F	; 127
    2700:	57 e4       	ldi	r21, 0x47	; 71
    2702:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    2706:	18 16       	cp	r1, r24
    2708:	4c f5       	brge	.+82     	; 0x275c <H_SSD_void_DisplayNumber+0x4f2>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    270a:	69 8d       	ldd	r22, Y+25	; 0x19
    270c:	7a 8d       	ldd	r23, Y+26	; 0x1a
    270e:	8b 8d       	ldd	r24, Y+27	; 0x1b
    2710:	9c 8d       	ldd	r25, Y+28	; 0x1c
    2712:	20 e0       	ldi	r18, 0x00	; 0
    2714:	30 e0       	ldi	r19, 0x00	; 0
    2716:	40 e2       	ldi	r20, 0x20	; 32
    2718:	51 e4       	ldi	r21, 0x41	; 65
    271a:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    271e:	dc 01       	movw	r26, r24
    2720:	cb 01       	movw	r24, r22
    2722:	bc 01       	movw	r22, r24
    2724:	cd 01       	movw	r24, r26
    2726:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    272a:	dc 01       	movw	r26, r24
    272c:	cb 01       	movw	r24, r22
    272e:	9c 8b       	std	Y+20, r25	; 0x14
    2730:	8b 8b       	std	Y+19, r24	; 0x13
    2732:	0f c0       	rjmp	.+30     	; 0x2752 <H_SSD_void_DisplayNumber+0x4e8>
    2734:	80 e9       	ldi	r24, 0x90	; 144
    2736:	91 e0       	ldi	r25, 0x01	; 1
    2738:	9a 8b       	std	Y+18, r25	; 0x12
    273a:	89 8b       	std	Y+17, r24	; 0x11
    273c:	89 89       	ldd	r24, Y+17	; 0x11
    273e:	9a 89       	ldd	r25, Y+18	; 0x12
    2740:	01 97       	sbiw	r24, 0x01	; 1
    2742:	f1 f7       	brne	.-4      	; 0x2740 <H_SSD_void_DisplayNumber+0x4d6>
    2744:	9a 8b       	std	Y+18, r25	; 0x12
    2746:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2748:	8b 89       	ldd	r24, Y+19	; 0x13
    274a:	9c 89       	ldd	r25, Y+20	; 0x14
    274c:	01 97       	sbiw	r24, 0x01	; 1
    274e:	9c 8b       	std	Y+20, r25	; 0x14
    2750:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2752:	8b 89       	ldd	r24, Y+19	; 0x13
    2754:	9c 89       	ldd	r25, Y+20	; 0x14
    2756:	00 97       	sbiw	r24, 0x00	; 0
    2758:	69 f7       	brne	.-38     	; 0x2734 <H_SSD_void_DisplayNumber+0x4ca>
    275a:	14 c0       	rjmp	.+40     	; 0x2784 <H_SSD_void_DisplayNumber+0x51a>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    275c:	6d 89       	ldd	r22, Y+21	; 0x15
    275e:	7e 89       	ldd	r23, Y+22	; 0x16
    2760:	8f 89       	ldd	r24, Y+23	; 0x17
    2762:	98 8d       	ldd	r25, Y+24	; 0x18
    2764:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2768:	dc 01       	movw	r26, r24
    276a:	cb 01       	movw	r24, r22
    276c:	9c 8b       	std	Y+20, r25	; 0x14
    276e:	8b 8b       	std	Y+19, r24	; 0x13
    2770:	8b 89       	ldd	r24, Y+19	; 0x13
    2772:	9c 89       	ldd	r25, Y+20	; 0x14
    2774:	98 8b       	std	Y+16, r25	; 0x10
    2776:	8f 87       	std	Y+15, r24	; 0x0f
    2778:	8f 85       	ldd	r24, Y+15	; 0x0f
    277a:	98 89       	ldd	r25, Y+16	; 0x10
    277c:	01 97       	sbiw	r24, 0x01	; 1
    277e:	f1 f7       	brne	.-4      	; 0x277c <H_SSD_void_DisplayNumber+0x512>
    2780:	98 8b       	std	Y+16, r25	; 0x10
    2782:	8f 87       	std	Y+15, r24	; 0x0f
		_delay_ms(1);
		M_DIO_void_setPinValue(SSD_DIG_1_EN_PORT,SSD_DIG_1_EN_PIN,LOW);
    2784:	82 e0       	ldi	r24, 0x02	; 2
    2786:	66 e0       	ldi	r22, 0x06	; 6
    2788:	40 e0       	ldi	r20, 0x00	; 0
    278a:	0e 94 b2 06 	call	0xd64	; 0xd64 <M_DIO_void_setPinValue>
		switch (tens)
    278e:	8d 8d       	ldd	r24, Y+29	; 0x1d
    2790:	28 2f       	mov	r18, r24
    2792:	30 e0       	ldi	r19, 0x00	; 0
    2794:	3d a3       	std	Y+37, r19	; 0x25
    2796:	2c a3       	std	Y+36, r18	; 0x24
    2798:	8c a1       	ldd	r24, Y+36	; 0x24
    279a:	9d a1       	ldd	r25, Y+37	; 0x25
    279c:	84 30       	cpi	r24, 0x04	; 4
    279e:	91 05       	cpc	r25, r1
    27a0:	09 f4       	brne	.+2      	; 0x27a4 <H_SSD_void_DisplayNumber+0x53a>
    27a2:	f0 c0       	rjmp	.+480    	; 0x2984 <H_SSD_void_DisplayNumber+0x71a>
    27a4:	2c a1       	ldd	r18, Y+36	; 0x24
    27a6:	3d a1       	ldd	r19, Y+37	; 0x25
    27a8:	25 30       	cpi	r18, 0x05	; 5
    27aa:	31 05       	cpc	r19, r1
    27ac:	ec f4       	brge	.+58     	; 0x27e8 <H_SSD_void_DisplayNumber+0x57e>
    27ae:	8c a1       	ldd	r24, Y+36	; 0x24
    27b0:	9d a1       	ldd	r25, Y+37	; 0x25
    27b2:	81 30       	cpi	r24, 0x01	; 1
    27b4:	91 05       	cpc	r25, r1
    27b6:	09 f4       	brne	.+2      	; 0x27ba <H_SSD_void_DisplayNumber+0x550>
    27b8:	6a c0       	rjmp	.+212    	; 0x288e <H_SSD_void_DisplayNumber+0x624>
    27ba:	2c a1       	ldd	r18, Y+36	; 0x24
    27bc:	3d a1       	ldd	r19, Y+37	; 0x25
    27be:	22 30       	cpi	r18, 0x02	; 2
    27c0:	31 05       	cpc	r19, r1
    27c2:	2c f4       	brge	.+10     	; 0x27ce <H_SSD_void_DisplayNumber+0x564>
    27c4:	8c a1       	ldd	r24, Y+36	; 0x24
    27c6:	9d a1       	ldd	r25, Y+37	; 0x25
    27c8:	00 97       	sbiw	r24, 0x00	; 0
    27ca:	99 f1       	breq	.+102    	; 0x2832 <H_SSD_void_DisplayNumber+0x5c8>
    27cc:	d0 c1       	rjmp	.+928    	; 0x2b6e <H_SSD_void_DisplayNumber+0x904>
    27ce:	2c a1       	ldd	r18, Y+36	; 0x24
    27d0:	3d a1       	ldd	r19, Y+37	; 0x25
    27d2:	22 30       	cpi	r18, 0x02	; 2
    27d4:	31 05       	cpc	r19, r1
    27d6:	09 f4       	brne	.+2      	; 0x27da <H_SSD_void_DisplayNumber+0x570>
    27d8:	83 c0       	rjmp	.+262    	; 0x28e0 <H_SSD_void_DisplayNumber+0x676>
    27da:	8c a1       	ldd	r24, Y+36	; 0x24
    27dc:	9d a1       	ldd	r25, Y+37	; 0x25
    27de:	83 30       	cpi	r24, 0x03	; 3
    27e0:	91 05       	cpc	r25, r1
    27e2:	09 f4       	brne	.+2      	; 0x27e6 <H_SSD_void_DisplayNumber+0x57c>
    27e4:	a6 c0       	rjmp	.+332    	; 0x2932 <H_SSD_void_DisplayNumber+0x6c8>
    27e6:	c3 c1       	rjmp	.+902    	; 0x2b6e <H_SSD_void_DisplayNumber+0x904>
    27e8:	2c a1       	ldd	r18, Y+36	; 0x24
    27ea:	3d a1       	ldd	r19, Y+37	; 0x25
    27ec:	27 30       	cpi	r18, 0x07	; 7
    27ee:	31 05       	cpc	r19, r1
    27f0:	09 f4       	brne	.+2      	; 0x27f4 <H_SSD_void_DisplayNumber+0x58a>
    27f2:	43 c1       	rjmp	.+646    	; 0x2a7a <H_SSD_void_DisplayNumber+0x810>
    27f4:	8c a1       	ldd	r24, Y+36	; 0x24
    27f6:	9d a1       	ldd	r25, Y+37	; 0x25
    27f8:	88 30       	cpi	r24, 0x08	; 8
    27fa:	91 05       	cpc	r25, r1
    27fc:	6c f4       	brge	.+26     	; 0x2818 <H_SSD_void_DisplayNumber+0x5ae>
    27fe:	2c a1       	ldd	r18, Y+36	; 0x24
    2800:	3d a1       	ldd	r19, Y+37	; 0x25
    2802:	25 30       	cpi	r18, 0x05	; 5
    2804:	31 05       	cpc	r19, r1
    2806:	09 f4       	brne	.+2      	; 0x280a <H_SSD_void_DisplayNumber+0x5a0>
    2808:	e6 c0       	rjmp	.+460    	; 0x29d6 <H_SSD_void_DisplayNumber+0x76c>
    280a:	8c a1       	ldd	r24, Y+36	; 0x24
    280c:	9d a1       	ldd	r25, Y+37	; 0x25
    280e:	86 30       	cpi	r24, 0x06	; 6
    2810:	91 05       	cpc	r25, r1
    2812:	09 f4       	brne	.+2      	; 0x2816 <H_SSD_void_DisplayNumber+0x5ac>
    2814:	09 c1       	rjmp	.+530    	; 0x2a28 <H_SSD_void_DisplayNumber+0x7be>
    2816:	ab c1       	rjmp	.+854    	; 0x2b6e <H_SSD_void_DisplayNumber+0x904>
    2818:	2c a1       	ldd	r18, Y+36	; 0x24
    281a:	3d a1       	ldd	r19, Y+37	; 0x25
    281c:	28 30       	cpi	r18, 0x08	; 8
    281e:	31 05       	cpc	r19, r1
    2820:	09 f4       	brne	.+2      	; 0x2824 <H_SSD_void_DisplayNumber+0x5ba>
    2822:	54 c1       	rjmp	.+680    	; 0x2acc <H_SSD_void_DisplayNumber+0x862>
    2824:	8c a1       	ldd	r24, Y+36	; 0x24
    2826:	9d a1       	ldd	r25, Y+37	; 0x25
    2828:	89 30       	cpi	r24, 0x09	; 9
    282a:	91 05       	cpc	r25, r1
    282c:	09 f4       	brne	.+2      	; 0x2830 <H_SSD_void_DisplayNumber+0x5c6>
    282e:	77 c1       	rjmp	.+750    	; 0x2b1e <H_SSD_void_DisplayNumber+0x8b4>
    2830:	9e c1       	rjmp	.+828    	; 0x2b6e <H_SSD_void_DisplayNumber+0x904>
		{
		case 0:
					M_DIO_void_setPinValue(SSD_LED_A_PORT,SSD_LED_A_PIN,HIGH);
    2832:	80 e0       	ldi	r24, 0x00	; 0
    2834:	61 e0       	ldi	r22, 0x01	; 1
    2836:	41 e0       	ldi	r20, 0x01	; 1
    2838:	0e 94 b2 06 	call	0xd64	; 0xd64 <M_DIO_void_setPinValue>
					M_DIO_void_setPinValue(SSD_LED_B_PORT,SSD_LED_B_PIN,HIGH);
    283c:	80 e0       	ldi	r24, 0x00	; 0
    283e:	62 e0       	ldi	r22, 0x02	; 2
    2840:	41 e0       	ldi	r20, 0x01	; 1
    2842:	0e 94 b2 06 	call	0xd64	; 0xd64 <M_DIO_void_setPinValue>
					M_DIO_void_setPinValue(SSD_LED_C_PORT,SSD_LED_C_PIN,HIGH);
    2846:	80 e0       	ldi	r24, 0x00	; 0
    2848:	63 e0       	ldi	r22, 0x03	; 3
    284a:	41 e0       	ldi	r20, 0x01	; 1
    284c:	0e 94 b2 06 	call	0xd64	; 0xd64 <M_DIO_void_setPinValue>
					M_DIO_void_setPinValue(SSD_LED_D_PORT,SSD_LED_D_PIN,HIGH);
    2850:	80 e0       	ldi	r24, 0x00	; 0
    2852:	64 e0       	ldi	r22, 0x04	; 4
    2854:	41 e0       	ldi	r20, 0x01	; 1
    2856:	0e 94 b2 06 	call	0xd64	; 0xd64 <M_DIO_void_setPinValue>
					M_DIO_void_setPinValue(SSD_LED_E_PORT,SSD_LED_E_PIN,HIGH);
    285a:	80 e0       	ldi	r24, 0x00	; 0
    285c:	65 e0       	ldi	r22, 0x05	; 5
    285e:	41 e0       	ldi	r20, 0x01	; 1
    2860:	0e 94 b2 06 	call	0xd64	; 0xd64 <M_DIO_void_setPinValue>
					M_DIO_void_setPinValue(SSD_LED_F_PORT,SSD_LED_F_PIN,HIGH);
    2864:	80 e0       	ldi	r24, 0x00	; 0
    2866:	66 e0       	ldi	r22, 0x06	; 6
    2868:	41 e0       	ldi	r20, 0x01	; 1
    286a:	0e 94 b2 06 	call	0xd64	; 0xd64 <M_DIO_void_setPinValue>
					M_DIO_void_setPinValue(SSD_LED_A_PORT,SSD_LED_A_PIN,HIGH);
    286e:	80 e0       	ldi	r24, 0x00	; 0
    2870:	61 e0       	ldi	r22, 0x01	; 1
    2872:	41 e0       	ldi	r20, 0x01	; 1
    2874:	0e 94 b2 06 	call	0xd64	; 0xd64 <M_DIO_void_setPinValue>
					M_DIO_void_setPinValue(SSD_LED_G_PORT,SSD_LED_G_PIN,LOW);
    2878:	80 e0       	ldi	r24, 0x00	; 0
    287a:	67 e0       	ldi	r22, 0x07	; 7
    287c:	40 e0       	ldi	r20, 0x00	; 0
    287e:	0e 94 b2 06 	call	0xd64	; 0xd64 <M_DIO_void_setPinValue>
					M_DIO_void_setPinValue(SSD_LED_DOT_PORT,SSD_LED_DOT_PIN,LOW);
    2882:	81 e0       	ldi	r24, 0x01	; 1
    2884:	60 e0       	ldi	r22, 0x00	; 0
    2886:	40 e0       	ldi	r20, 0x00	; 0
    2888:	0e 94 b2 06 	call	0xd64	; 0xd64 <M_DIO_void_setPinValue>
    288c:	70 c1       	rjmp	.+736    	; 0x2b6e <H_SSD_void_DisplayNumber+0x904>
					break;

				case 1:
					M_DIO_void_setPinValue(SSD_LED_A_PORT,SSD_LED_A_PIN,LOW);
    288e:	80 e0       	ldi	r24, 0x00	; 0
    2890:	61 e0       	ldi	r22, 0x01	; 1
    2892:	40 e0       	ldi	r20, 0x00	; 0
    2894:	0e 94 b2 06 	call	0xd64	; 0xd64 <M_DIO_void_setPinValue>
					M_DIO_void_setPinValue(SSD_LED_B_PORT,SSD_LED_B_PIN,HIGH);
    2898:	80 e0       	ldi	r24, 0x00	; 0
    289a:	62 e0       	ldi	r22, 0x02	; 2
    289c:	41 e0       	ldi	r20, 0x01	; 1
    289e:	0e 94 b2 06 	call	0xd64	; 0xd64 <M_DIO_void_setPinValue>
					M_DIO_void_setPinValue(SSD_LED_C_PORT,SSD_LED_C_PIN,HIGH);
    28a2:	80 e0       	ldi	r24, 0x00	; 0
    28a4:	63 e0       	ldi	r22, 0x03	; 3
    28a6:	41 e0       	ldi	r20, 0x01	; 1
    28a8:	0e 94 b2 06 	call	0xd64	; 0xd64 <M_DIO_void_setPinValue>
					M_DIO_void_setPinValue(SSD_LED_D_PORT,SSD_LED_D_PIN,LOW);
    28ac:	80 e0       	ldi	r24, 0x00	; 0
    28ae:	64 e0       	ldi	r22, 0x04	; 4
    28b0:	40 e0       	ldi	r20, 0x00	; 0
    28b2:	0e 94 b2 06 	call	0xd64	; 0xd64 <M_DIO_void_setPinValue>
					M_DIO_void_setPinValue(SSD_LED_E_PORT,SSD_LED_E_PIN,LOW);
    28b6:	80 e0       	ldi	r24, 0x00	; 0
    28b8:	65 e0       	ldi	r22, 0x05	; 5
    28ba:	40 e0       	ldi	r20, 0x00	; 0
    28bc:	0e 94 b2 06 	call	0xd64	; 0xd64 <M_DIO_void_setPinValue>
					M_DIO_void_setPinValue(SSD_LED_F_PORT,SSD_LED_F_PIN,LOW);
    28c0:	80 e0       	ldi	r24, 0x00	; 0
    28c2:	66 e0       	ldi	r22, 0x06	; 6
    28c4:	40 e0       	ldi	r20, 0x00	; 0
    28c6:	0e 94 b2 06 	call	0xd64	; 0xd64 <M_DIO_void_setPinValue>
					M_DIO_void_setPinValue(SSD_LED_G_PORT,SSD_LED_G_PIN,LOW);
    28ca:	80 e0       	ldi	r24, 0x00	; 0
    28cc:	67 e0       	ldi	r22, 0x07	; 7
    28ce:	40 e0       	ldi	r20, 0x00	; 0
    28d0:	0e 94 b2 06 	call	0xd64	; 0xd64 <M_DIO_void_setPinValue>
					M_DIO_void_setPinValue(SSD_LED_DOT_PORT,SSD_LED_DOT_PIN,LOW);
    28d4:	81 e0       	ldi	r24, 0x01	; 1
    28d6:	60 e0       	ldi	r22, 0x00	; 0
    28d8:	40 e0       	ldi	r20, 0x00	; 0
    28da:	0e 94 b2 06 	call	0xd64	; 0xd64 <M_DIO_void_setPinValue>
    28de:	47 c1       	rjmp	.+654    	; 0x2b6e <H_SSD_void_DisplayNumber+0x904>
					break;

				case 2:
					M_DIO_void_setPinValue(SSD_LED_A_PORT,SSD_LED_A_PIN,HIGH);
    28e0:	80 e0       	ldi	r24, 0x00	; 0
    28e2:	61 e0       	ldi	r22, 0x01	; 1
    28e4:	41 e0       	ldi	r20, 0x01	; 1
    28e6:	0e 94 b2 06 	call	0xd64	; 0xd64 <M_DIO_void_setPinValue>
					M_DIO_void_setPinValue(SSD_LED_B_PORT,SSD_LED_B_PIN,HIGH);
    28ea:	80 e0       	ldi	r24, 0x00	; 0
    28ec:	62 e0       	ldi	r22, 0x02	; 2
    28ee:	41 e0       	ldi	r20, 0x01	; 1
    28f0:	0e 94 b2 06 	call	0xd64	; 0xd64 <M_DIO_void_setPinValue>
					M_DIO_void_setPinValue(SSD_LED_C_PORT,SSD_LED_C_PIN,LOW);
    28f4:	80 e0       	ldi	r24, 0x00	; 0
    28f6:	63 e0       	ldi	r22, 0x03	; 3
    28f8:	40 e0       	ldi	r20, 0x00	; 0
    28fa:	0e 94 b2 06 	call	0xd64	; 0xd64 <M_DIO_void_setPinValue>
					M_DIO_void_setPinValue(SSD_LED_D_PORT,SSD_LED_D_PIN,HIGH);
    28fe:	80 e0       	ldi	r24, 0x00	; 0
    2900:	64 e0       	ldi	r22, 0x04	; 4
    2902:	41 e0       	ldi	r20, 0x01	; 1
    2904:	0e 94 b2 06 	call	0xd64	; 0xd64 <M_DIO_void_setPinValue>
					M_DIO_void_setPinValue(SSD_LED_E_PORT,SSD_LED_E_PIN,HIGH);
    2908:	80 e0       	ldi	r24, 0x00	; 0
    290a:	65 e0       	ldi	r22, 0x05	; 5
    290c:	41 e0       	ldi	r20, 0x01	; 1
    290e:	0e 94 b2 06 	call	0xd64	; 0xd64 <M_DIO_void_setPinValue>
					M_DIO_void_setPinValue(SSD_LED_F_PORT,SSD_LED_F_PIN,LOW);
    2912:	80 e0       	ldi	r24, 0x00	; 0
    2914:	66 e0       	ldi	r22, 0x06	; 6
    2916:	40 e0       	ldi	r20, 0x00	; 0
    2918:	0e 94 b2 06 	call	0xd64	; 0xd64 <M_DIO_void_setPinValue>
					M_DIO_void_setPinValue(SSD_LED_G_PORT,SSD_LED_G_PIN,HIGH);
    291c:	80 e0       	ldi	r24, 0x00	; 0
    291e:	67 e0       	ldi	r22, 0x07	; 7
    2920:	41 e0       	ldi	r20, 0x01	; 1
    2922:	0e 94 b2 06 	call	0xd64	; 0xd64 <M_DIO_void_setPinValue>
					M_DIO_void_setPinValue(SSD_LED_DOT_PORT,SSD_LED_DOT_PIN,LOW);
    2926:	81 e0       	ldi	r24, 0x01	; 1
    2928:	60 e0       	ldi	r22, 0x00	; 0
    292a:	40 e0       	ldi	r20, 0x00	; 0
    292c:	0e 94 b2 06 	call	0xd64	; 0xd64 <M_DIO_void_setPinValue>
    2930:	1e c1       	rjmp	.+572    	; 0x2b6e <H_SSD_void_DisplayNumber+0x904>
					break;

				case 3:
					M_DIO_void_setPinValue(SSD_LED_A_PORT,SSD_LED_A_PIN,HIGH);
    2932:	80 e0       	ldi	r24, 0x00	; 0
    2934:	61 e0       	ldi	r22, 0x01	; 1
    2936:	41 e0       	ldi	r20, 0x01	; 1
    2938:	0e 94 b2 06 	call	0xd64	; 0xd64 <M_DIO_void_setPinValue>
					M_DIO_void_setPinValue(SSD_LED_B_PORT,SSD_LED_B_PIN,HIGH);
    293c:	80 e0       	ldi	r24, 0x00	; 0
    293e:	62 e0       	ldi	r22, 0x02	; 2
    2940:	41 e0       	ldi	r20, 0x01	; 1
    2942:	0e 94 b2 06 	call	0xd64	; 0xd64 <M_DIO_void_setPinValue>
					M_DIO_void_setPinValue(SSD_LED_C_PORT,SSD_LED_C_PIN,HIGH);
    2946:	80 e0       	ldi	r24, 0x00	; 0
    2948:	63 e0       	ldi	r22, 0x03	; 3
    294a:	41 e0       	ldi	r20, 0x01	; 1
    294c:	0e 94 b2 06 	call	0xd64	; 0xd64 <M_DIO_void_setPinValue>
					M_DIO_void_setPinValue(SSD_LED_D_PORT,SSD_LED_D_PIN,HIGH);
    2950:	80 e0       	ldi	r24, 0x00	; 0
    2952:	64 e0       	ldi	r22, 0x04	; 4
    2954:	41 e0       	ldi	r20, 0x01	; 1
    2956:	0e 94 b2 06 	call	0xd64	; 0xd64 <M_DIO_void_setPinValue>
					M_DIO_void_setPinValue(SSD_LED_E_PORT,SSD_LED_E_PIN,LOW);
    295a:	80 e0       	ldi	r24, 0x00	; 0
    295c:	65 e0       	ldi	r22, 0x05	; 5
    295e:	40 e0       	ldi	r20, 0x00	; 0
    2960:	0e 94 b2 06 	call	0xd64	; 0xd64 <M_DIO_void_setPinValue>
					M_DIO_void_setPinValue(SSD_LED_F_PORT,SSD_LED_F_PIN,LOW);
    2964:	80 e0       	ldi	r24, 0x00	; 0
    2966:	66 e0       	ldi	r22, 0x06	; 6
    2968:	40 e0       	ldi	r20, 0x00	; 0
    296a:	0e 94 b2 06 	call	0xd64	; 0xd64 <M_DIO_void_setPinValue>
					M_DIO_void_setPinValue(SSD_LED_G_PORT,SSD_LED_G_PIN,HIGH);
    296e:	80 e0       	ldi	r24, 0x00	; 0
    2970:	67 e0       	ldi	r22, 0x07	; 7
    2972:	41 e0       	ldi	r20, 0x01	; 1
    2974:	0e 94 b2 06 	call	0xd64	; 0xd64 <M_DIO_void_setPinValue>
					M_DIO_void_setPinValue(SSD_LED_DOT_PORT,SSD_LED_DOT_PIN,LOW);
    2978:	81 e0       	ldi	r24, 0x01	; 1
    297a:	60 e0       	ldi	r22, 0x00	; 0
    297c:	40 e0       	ldi	r20, 0x00	; 0
    297e:	0e 94 b2 06 	call	0xd64	; 0xd64 <M_DIO_void_setPinValue>
    2982:	f5 c0       	rjmp	.+490    	; 0x2b6e <H_SSD_void_DisplayNumber+0x904>
					break;

				case 4:
					M_DIO_void_setPinValue(SSD_LED_A_PORT,SSD_LED_A_PIN,LOW);
    2984:	80 e0       	ldi	r24, 0x00	; 0
    2986:	61 e0       	ldi	r22, 0x01	; 1
    2988:	40 e0       	ldi	r20, 0x00	; 0
    298a:	0e 94 b2 06 	call	0xd64	; 0xd64 <M_DIO_void_setPinValue>
					M_DIO_void_setPinValue(SSD_LED_B_PORT,SSD_LED_B_PIN,HIGH);
    298e:	80 e0       	ldi	r24, 0x00	; 0
    2990:	62 e0       	ldi	r22, 0x02	; 2
    2992:	41 e0       	ldi	r20, 0x01	; 1
    2994:	0e 94 b2 06 	call	0xd64	; 0xd64 <M_DIO_void_setPinValue>
					M_DIO_void_setPinValue(SSD_LED_C_PORT,SSD_LED_C_PIN,HIGH);
    2998:	80 e0       	ldi	r24, 0x00	; 0
    299a:	63 e0       	ldi	r22, 0x03	; 3
    299c:	41 e0       	ldi	r20, 0x01	; 1
    299e:	0e 94 b2 06 	call	0xd64	; 0xd64 <M_DIO_void_setPinValue>
					M_DIO_void_setPinValue(SSD_LED_D_PORT,SSD_LED_D_PIN,LOW);
    29a2:	80 e0       	ldi	r24, 0x00	; 0
    29a4:	64 e0       	ldi	r22, 0x04	; 4
    29a6:	40 e0       	ldi	r20, 0x00	; 0
    29a8:	0e 94 b2 06 	call	0xd64	; 0xd64 <M_DIO_void_setPinValue>
					M_DIO_void_setPinValue(SSD_LED_E_PORT,SSD_LED_E_PIN,LOW);
    29ac:	80 e0       	ldi	r24, 0x00	; 0
    29ae:	65 e0       	ldi	r22, 0x05	; 5
    29b0:	40 e0       	ldi	r20, 0x00	; 0
    29b2:	0e 94 b2 06 	call	0xd64	; 0xd64 <M_DIO_void_setPinValue>
					M_DIO_void_setPinValue(SSD_LED_F_PORT,SSD_LED_F_PIN,HIGH);
    29b6:	80 e0       	ldi	r24, 0x00	; 0
    29b8:	66 e0       	ldi	r22, 0x06	; 6
    29ba:	41 e0       	ldi	r20, 0x01	; 1
    29bc:	0e 94 b2 06 	call	0xd64	; 0xd64 <M_DIO_void_setPinValue>
					M_DIO_void_setPinValue(SSD_LED_G_PORT,SSD_LED_G_PIN,HIGH);
    29c0:	80 e0       	ldi	r24, 0x00	; 0
    29c2:	67 e0       	ldi	r22, 0x07	; 7
    29c4:	41 e0       	ldi	r20, 0x01	; 1
    29c6:	0e 94 b2 06 	call	0xd64	; 0xd64 <M_DIO_void_setPinValue>
					M_DIO_void_setPinValue(SSD_LED_DOT_PORT,SSD_LED_DOT_PIN,LOW);
    29ca:	81 e0       	ldi	r24, 0x01	; 1
    29cc:	60 e0       	ldi	r22, 0x00	; 0
    29ce:	40 e0       	ldi	r20, 0x00	; 0
    29d0:	0e 94 b2 06 	call	0xd64	; 0xd64 <M_DIO_void_setPinValue>
    29d4:	cc c0       	rjmp	.+408    	; 0x2b6e <H_SSD_void_DisplayNumber+0x904>
					break;

				case 5:
					M_DIO_void_setPinValue(SSD_LED_A_PORT,SSD_LED_A_PIN,HIGH);
    29d6:	80 e0       	ldi	r24, 0x00	; 0
    29d8:	61 e0       	ldi	r22, 0x01	; 1
    29da:	41 e0       	ldi	r20, 0x01	; 1
    29dc:	0e 94 b2 06 	call	0xd64	; 0xd64 <M_DIO_void_setPinValue>
					M_DIO_void_setPinValue(SSD_LED_B_PORT,SSD_LED_B_PIN,LOW);
    29e0:	80 e0       	ldi	r24, 0x00	; 0
    29e2:	62 e0       	ldi	r22, 0x02	; 2
    29e4:	40 e0       	ldi	r20, 0x00	; 0
    29e6:	0e 94 b2 06 	call	0xd64	; 0xd64 <M_DIO_void_setPinValue>
					M_DIO_void_setPinValue(SSD_LED_C_PORT,SSD_LED_C_PIN,HIGH);
    29ea:	80 e0       	ldi	r24, 0x00	; 0
    29ec:	63 e0       	ldi	r22, 0x03	; 3
    29ee:	41 e0       	ldi	r20, 0x01	; 1
    29f0:	0e 94 b2 06 	call	0xd64	; 0xd64 <M_DIO_void_setPinValue>
					M_DIO_void_setPinValue(SSD_LED_D_PORT,SSD_LED_D_PIN,HIGH);
    29f4:	80 e0       	ldi	r24, 0x00	; 0
    29f6:	64 e0       	ldi	r22, 0x04	; 4
    29f8:	41 e0       	ldi	r20, 0x01	; 1
    29fa:	0e 94 b2 06 	call	0xd64	; 0xd64 <M_DIO_void_setPinValue>
					M_DIO_void_setPinValue(SSD_LED_E_PORT,SSD_LED_E_PIN,LOW);
    29fe:	80 e0       	ldi	r24, 0x00	; 0
    2a00:	65 e0       	ldi	r22, 0x05	; 5
    2a02:	40 e0       	ldi	r20, 0x00	; 0
    2a04:	0e 94 b2 06 	call	0xd64	; 0xd64 <M_DIO_void_setPinValue>
					M_DIO_void_setPinValue(SSD_LED_F_PORT,SSD_LED_F_PIN,HIGH);
    2a08:	80 e0       	ldi	r24, 0x00	; 0
    2a0a:	66 e0       	ldi	r22, 0x06	; 6
    2a0c:	41 e0       	ldi	r20, 0x01	; 1
    2a0e:	0e 94 b2 06 	call	0xd64	; 0xd64 <M_DIO_void_setPinValue>
					M_DIO_void_setPinValue(SSD_LED_G_PORT,SSD_LED_G_PIN,HIGH);
    2a12:	80 e0       	ldi	r24, 0x00	; 0
    2a14:	67 e0       	ldi	r22, 0x07	; 7
    2a16:	41 e0       	ldi	r20, 0x01	; 1
    2a18:	0e 94 b2 06 	call	0xd64	; 0xd64 <M_DIO_void_setPinValue>
					M_DIO_void_setPinValue(SSD_LED_DOT_PORT,SSD_LED_DOT_PIN,LOW);
    2a1c:	81 e0       	ldi	r24, 0x01	; 1
    2a1e:	60 e0       	ldi	r22, 0x00	; 0
    2a20:	40 e0       	ldi	r20, 0x00	; 0
    2a22:	0e 94 b2 06 	call	0xd64	; 0xd64 <M_DIO_void_setPinValue>
    2a26:	a3 c0       	rjmp	.+326    	; 0x2b6e <H_SSD_void_DisplayNumber+0x904>
					break;
				case 6:
					M_DIO_void_setPinValue(SSD_LED_A_PORT,SSD_LED_A_PIN,HIGH);
    2a28:	80 e0       	ldi	r24, 0x00	; 0
    2a2a:	61 e0       	ldi	r22, 0x01	; 1
    2a2c:	41 e0       	ldi	r20, 0x01	; 1
    2a2e:	0e 94 b2 06 	call	0xd64	; 0xd64 <M_DIO_void_setPinValue>
					M_DIO_void_setPinValue(SSD_LED_B_PORT,SSD_LED_B_PIN,LOW);
    2a32:	80 e0       	ldi	r24, 0x00	; 0
    2a34:	62 e0       	ldi	r22, 0x02	; 2
    2a36:	40 e0       	ldi	r20, 0x00	; 0
    2a38:	0e 94 b2 06 	call	0xd64	; 0xd64 <M_DIO_void_setPinValue>
					M_DIO_void_setPinValue(SSD_LED_C_PORT,SSD_LED_C_PIN,HIGH);
    2a3c:	80 e0       	ldi	r24, 0x00	; 0
    2a3e:	63 e0       	ldi	r22, 0x03	; 3
    2a40:	41 e0       	ldi	r20, 0x01	; 1
    2a42:	0e 94 b2 06 	call	0xd64	; 0xd64 <M_DIO_void_setPinValue>
					M_DIO_void_setPinValue(SSD_LED_D_PORT,SSD_LED_D_PIN,HIGH);
    2a46:	80 e0       	ldi	r24, 0x00	; 0
    2a48:	64 e0       	ldi	r22, 0x04	; 4
    2a4a:	41 e0       	ldi	r20, 0x01	; 1
    2a4c:	0e 94 b2 06 	call	0xd64	; 0xd64 <M_DIO_void_setPinValue>
					M_DIO_void_setPinValue(SSD_LED_E_PORT,SSD_LED_E_PIN,HIGH);
    2a50:	80 e0       	ldi	r24, 0x00	; 0
    2a52:	65 e0       	ldi	r22, 0x05	; 5
    2a54:	41 e0       	ldi	r20, 0x01	; 1
    2a56:	0e 94 b2 06 	call	0xd64	; 0xd64 <M_DIO_void_setPinValue>
					M_DIO_void_setPinValue(SSD_LED_F_PORT,SSD_LED_F_PIN,HIGH);
    2a5a:	80 e0       	ldi	r24, 0x00	; 0
    2a5c:	66 e0       	ldi	r22, 0x06	; 6
    2a5e:	41 e0       	ldi	r20, 0x01	; 1
    2a60:	0e 94 b2 06 	call	0xd64	; 0xd64 <M_DIO_void_setPinValue>
					M_DIO_void_setPinValue(SSD_LED_G_PORT,SSD_LED_G_PIN,HIGH);
    2a64:	80 e0       	ldi	r24, 0x00	; 0
    2a66:	67 e0       	ldi	r22, 0x07	; 7
    2a68:	41 e0       	ldi	r20, 0x01	; 1
    2a6a:	0e 94 b2 06 	call	0xd64	; 0xd64 <M_DIO_void_setPinValue>
					M_DIO_void_setPinValue(SSD_LED_DOT_PORT,SSD_LED_DOT_PIN,LOW);
    2a6e:	81 e0       	ldi	r24, 0x01	; 1
    2a70:	60 e0       	ldi	r22, 0x00	; 0
    2a72:	40 e0       	ldi	r20, 0x00	; 0
    2a74:	0e 94 b2 06 	call	0xd64	; 0xd64 <M_DIO_void_setPinValue>
    2a78:	7a c0       	rjmp	.+244    	; 0x2b6e <H_SSD_void_DisplayNumber+0x904>
					break;
				case 7:
					M_DIO_void_setPinValue(SSD_LED_A_PORT,SSD_LED_A_PIN,HIGH);
    2a7a:	80 e0       	ldi	r24, 0x00	; 0
    2a7c:	61 e0       	ldi	r22, 0x01	; 1
    2a7e:	41 e0       	ldi	r20, 0x01	; 1
    2a80:	0e 94 b2 06 	call	0xd64	; 0xd64 <M_DIO_void_setPinValue>
					M_DIO_void_setPinValue(SSD_LED_B_PORT,SSD_LED_B_PIN,HIGH);
    2a84:	80 e0       	ldi	r24, 0x00	; 0
    2a86:	62 e0       	ldi	r22, 0x02	; 2
    2a88:	41 e0       	ldi	r20, 0x01	; 1
    2a8a:	0e 94 b2 06 	call	0xd64	; 0xd64 <M_DIO_void_setPinValue>
					M_DIO_void_setPinValue(SSD_LED_C_PORT,SSD_LED_C_PIN,HIGH);
    2a8e:	80 e0       	ldi	r24, 0x00	; 0
    2a90:	63 e0       	ldi	r22, 0x03	; 3
    2a92:	41 e0       	ldi	r20, 0x01	; 1
    2a94:	0e 94 b2 06 	call	0xd64	; 0xd64 <M_DIO_void_setPinValue>
					M_DIO_void_setPinValue(SSD_LED_D_PORT,SSD_LED_D_PIN,LOW);
    2a98:	80 e0       	ldi	r24, 0x00	; 0
    2a9a:	64 e0       	ldi	r22, 0x04	; 4
    2a9c:	40 e0       	ldi	r20, 0x00	; 0
    2a9e:	0e 94 b2 06 	call	0xd64	; 0xd64 <M_DIO_void_setPinValue>
					M_DIO_void_setPinValue(SSD_LED_E_PORT,SSD_LED_E_PIN,LOW);
    2aa2:	80 e0       	ldi	r24, 0x00	; 0
    2aa4:	65 e0       	ldi	r22, 0x05	; 5
    2aa6:	40 e0       	ldi	r20, 0x00	; 0
    2aa8:	0e 94 b2 06 	call	0xd64	; 0xd64 <M_DIO_void_setPinValue>
					M_DIO_void_setPinValue(SSD_LED_F_PORT,SSD_LED_F_PIN,LOW);
    2aac:	80 e0       	ldi	r24, 0x00	; 0
    2aae:	66 e0       	ldi	r22, 0x06	; 6
    2ab0:	40 e0       	ldi	r20, 0x00	; 0
    2ab2:	0e 94 b2 06 	call	0xd64	; 0xd64 <M_DIO_void_setPinValue>
					M_DIO_void_setPinValue(SSD_LED_G_PORT,SSD_LED_G_PIN,LOW);
    2ab6:	80 e0       	ldi	r24, 0x00	; 0
    2ab8:	67 e0       	ldi	r22, 0x07	; 7
    2aba:	40 e0       	ldi	r20, 0x00	; 0
    2abc:	0e 94 b2 06 	call	0xd64	; 0xd64 <M_DIO_void_setPinValue>
					M_DIO_void_setPinValue(SSD_LED_DOT_PORT,SSD_LED_DOT_PIN,LOW);
    2ac0:	81 e0       	ldi	r24, 0x01	; 1
    2ac2:	60 e0       	ldi	r22, 0x00	; 0
    2ac4:	40 e0       	ldi	r20, 0x00	; 0
    2ac6:	0e 94 b2 06 	call	0xd64	; 0xd64 <M_DIO_void_setPinValue>
    2aca:	51 c0       	rjmp	.+162    	; 0x2b6e <H_SSD_void_DisplayNumber+0x904>
					break;
				case 8:
					M_DIO_void_setPinValue(SSD_LED_A_PORT,SSD_LED_A_PIN,HIGH);
    2acc:	80 e0       	ldi	r24, 0x00	; 0
    2ace:	61 e0       	ldi	r22, 0x01	; 1
    2ad0:	41 e0       	ldi	r20, 0x01	; 1
    2ad2:	0e 94 b2 06 	call	0xd64	; 0xd64 <M_DIO_void_setPinValue>
					M_DIO_void_setPinValue(SSD_LED_B_PORT,SSD_LED_B_PIN,HIGH);
    2ad6:	80 e0       	ldi	r24, 0x00	; 0
    2ad8:	62 e0       	ldi	r22, 0x02	; 2
    2ada:	41 e0       	ldi	r20, 0x01	; 1
    2adc:	0e 94 b2 06 	call	0xd64	; 0xd64 <M_DIO_void_setPinValue>
					M_DIO_void_setPinValue(SSD_LED_C_PORT,SSD_LED_C_PIN,HIGH);
    2ae0:	80 e0       	ldi	r24, 0x00	; 0
    2ae2:	63 e0       	ldi	r22, 0x03	; 3
    2ae4:	41 e0       	ldi	r20, 0x01	; 1
    2ae6:	0e 94 b2 06 	call	0xd64	; 0xd64 <M_DIO_void_setPinValue>
					M_DIO_void_setPinValue(SSD_LED_D_PORT,SSD_LED_D_PIN,HIGH);
    2aea:	80 e0       	ldi	r24, 0x00	; 0
    2aec:	64 e0       	ldi	r22, 0x04	; 4
    2aee:	41 e0       	ldi	r20, 0x01	; 1
    2af0:	0e 94 b2 06 	call	0xd64	; 0xd64 <M_DIO_void_setPinValue>
					M_DIO_void_setPinValue(SSD_LED_E_PORT,SSD_LED_E_PIN,HIGH);
    2af4:	80 e0       	ldi	r24, 0x00	; 0
    2af6:	65 e0       	ldi	r22, 0x05	; 5
    2af8:	41 e0       	ldi	r20, 0x01	; 1
    2afa:	0e 94 b2 06 	call	0xd64	; 0xd64 <M_DIO_void_setPinValue>
					M_DIO_void_setPinValue(SSD_LED_F_PORT,SSD_LED_F_PIN,HIGH);
    2afe:	80 e0       	ldi	r24, 0x00	; 0
    2b00:	66 e0       	ldi	r22, 0x06	; 6
    2b02:	41 e0       	ldi	r20, 0x01	; 1
    2b04:	0e 94 b2 06 	call	0xd64	; 0xd64 <M_DIO_void_setPinValue>
					M_DIO_void_setPinValue(SSD_LED_G_PORT,SSD_LED_G_PIN,HIGH);
    2b08:	80 e0       	ldi	r24, 0x00	; 0
    2b0a:	67 e0       	ldi	r22, 0x07	; 7
    2b0c:	41 e0       	ldi	r20, 0x01	; 1
    2b0e:	0e 94 b2 06 	call	0xd64	; 0xd64 <M_DIO_void_setPinValue>
					M_DIO_void_setPinValue(SSD_LED_DOT_PORT,SSD_LED_DOT_PIN,LOW);
    2b12:	81 e0       	ldi	r24, 0x01	; 1
    2b14:	60 e0       	ldi	r22, 0x00	; 0
    2b16:	40 e0       	ldi	r20, 0x00	; 0
    2b18:	0e 94 b2 06 	call	0xd64	; 0xd64 <M_DIO_void_setPinValue>
    2b1c:	28 c0       	rjmp	.+80     	; 0x2b6e <H_SSD_void_DisplayNumber+0x904>
					break;
				case 9:
					M_DIO_void_setPinValue(SSD_LED_A_PORT,SSD_LED_A_PIN,HIGH);
    2b1e:	80 e0       	ldi	r24, 0x00	; 0
    2b20:	61 e0       	ldi	r22, 0x01	; 1
    2b22:	41 e0       	ldi	r20, 0x01	; 1
    2b24:	0e 94 b2 06 	call	0xd64	; 0xd64 <M_DIO_void_setPinValue>
					M_DIO_void_setPinValue(SSD_LED_B_PORT,SSD_LED_B_PIN,HIGH);
    2b28:	80 e0       	ldi	r24, 0x00	; 0
    2b2a:	62 e0       	ldi	r22, 0x02	; 2
    2b2c:	41 e0       	ldi	r20, 0x01	; 1
    2b2e:	0e 94 b2 06 	call	0xd64	; 0xd64 <M_DIO_void_setPinValue>
					M_DIO_void_setPinValue(SSD_LED_C_PORT,SSD_LED_C_PIN,HIGH);
    2b32:	80 e0       	ldi	r24, 0x00	; 0
    2b34:	63 e0       	ldi	r22, 0x03	; 3
    2b36:	41 e0       	ldi	r20, 0x01	; 1
    2b38:	0e 94 b2 06 	call	0xd64	; 0xd64 <M_DIO_void_setPinValue>
					M_DIO_void_setPinValue(SSD_LED_D_PORT,SSD_LED_D_PIN,HIGH);
    2b3c:	80 e0       	ldi	r24, 0x00	; 0
    2b3e:	64 e0       	ldi	r22, 0x04	; 4
    2b40:	41 e0       	ldi	r20, 0x01	; 1
    2b42:	0e 94 b2 06 	call	0xd64	; 0xd64 <M_DIO_void_setPinValue>
					M_DIO_void_setPinValue(SSD_LED_E_PORT,SSD_LED_E_PIN,LOW);
    2b46:	80 e0       	ldi	r24, 0x00	; 0
    2b48:	65 e0       	ldi	r22, 0x05	; 5
    2b4a:	40 e0       	ldi	r20, 0x00	; 0
    2b4c:	0e 94 b2 06 	call	0xd64	; 0xd64 <M_DIO_void_setPinValue>
					M_DIO_void_setPinValue(SSD_LED_F_PORT,SSD_LED_F_PIN,HIGH);
    2b50:	80 e0       	ldi	r24, 0x00	; 0
    2b52:	66 e0       	ldi	r22, 0x06	; 6
    2b54:	41 e0       	ldi	r20, 0x01	; 1
    2b56:	0e 94 b2 06 	call	0xd64	; 0xd64 <M_DIO_void_setPinValue>
					M_DIO_void_setPinValue(SSD_LED_G_PORT,SSD_LED_G_PIN,HIGH);
    2b5a:	80 e0       	ldi	r24, 0x00	; 0
    2b5c:	67 e0       	ldi	r22, 0x07	; 7
    2b5e:	41 e0       	ldi	r20, 0x01	; 1
    2b60:	0e 94 b2 06 	call	0xd64	; 0xd64 <M_DIO_void_setPinValue>
					M_DIO_void_setPinValue(SSD_LED_DOT_PORT,SSD_LED_DOT_PIN,LOW);
    2b64:	81 e0       	ldi	r24, 0x01	; 1
    2b66:	60 e0       	ldi	r22, 0x00	; 0
    2b68:	40 e0       	ldi	r20, 0x00	; 0
    2b6a:	0e 94 b2 06 	call	0xd64	; 0xd64 <M_DIO_void_setPinValue>



				}
		//enable digit 2
		M_DIO_void_setPinValue(SSD_DIG_2_EN_PORT,SSD_DIG_2_EN_PIN,HIGH);
    2b6e:	82 e0       	ldi	r24, 0x02	; 2
    2b70:	67 e0       	ldi	r22, 0x07	; 7
    2b72:	41 e0       	ldi	r20, 0x01	; 1
    2b74:	0e 94 b2 06 	call	0xd64	; 0xd64 <M_DIO_void_setPinValue>
    2b78:	80 e0       	ldi	r24, 0x00	; 0
    2b7a:	90 e0       	ldi	r25, 0x00	; 0
    2b7c:	a0 e8       	ldi	r26, 0x80	; 128
    2b7e:	bf e3       	ldi	r27, 0x3F	; 63
    2b80:	8b 87       	std	Y+11, r24	; 0x0b
    2b82:	9c 87       	std	Y+12, r25	; 0x0c
    2b84:	ad 87       	std	Y+13, r26	; 0x0d
    2b86:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2b88:	6b 85       	ldd	r22, Y+11	; 0x0b
    2b8a:	7c 85       	ldd	r23, Y+12	; 0x0c
    2b8c:	8d 85       	ldd	r24, Y+13	; 0x0d
    2b8e:	9e 85       	ldd	r25, Y+14	; 0x0e
    2b90:	20 e0       	ldi	r18, 0x00	; 0
    2b92:	30 e0       	ldi	r19, 0x00	; 0
    2b94:	4a e7       	ldi	r20, 0x7A	; 122
    2b96:	55 e4       	ldi	r21, 0x45	; 69
    2b98:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2b9c:	dc 01       	movw	r26, r24
    2b9e:	cb 01       	movw	r24, r22
    2ba0:	8f 83       	std	Y+7, r24	; 0x07
    2ba2:	98 87       	std	Y+8, r25	; 0x08
    2ba4:	a9 87       	std	Y+9, r26	; 0x09
    2ba6:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    2ba8:	6f 81       	ldd	r22, Y+7	; 0x07
    2baa:	78 85       	ldd	r23, Y+8	; 0x08
    2bac:	89 85       	ldd	r24, Y+9	; 0x09
    2bae:	9a 85       	ldd	r25, Y+10	; 0x0a
    2bb0:	20 e0       	ldi	r18, 0x00	; 0
    2bb2:	30 e0       	ldi	r19, 0x00	; 0
    2bb4:	40 e8       	ldi	r20, 0x80	; 128
    2bb6:	5f e3       	ldi	r21, 0x3F	; 63
    2bb8:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    2bbc:	88 23       	and	r24, r24
    2bbe:	2c f4       	brge	.+10     	; 0x2bca <H_SSD_void_DisplayNumber+0x960>
		__ticks = 1;
    2bc0:	81 e0       	ldi	r24, 0x01	; 1
    2bc2:	90 e0       	ldi	r25, 0x00	; 0
    2bc4:	9e 83       	std	Y+6, r25	; 0x06
    2bc6:	8d 83       	std	Y+5, r24	; 0x05
    2bc8:	3f c0       	rjmp	.+126    	; 0x2c48 <H_SSD_void_DisplayNumber+0x9de>
	else if (__tmp > 65535)
    2bca:	6f 81       	ldd	r22, Y+7	; 0x07
    2bcc:	78 85       	ldd	r23, Y+8	; 0x08
    2bce:	89 85       	ldd	r24, Y+9	; 0x09
    2bd0:	9a 85       	ldd	r25, Y+10	; 0x0a
    2bd2:	20 e0       	ldi	r18, 0x00	; 0
    2bd4:	3f ef       	ldi	r19, 0xFF	; 255
    2bd6:	4f e7       	ldi	r20, 0x7F	; 127
    2bd8:	57 e4       	ldi	r21, 0x47	; 71
    2bda:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    2bde:	18 16       	cp	r1, r24
    2be0:	4c f5       	brge	.+82     	; 0x2c34 <H_SSD_void_DisplayNumber+0x9ca>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2be2:	6b 85       	ldd	r22, Y+11	; 0x0b
    2be4:	7c 85       	ldd	r23, Y+12	; 0x0c
    2be6:	8d 85       	ldd	r24, Y+13	; 0x0d
    2be8:	9e 85       	ldd	r25, Y+14	; 0x0e
    2bea:	20 e0       	ldi	r18, 0x00	; 0
    2bec:	30 e0       	ldi	r19, 0x00	; 0
    2bee:	40 e2       	ldi	r20, 0x20	; 32
    2bf0:	51 e4       	ldi	r21, 0x41	; 65
    2bf2:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2bf6:	dc 01       	movw	r26, r24
    2bf8:	cb 01       	movw	r24, r22
    2bfa:	bc 01       	movw	r22, r24
    2bfc:	cd 01       	movw	r24, r26
    2bfe:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2c02:	dc 01       	movw	r26, r24
    2c04:	cb 01       	movw	r24, r22
    2c06:	9e 83       	std	Y+6, r25	; 0x06
    2c08:	8d 83       	std	Y+5, r24	; 0x05
    2c0a:	0f c0       	rjmp	.+30     	; 0x2c2a <H_SSD_void_DisplayNumber+0x9c0>
    2c0c:	80 e9       	ldi	r24, 0x90	; 144
    2c0e:	91 e0       	ldi	r25, 0x01	; 1
    2c10:	9c 83       	std	Y+4, r25	; 0x04
    2c12:	8b 83       	std	Y+3, r24	; 0x03
    2c14:	8b 81       	ldd	r24, Y+3	; 0x03
    2c16:	9c 81       	ldd	r25, Y+4	; 0x04
    2c18:	01 97       	sbiw	r24, 0x01	; 1
    2c1a:	f1 f7       	brne	.-4      	; 0x2c18 <H_SSD_void_DisplayNumber+0x9ae>
    2c1c:	9c 83       	std	Y+4, r25	; 0x04
    2c1e:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2c20:	8d 81       	ldd	r24, Y+5	; 0x05
    2c22:	9e 81       	ldd	r25, Y+6	; 0x06
    2c24:	01 97       	sbiw	r24, 0x01	; 1
    2c26:	9e 83       	std	Y+6, r25	; 0x06
    2c28:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2c2a:	8d 81       	ldd	r24, Y+5	; 0x05
    2c2c:	9e 81       	ldd	r25, Y+6	; 0x06
    2c2e:	00 97       	sbiw	r24, 0x00	; 0
    2c30:	69 f7       	brne	.-38     	; 0x2c0c <H_SSD_void_DisplayNumber+0x9a2>
    2c32:	14 c0       	rjmp	.+40     	; 0x2c5c <H_SSD_void_DisplayNumber+0x9f2>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2c34:	6f 81       	ldd	r22, Y+7	; 0x07
    2c36:	78 85       	ldd	r23, Y+8	; 0x08
    2c38:	89 85       	ldd	r24, Y+9	; 0x09
    2c3a:	9a 85       	ldd	r25, Y+10	; 0x0a
    2c3c:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2c40:	dc 01       	movw	r26, r24
    2c42:	cb 01       	movw	r24, r22
    2c44:	9e 83       	std	Y+6, r25	; 0x06
    2c46:	8d 83       	std	Y+5, r24	; 0x05
    2c48:	8d 81       	ldd	r24, Y+5	; 0x05
    2c4a:	9e 81       	ldd	r25, Y+6	; 0x06
    2c4c:	9a 83       	std	Y+2, r25	; 0x02
    2c4e:	89 83       	std	Y+1, r24	; 0x01
    2c50:	89 81       	ldd	r24, Y+1	; 0x01
    2c52:	9a 81       	ldd	r25, Y+2	; 0x02
    2c54:	01 97       	sbiw	r24, 0x01	; 1
    2c56:	f1 f7       	brne	.-4      	; 0x2c54 <H_SSD_void_DisplayNumber+0x9ea>
    2c58:	9a 83       	std	Y+2, r25	; 0x02
    2c5a:	89 83       	std	Y+1, r24	; 0x01

		_delay_ms(1);
		M_DIO_void_setPinValue(SSD_DIG_2_EN_PORT,SSD_DIG_2_EN_PIN,LOW);
    2c5c:	82 e0       	ldi	r24, 0x02	; 2
    2c5e:	67 e0       	ldi	r22, 0x07	; 7
    2c60:	40 e0       	ldi	r20, 0x00	; 0
    2c62:	0e 94 b2 06 	call	0xd64	; 0xd64 <M_DIO_void_setPinValue>
		return;
	}
	u32 i ;
	u8 units =number % 10;
	u8 tens = number/10;
	for(i=0;i<SSD_DISPLAYY_TIME ;i++){
    2c66:	8f 8d       	ldd	r24, Y+31	; 0x1f
    2c68:	98 a1       	ldd	r25, Y+32	; 0x20
    2c6a:	a9 a1       	ldd	r26, Y+33	; 0x21
    2c6c:	ba a1       	ldd	r27, Y+34	; 0x22
    2c6e:	01 96       	adiw	r24, 0x01	; 1
    2c70:	a1 1d       	adc	r26, r1
    2c72:	b1 1d       	adc	r27, r1
    2c74:	8f 8f       	std	Y+31, r24	; 0x1f
    2c76:	98 a3       	std	Y+32, r25	; 0x20
    2c78:	a9 a3       	std	Y+33, r26	; 0x21
    2c7a:	ba a3       	std	Y+34, r27	; 0x22
    2c7c:	8f 8d       	ldd	r24, Y+31	; 0x1f
    2c7e:	98 a1       	ldd	r25, Y+32	; 0x20
    2c80:	a9 a1       	ldd	r26, Y+33	; 0x21
    2c82:	ba a1       	ldd	r27, Y+34	; 0x22
    2c84:	8a 3f       	cpi	r24, 0xFA	; 250
    2c86:	91 05       	cpc	r25, r1
    2c88:	a1 05       	cpc	r26, r1
    2c8a:	b1 05       	cpc	r27, r1
    2c8c:	08 f4       	brcc	.+2      	; 0x2c90 <H_SSD_void_DisplayNumber+0xa26>
    2c8e:	0e cb       	rjmp	.-2532   	; 0x22ac <H_SSD_void_DisplayNumber+0x42>
		M_DIO_void_setPinValue(SSD_DIG_2_EN_PORT,SSD_DIG_2_EN_PIN,HIGH);

		_delay_ms(1);
		M_DIO_void_setPinValue(SSD_DIG_2_EN_PORT,SSD_DIG_2_EN_PIN,LOW);
	}
}
    2c90:	a7 96       	adiw	r28, 0x27	; 39
    2c92:	0f b6       	in	r0, 0x3f	; 63
    2c94:	f8 94       	cli
    2c96:	de bf       	out	0x3e, r29	; 62
    2c98:	0f be       	out	0x3f, r0	; 63
    2c9a:	cd bf       	out	0x3d, r28	; 61
    2c9c:	cf 91       	pop	r28
    2c9e:	df 91       	pop	r29
    2ca0:	08 95       	ret

00002ca2 <H_PB_void_init>:
#include"PB_int.h"
#include<util/delay.h>


void H_PB_void_init(const PB_t *ptr)
{
    2ca2:	df 93       	push	r29
    2ca4:	cf 93       	push	r28
    2ca6:	00 d0       	rcall	.+0      	; 0x2ca8 <H_PB_void_init+0x6>
    2ca8:	cd b7       	in	r28, 0x3d	; 61
    2caa:	de b7       	in	r29, 0x3e	; 62
    2cac:	9a 83       	std	Y+2, r25	; 0x02
    2cae:	89 83       	std	Y+1, r24	; 0x01
	M_DIO_void_setPinDir(ptr->PB_port, ptr->PB_pin,IN);
    2cb0:	e9 81       	ldd	r30, Y+1	; 0x01
    2cb2:	fa 81       	ldd	r31, Y+2	; 0x02
    2cb4:	81 81       	ldd	r24, Z+1	; 0x01
    2cb6:	e9 81       	ldd	r30, Y+1	; 0x01
    2cb8:	fa 81       	ldd	r31, Y+2	; 0x02
    2cba:	92 81       	ldd	r25, Z+2	; 0x02
    2cbc:	69 2f       	mov	r22, r25
    2cbe:	40 e0       	ldi	r20, 0x00	; 0
    2cc0:	0e 94 9b 05 	call	0xb36	; 0xb36 <M_DIO_void_setPinDir>
}
    2cc4:	0f 90       	pop	r0
    2cc6:	0f 90       	pop	r0
    2cc8:	cf 91       	pop	r28
    2cca:	df 91       	pop	r29
    2ccc:	08 95       	ret

00002cce <H_PB_void_read>:
void H_PB_void_read(const PB_t *ptr,VALUE_T *pvalue)
{
    2cce:	df 93       	push	r29
    2cd0:	cf 93       	push	r28
    2cd2:	cd b7       	in	r28, 0x3d	; 61
    2cd4:	de b7       	in	r29, 0x3e	; 62
    2cd6:	a0 97       	sbiw	r28, 0x20	; 32
    2cd8:	0f b6       	in	r0, 0x3f	; 63
    2cda:	f8 94       	cli
    2cdc:	de bf       	out	0x3e, r29	; 62
    2cde:	0f be       	out	0x3f, r0	; 63
    2ce0:	cd bf       	out	0x3d, r28	; 61
    2ce2:	9e 8f       	std	Y+30, r25	; 0x1e
    2ce4:	8d 8f       	std	Y+29, r24	; 0x1d
    2ce6:	78 a3       	std	Y+32, r23	; 0x20
    2ce8:	6f 8f       	std	Y+31, r22	; 0x1f
	//u8 read;

	if(ptr -> PB_activeMood == ACTIVE_LOW)
    2cea:	ed 8d       	ldd	r30, Y+29	; 0x1d
    2cec:	fe 8d       	ldd	r31, Y+30	; 0x1e
    2cee:	83 81       	ldd	r24, Z+3	; 0x03
    2cf0:	88 23       	and	r24, r24
    2cf2:	09 f0       	breq	.+2      	; 0x2cf6 <H_PB_void_read+0x28>
    2cf4:	b0 c0       	rjmp	.+352    	; 0x2e56 <H_PB_void_read+0x188>
	{
		*pvalue=NOT_PRESSED_ACTIVE_LOW ;
    2cf6:	ef 8d       	ldd	r30, Y+31	; 0x1f
    2cf8:	f8 a1       	ldd	r31, Y+32	; 0x20
    2cfa:	81 e0       	ldi	r24, 0x01	; 1
    2cfc:	80 83       	st	Z, r24
		M_DIO_void_getPinValue(ptr->PB_port, ptr->PB_pin, pvalue);
    2cfe:	ed 8d       	ldd	r30, Y+29	; 0x1d
    2d00:	fe 8d       	ldd	r31, Y+30	; 0x1e
    2d02:	81 81       	ldd	r24, Z+1	; 0x01
    2d04:	ed 8d       	ldd	r30, Y+29	; 0x1d
    2d06:	fe 8d       	ldd	r31, Y+30	; 0x1e
    2d08:	92 81       	ldd	r25, Z+2	; 0x02
    2d0a:	2f 8d       	ldd	r18, Y+31	; 0x1f
    2d0c:	38 a1       	ldd	r19, Y+32	; 0x20
    2d0e:	69 2f       	mov	r22, r25
    2d10:	a9 01       	movw	r20, r18
    2d12:	0e 94 c9 07 	call	0xf92	; 0xf92 <M_DIO_void_getPinValue>
		if(*pvalue==PRESSED_ACTIVE_LOW){
    2d16:	ef 8d       	ldd	r30, Y+31	; 0x1f
    2d18:	f8 a1       	ldd	r31, Y+32	; 0x20
    2d1a:	80 81       	ld	r24, Z
    2d1c:	88 23       	and	r24, r24
    2d1e:	09 f0       	breq	.+2      	; 0x2d22 <H_PB_void_read+0x54>
    2d20:	57 c1       	rjmp	.+686    	; 0x2fd0 <H_PB_void_read+0x302>
    2d22:	80 e0       	ldi	r24, 0x00	; 0
    2d24:	90 e0       	ldi	r25, 0x00	; 0
    2d26:	a8 e4       	ldi	r26, 0x48	; 72
    2d28:	b3 e4       	ldi	r27, 0x43	; 67
    2d2a:	89 8f       	std	Y+25, r24	; 0x19
    2d2c:	9a 8f       	std	Y+26, r25	; 0x1a
    2d2e:	ab 8f       	std	Y+27, r26	; 0x1b
    2d30:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2d32:	69 8d       	ldd	r22, Y+25	; 0x19
    2d34:	7a 8d       	ldd	r23, Y+26	; 0x1a
    2d36:	8b 8d       	ldd	r24, Y+27	; 0x1b
    2d38:	9c 8d       	ldd	r25, Y+28	; 0x1c
    2d3a:	20 e0       	ldi	r18, 0x00	; 0
    2d3c:	30 e0       	ldi	r19, 0x00	; 0
    2d3e:	4a e7       	ldi	r20, 0x7A	; 122
    2d40:	55 e4       	ldi	r21, 0x45	; 69
    2d42:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2d46:	dc 01       	movw	r26, r24
    2d48:	cb 01       	movw	r24, r22
    2d4a:	8d 8b       	std	Y+21, r24	; 0x15
    2d4c:	9e 8b       	std	Y+22, r25	; 0x16
    2d4e:	af 8b       	std	Y+23, r26	; 0x17
    2d50:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    2d52:	6d 89       	ldd	r22, Y+21	; 0x15
    2d54:	7e 89       	ldd	r23, Y+22	; 0x16
    2d56:	8f 89       	ldd	r24, Y+23	; 0x17
    2d58:	98 8d       	ldd	r25, Y+24	; 0x18
    2d5a:	20 e0       	ldi	r18, 0x00	; 0
    2d5c:	30 e0       	ldi	r19, 0x00	; 0
    2d5e:	40 e8       	ldi	r20, 0x80	; 128
    2d60:	5f e3       	ldi	r21, 0x3F	; 63
    2d62:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    2d66:	88 23       	and	r24, r24
    2d68:	2c f4       	brge	.+10     	; 0x2d74 <H_PB_void_read+0xa6>
		__ticks = 1;
    2d6a:	81 e0       	ldi	r24, 0x01	; 1
    2d6c:	90 e0       	ldi	r25, 0x00	; 0
    2d6e:	9c 8b       	std	Y+20, r25	; 0x14
    2d70:	8b 8b       	std	Y+19, r24	; 0x13
    2d72:	3f c0       	rjmp	.+126    	; 0x2df2 <H_PB_void_read+0x124>
	else if (__tmp > 65535)
    2d74:	6d 89       	ldd	r22, Y+21	; 0x15
    2d76:	7e 89       	ldd	r23, Y+22	; 0x16
    2d78:	8f 89       	ldd	r24, Y+23	; 0x17
    2d7a:	98 8d       	ldd	r25, Y+24	; 0x18
    2d7c:	20 e0       	ldi	r18, 0x00	; 0
    2d7e:	3f ef       	ldi	r19, 0xFF	; 255
    2d80:	4f e7       	ldi	r20, 0x7F	; 127
    2d82:	57 e4       	ldi	r21, 0x47	; 71
    2d84:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    2d88:	18 16       	cp	r1, r24
    2d8a:	4c f5       	brge	.+82     	; 0x2dde <H_PB_void_read+0x110>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2d8c:	69 8d       	ldd	r22, Y+25	; 0x19
    2d8e:	7a 8d       	ldd	r23, Y+26	; 0x1a
    2d90:	8b 8d       	ldd	r24, Y+27	; 0x1b
    2d92:	9c 8d       	ldd	r25, Y+28	; 0x1c
    2d94:	20 e0       	ldi	r18, 0x00	; 0
    2d96:	30 e0       	ldi	r19, 0x00	; 0
    2d98:	40 e2       	ldi	r20, 0x20	; 32
    2d9a:	51 e4       	ldi	r21, 0x41	; 65
    2d9c:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2da0:	dc 01       	movw	r26, r24
    2da2:	cb 01       	movw	r24, r22
    2da4:	bc 01       	movw	r22, r24
    2da6:	cd 01       	movw	r24, r26
    2da8:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2dac:	dc 01       	movw	r26, r24
    2dae:	cb 01       	movw	r24, r22
    2db0:	9c 8b       	std	Y+20, r25	; 0x14
    2db2:	8b 8b       	std	Y+19, r24	; 0x13
    2db4:	0f c0       	rjmp	.+30     	; 0x2dd4 <H_PB_void_read+0x106>
    2db6:	80 e9       	ldi	r24, 0x90	; 144
    2db8:	91 e0       	ldi	r25, 0x01	; 1
    2dba:	9a 8b       	std	Y+18, r25	; 0x12
    2dbc:	89 8b       	std	Y+17, r24	; 0x11
    2dbe:	89 89       	ldd	r24, Y+17	; 0x11
    2dc0:	9a 89       	ldd	r25, Y+18	; 0x12
    2dc2:	01 97       	sbiw	r24, 0x01	; 1
    2dc4:	f1 f7       	brne	.-4      	; 0x2dc2 <H_PB_void_read+0xf4>
    2dc6:	9a 8b       	std	Y+18, r25	; 0x12
    2dc8:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2dca:	8b 89       	ldd	r24, Y+19	; 0x13
    2dcc:	9c 89       	ldd	r25, Y+20	; 0x14
    2dce:	01 97       	sbiw	r24, 0x01	; 1
    2dd0:	9c 8b       	std	Y+20, r25	; 0x14
    2dd2:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2dd4:	8b 89       	ldd	r24, Y+19	; 0x13
    2dd6:	9c 89       	ldd	r25, Y+20	; 0x14
    2dd8:	00 97       	sbiw	r24, 0x00	; 0
    2dda:	69 f7       	brne	.-38     	; 0x2db6 <H_PB_void_read+0xe8>
    2ddc:	14 c0       	rjmp	.+40     	; 0x2e06 <H_PB_void_read+0x138>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2dde:	6d 89       	ldd	r22, Y+21	; 0x15
    2de0:	7e 89       	ldd	r23, Y+22	; 0x16
    2de2:	8f 89       	ldd	r24, Y+23	; 0x17
    2de4:	98 8d       	ldd	r25, Y+24	; 0x18
    2de6:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2dea:	dc 01       	movw	r26, r24
    2dec:	cb 01       	movw	r24, r22
    2dee:	9c 8b       	std	Y+20, r25	; 0x14
    2df0:	8b 8b       	std	Y+19, r24	; 0x13
    2df2:	8b 89       	ldd	r24, Y+19	; 0x13
    2df4:	9c 89       	ldd	r25, Y+20	; 0x14
    2df6:	98 8b       	std	Y+16, r25	; 0x10
    2df8:	8f 87       	std	Y+15, r24	; 0x0f
    2dfa:	8f 85       	ldd	r24, Y+15	; 0x0f
    2dfc:	98 89       	ldd	r25, Y+16	; 0x10
    2dfe:	01 97       	sbiw	r24, 0x01	; 1
    2e00:	f1 f7       	brne	.-4      	; 0x2dfe <H_PB_void_read+0x130>
    2e02:	98 8b       	std	Y+16, r25	; 0x10
    2e04:	8f 87       	std	Y+15, r24	; 0x0f
			_delay_ms(200);

			M_DIO_void_getPinValue(ptr->PB_port, ptr->PB_pin,pvalue);
    2e06:	ed 8d       	ldd	r30, Y+29	; 0x1d
    2e08:	fe 8d       	ldd	r31, Y+30	; 0x1e
    2e0a:	81 81       	ldd	r24, Z+1	; 0x01
    2e0c:	ed 8d       	ldd	r30, Y+29	; 0x1d
    2e0e:	fe 8d       	ldd	r31, Y+30	; 0x1e
    2e10:	92 81       	ldd	r25, Z+2	; 0x02
    2e12:	2f 8d       	ldd	r18, Y+31	; 0x1f
    2e14:	38 a1       	ldd	r19, Y+32	; 0x20
    2e16:	69 2f       	mov	r22, r25
    2e18:	a9 01       	movw	r20, r18
    2e1a:	0e 94 c9 07 	call	0xf92	; 0xf92 <M_DIO_void_getPinValue>
			if (*pvalue==PRESSED_ACTIVE_LOW)
    2e1e:	ef 8d       	ldd	r30, Y+31	; 0x1f
    2e20:	f8 a1       	ldd	r31, Y+32	; 0x20
    2e22:	80 81       	ld	r24, Z
    2e24:	88 23       	and	r24, r24
    2e26:	09 f0       	breq	.+2      	; 0x2e2a <H_PB_void_read+0x15c>
    2e28:	d3 c0       	rjmp	.+422    	; 0x2fd0 <H_PB_void_read+0x302>
    2e2a:	0c c0       	rjmp	.+24     	; 0x2e44 <H_PB_void_read+0x176>
			{
				while(*pvalue==PRESSED_ACTIVE_LOW)
				{
					M_DIO_void_getPinValue(ptr->PB_port, ptr->PB_pin, pvalue);
    2e2c:	ed 8d       	ldd	r30, Y+29	; 0x1d
    2e2e:	fe 8d       	ldd	r31, Y+30	; 0x1e
    2e30:	81 81       	ldd	r24, Z+1	; 0x01
    2e32:	ed 8d       	ldd	r30, Y+29	; 0x1d
    2e34:	fe 8d       	ldd	r31, Y+30	; 0x1e
    2e36:	92 81       	ldd	r25, Z+2	; 0x02
    2e38:	2f 8d       	ldd	r18, Y+31	; 0x1f
    2e3a:	38 a1       	ldd	r19, Y+32	; 0x20
    2e3c:	69 2f       	mov	r22, r25
    2e3e:	a9 01       	movw	r20, r18
    2e40:	0e 94 c9 07 	call	0xf92	; 0xf92 <M_DIO_void_getPinValue>
			_delay_ms(200);

			M_DIO_void_getPinValue(ptr->PB_port, ptr->PB_pin,pvalue);
			if (*pvalue==PRESSED_ACTIVE_LOW)
			{
				while(*pvalue==PRESSED_ACTIVE_LOW)
    2e44:	ef 8d       	ldd	r30, Y+31	; 0x1f
    2e46:	f8 a1       	ldd	r31, Y+32	; 0x20
    2e48:	80 81       	ld	r24, Z
    2e4a:	88 23       	and	r24, r24
    2e4c:	79 f3       	breq	.-34     	; 0x2e2c <H_PB_void_read+0x15e>
				{
					M_DIO_void_getPinValue(ptr->PB_port, ptr->PB_pin, pvalue);
				}
				*pvalue=PRESSED_ACTIVE_LOW;
    2e4e:	ef 8d       	ldd	r30, Y+31	; 0x1f
    2e50:	f8 a1       	ldd	r31, Y+32	; 0x20
    2e52:	10 82       	st	Z, r1
    2e54:	bd c0       	rjmp	.+378    	; 0x2fd0 <H_PB_void_read+0x302>
				return;
			}

		}
	}
	else if(ptr->PB_activeMood==ACTIVE_HIGH)
    2e56:	ed 8d       	ldd	r30, Y+29	; 0x1d
    2e58:	fe 8d       	ldd	r31, Y+30	; 0x1e
    2e5a:	83 81       	ldd	r24, Z+3	; 0x03
    2e5c:	81 30       	cpi	r24, 0x01	; 1
    2e5e:	09 f0       	breq	.+2      	; 0x2e62 <H_PB_void_read+0x194>
    2e60:	b7 c0       	rjmp	.+366    	; 0x2fd0 <H_PB_void_read+0x302>
	{
		//u8 read;

		if(ptr->PB_activeMood==ACTIVE_HIGH)
    2e62:	ed 8d       	ldd	r30, Y+29	; 0x1d
    2e64:	fe 8d       	ldd	r31, Y+30	; 0x1e
    2e66:	83 81       	ldd	r24, Z+3	; 0x03
    2e68:	81 30       	cpi	r24, 0x01	; 1
    2e6a:	09 f0       	breq	.+2      	; 0x2e6e <H_PB_void_read+0x1a0>
    2e6c:	b1 c0       	rjmp	.+354    	; 0x2fd0 <H_PB_void_read+0x302>
		{
			*pvalue=NOT_PRESSED_ACTIVEHIGH ;
    2e6e:	ef 8d       	ldd	r30, Y+31	; 0x1f
    2e70:	f8 a1       	ldd	r31, Y+32	; 0x20
    2e72:	10 82       	st	Z, r1
			M_DIO_void_getPinValue(ptr->PB_port, ptr->PB_pin, &pvalue);
    2e74:	ed 8d       	ldd	r30, Y+29	; 0x1d
    2e76:	fe 8d       	ldd	r31, Y+30	; 0x1e
    2e78:	81 81       	ldd	r24, Z+1	; 0x01
    2e7a:	ed 8d       	ldd	r30, Y+29	; 0x1d
    2e7c:	fe 8d       	ldd	r31, Y+30	; 0x1e
    2e7e:	92 81       	ldd	r25, Z+2	; 0x02
    2e80:	9e 01       	movw	r18, r28
    2e82:	21 5e       	subi	r18, 0xE1	; 225
    2e84:	3f 4f       	sbci	r19, 0xFF	; 255
    2e86:	69 2f       	mov	r22, r25
    2e88:	a9 01       	movw	r20, r18
    2e8a:	0e 94 c9 07 	call	0xf92	; 0xf92 <M_DIO_void_getPinValue>
			if(*pvalue==PRESSED_ACTIVE_HIGH){
    2e8e:	ef 8d       	ldd	r30, Y+31	; 0x1f
    2e90:	f8 a1       	ldd	r31, Y+32	; 0x20
    2e92:	80 81       	ld	r24, Z
    2e94:	81 30       	cpi	r24, 0x01	; 1
    2e96:	09 f0       	breq	.+2      	; 0x2e9a <H_PB_void_read+0x1cc>
    2e98:	9b c0       	rjmp	.+310    	; 0x2fd0 <H_PB_void_read+0x302>
    2e9a:	80 e0       	ldi	r24, 0x00	; 0
    2e9c:	90 e0       	ldi	r25, 0x00	; 0
    2e9e:	a8 e4       	ldi	r26, 0x48	; 72
    2ea0:	b3 e4       	ldi	r27, 0x43	; 67
    2ea2:	8b 87       	std	Y+11, r24	; 0x0b
    2ea4:	9c 87       	std	Y+12, r25	; 0x0c
    2ea6:	ad 87       	std	Y+13, r26	; 0x0d
    2ea8:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2eaa:	6b 85       	ldd	r22, Y+11	; 0x0b
    2eac:	7c 85       	ldd	r23, Y+12	; 0x0c
    2eae:	8d 85       	ldd	r24, Y+13	; 0x0d
    2eb0:	9e 85       	ldd	r25, Y+14	; 0x0e
    2eb2:	20 e0       	ldi	r18, 0x00	; 0
    2eb4:	30 e0       	ldi	r19, 0x00	; 0
    2eb6:	4a e7       	ldi	r20, 0x7A	; 122
    2eb8:	55 e4       	ldi	r21, 0x45	; 69
    2eba:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2ebe:	dc 01       	movw	r26, r24
    2ec0:	cb 01       	movw	r24, r22
    2ec2:	8f 83       	std	Y+7, r24	; 0x07
    2ec4:	98 87       	std	Y+8, r25	; 0x08
    2ec6:	a9 87       	std	Y+9, r26	; 0x09
    2ec8:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    2eca:	6f 81       	ldd	r22, Y+7	; 0x07
    2ecc:	78 85       	ldd	r23, Y+8	; 0x08
    2ece:	89 85       	ldd	r24, Y+9	; 0x09
    2ed0:	9a 85       	ldd	r25, Y+10	; 0x0a
    2ed2:	20 e0       	ldi	r18, 0x00	; 0
    2ed4:	30 e0       	ldi	r19, 0x00	; 0
    2ed6:	40 e8       	ldi	r20, 0x80	; 128
    2ed8:	5f e3       	ldi	r21, 0x3F	; 63
    2eda:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    2ede:	88 23       	and	r24, r24
    2ee0:	2c f4       	brge	.+10     	; 0x2eec <H_PB_void_read+0x21e>
		__ticks = 1;
    2ee2:	81 e0       	ldi	r24, 0x01	; 1
    2ee4:	90 e0       	ldi	r25, 0x00	; 0
    2ee6:	9e 83       	std	Y+6, r25	; 0x06
    2ee8:	8d 83       	std	Y+5, r24	; 0x05
    2eea:	3f c0       	rjmp	.+126    	; 0x2f6a <H_PB_void_read+0x29c>
	else if (__tmp > 65535)
    2eec:	6f 81       	ldd	r22, Y+7	; 0x07
    2eee:	78 85       	ldd	r23, Y+8	; 0x08
    2ef0:	89 85       	ldd	r24, Y+9	; 0x09
    2ef2:	9a 85       	ldd	r25, Y+10	; 0x0a
    2ef4:	20 e0       	ldi	r18, 0x00	; 0
    2ef6:	3f ef       	ldi	r19, 0xFF	; 255
    2ef8:	4f e7       	ldi	r20, 0x7F	; 127
    2efa:	57 e4       	ldi	r21, 0x47	; 71
    2efc:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    2f00:	18 16       	cp	r1, r24
    2f02:	4c f5       	brge	.+82     	; 0x2f56 <H_PB_void_read+0x288>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2f04:	6b 85       	ldd	r22, Y+11	; 0x0b
    2f06:	7c 85       	ldd	r23, Y+12	; 0x0c
    2f08:	8d 85       	ldd	r24, Y+13	; 0x0d
    2f0a:	9e 85       	ldd	r25, Y+14	; 0x0e
    2f0c:	20 e0       	ldi	r18, 0x00	; 0
    2f0e:	30 e0       	ldi	r19, 0x00	; 0
    2f10:	40 e2       	ldi	r20, 0x20	; 32
    2f12:	51 e4       	ldi	r21, 0x41	; 65
    2f14:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2f18:	dc 01       	movw	r26, r24
    2f1a:	cb 01       	movw	r24, r22
    2f1c:	bc 01       	movw	r22, r24
    2f1e:	cd 01       	movw	r24, r26
    2f20:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2f24:	dc 01       	movw	r26, r24
    2f26:	cb 01       	movw	r24, r22
    2f28:	9e 83       	std	Y+6, r25	; 0x06
    2f2a:	8d 83       	std	Y+5, r24	; 0x05
    2f2c:	0f c0       	rjmp	.+30     	; 0x2f4c <H_PB_void_read+0x27e>
    2f2e:	80 e9       	ldi	r24, 0x90	; 144
    2f30:	91 e0       	ldi	r25, 0x01	; 1
    2f32:	9c 83       	std	Y+4, r25	; 0x04
    2f34:	8b 83       	std	Y+3, r24	; 0x03
    2f36:	8b 81       	ldd	r24, Y+3	; 0x03
    2f38:	9c 81       	ldd	r25, Y+4	; 0x04
    2f3a:	01 97       	sbiw	r24, 0x01	; 1
    2f3c:	f1 f7       	brne	.-4      	; 0x2f3a <H_PB_void_read+0x26c>
    2f3e:	9c 83       	std	Y+4, r25	; 0x04
    2f40:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2f42:	8d 81       	ldd	r24, Y+5	; 0x05
    2f44:	9e 81       	ldd	r25, Y+6	; 0x06
    2f46:	01 97       	sbiw	r24, 0x01	; 1
    2f48:	9e 83       	std	Y+6, r25	; 0x06
    2f4a:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2f4c:	8d 81       	ldd	r24, Y+5	; 0x05
    2f4e:	9e 81       	ldd	r25, Y+6	; 0x06
    2f50:	00 97       	sbiw	r24, 0x00	; 0
    2f52:	69 f7       	brne	.-38     	; 0x2f2e <H_PB_void_read+0x260>
    2f54:	14 c0       	rjmp	.+40     	; 0x2f7e <H_PB_void_read+0x2b0>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2f56:	6f 81       	ldd	r22, Y+7	; 0x07
    2f58:	78 85       	ldd	r23, Y+8	; 0x08
    2f5a:	89 85       	ldd	r24, Y+9	; 0x09
    2f5c:	9a 85       	ldd	r25, Y+10	; 0x0a
    2f5e:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2f62:	dc 01       	movw	r26, r24
    2f64:	cb 01       	movw	r24, r22
    2f66:	9e 83       	std	Y+6, r25	; 0x06
    2f68:	8d 83       	std	Y+5, r24	; 0x05
    2f6a:	8d 81       	ldd	r24, Y+5	; 0x05
    2f6c:	9e 81       	ldd	r25, Y+6	; 0x06
    2f6e:	9a 83       	std	Y+2, r25	; 0x02
    2f70:	89 83       	std	Y+1, r24	; 0x01
    2f72:	89 81       	ldd	r24, Y+1	; 0x01
    2f74:	9a 81       	ldd	r25, Y+2	; 0x02
    2f76:	01 97       	sbiw	r24, 0x01	; 1
    2f78:	f1 f7       	brne	.-4      	; 0x2f76 <H_PB_void_read+0x2a8>
    2f7a:	9a 83       	std	Y+2, r25	; 0x02
    2f7c:	89 83       	std	Y+1, r24	; 0x01
				_delay_ms(200);

				M_DIO_void_getPinValue(ptr->PB_port, ptr->PB_pin, &pvalue);
    2f7e:	ed 8d       	ldd	r30, Y+29	; 0x1d
    2f80:	fe 8d       	ldd	r31, Y+30	; 0x1e
    2f82:	81 81       	ldd	r24, Z+1	; 0x01
    2f84:	ed 8d       	ldd	r30, Y+29	; 0x1d
    2f86:	fe 8d       	ldd	r31, Y+30	; 0x1e
    2f88:	92 81       	ldd	r25, Z+2	; 0x02
    2f8a:	9e 01       	movw	r18, r28
    2f8c:	21 5e       	subi	r18, 0xE1	; 225
    2f8e:	3f 4f       	sbci	r19, 0xFF	; 255
    2f90:	69 2f       	mov	r22, r25
    2f92:	a9 01       	movw	r20, r18
    2f94:	0e 94 c9 07 	call	0xf92	; 0xf92 <M_DIO_void_getPinValue>
				if (*pvalue==PRESSED_ACTIVE_HIGH)
    2f98:	ef 8d       	ldd	r30, Y+31	; 0x1f
    2f9a:	f8 a1       	ldd	r31, Y+32	; 0x20
    2f9c:	80 81       	ld	r24, Z
    2f9e:	81 30       	cpi	r24, 0x01	; 1
    2fa0:	b9 f4       	brne	.+46     	; 0x2fd0 <H_PB_void_read+0x302>
    2fa2:	0d c0       	rjmp	.+26     	; 0x2fbe <H_PB_void_read+0x2f0>
				{
					while(*pvalue==PRESSED_ACTIVE_HIGH)
					{
						M_DIO_void_getPinValue(ptr->PB_port, ptr->PB_pin, &pvalue);
    2fa4:	ed 8d       	ldd	r30, Y+29	; 0x1d
    2fa6:	fe 8d       	ldd	r31, Y+30	; 0x1e
    2fa8:	81 81       	ldd	r24, Z+1	; 0x01
    2faa:	ed 8d       	ldd	r30, Y+29	; 0x1d
    2fac:	fe 8d       	ldd	r31, Y+30	; 0x1e
    2fae:	92 81       	ldd	r25, Z+2	; 0x02
    2fb0:	9e 01       	movw	r18, r28
    2fb2:	21 5e       	subi	r18, 0xE1	; 225
    2fb4:	3f 4f       	sbci	r19, 0xFF	; 255
    2fb6:	69 2f       	mov	r22, r25
    2fb8:	a9 01       	movw	r20, r18
    2fba:	0e 94 c9 07 	call	0xf92	; 0xf92 <M_DIO_void_getPinValue>
				_delay_ms(200);

				M_DIO_void_getPinValue(ptr->PB_port, ptr->PB_pin, &pvalue);
				if (*pvalue==PRESSED_ACTIVE_HIGH)
				{
					while(*pvalue==PRESSED_ACTIVE_HIGH)
    2fbe:	ef 8d       	ldd	r30, Y+31	; 0x1f
    2fc0:	f8 a1       	ldd	r31, Y+32	; 0x20
    2fc2:	80 81       	ld	r24, Z
    2fc4:	81 30       	cpi	r24, 0x01	; 1
    2fc6:	71 f3       	breq	.-36     	; 0x2fa4 <H_PB_void_read+0x2d6>
					{
						M_DIO_void_getPinValue(ptr->PB_port, ptr->PB_pin, &pvalue);
					}
					*pvalue=PRESSED_ACTIVE_HIGH;
    2fc8:	ef 8d       	ldd	r30, Y+31	; 0x1f
    2fca:	f8 a1       	ldd	r31, Y+32	; 0x20
    2fcc:	81 e0       	ldi	r24, 0x01	; 1
    2fce:	80 83       	st	Z, r24
				}

			}
		}
	}
}
    2fd0:	a0 96       	adiw	r28, 0x20	; 32
    2fd2:	0f b6       	in	r0, 0x3f	; 63
    2fd4:	f8 94       	cli
    2fd6:	de bf       	out	0x3e, r29	; 62
    2fd8:	0f be       	out	0x3f, r0	; 63
    2fda:	cd bf       	out	0x3d, r28	; 61
    2fdc:	cf 91       	pop	r28
    2fde:	df 91       	pop	r29
    2fe0:	08 95       	ret

00002fe2 <main>:
}
#endif

#if (1)
int main()
{
    2fe2:	0f 93       	push	r16
    2fe4:	1f 93       	push	r17
    2fe6:	df 93       	push	r29
    2fe8:	cf 93       	push	r28
    2fea:	cd b7       	in	r28, 0x3d	; 61
    2fec:	de b7       	in	r29, 0x3e	; 62
    2fee:	c4 55       	subi	r28, 0x54	; 84
    2ff0:	d0 40       	sbci	r29, 0x00	; 0
    2ff2:	0f b6       	in	r0, 0x3f	; 63
    2ff4:	f8 94       	cli
    2ff6:	de bf       	out	0x3e, r29	; 62
    2ff8:	0f be       	out	0x3f, r0	; 63
    2ffa:	cd bf       	out	0x3d, r28	; 61

	H_Led_void_ledInit(RED_LED);
    2ffc:	80 e0       	ldi	r24, 0x00	; 0
    2ffe:	0e 94 ca 08 	call	0x1194	; 0x1194 <H_Led_void_ledInit>
	H_Led_void_ledInit(BLU_LED);
    3002:	82 e0       	ldi	r24, 0x02	; 2
    3004:	0e 94 ca 08 	call	0x1194	; 0x1194 <H_Led_void_ledInit>
	H_Led_void_ledInit(GRN_LED);
    3008:	81 e0       	ldi	r24, 0x01	; 1
    300a:	0e 94 ca 08 	call	0x1194	; 0x1194 <H_Led_void_ledInit>
	while(1)
	{
		H_Led_void_setON(BLU_LED);
    300e:	82 e0       	ldi	r24, 0x02	; 2
    3010:	0e 94 fb 08 	call	0x11f6	; 0x11f6 <H_Led_void_setON>
    3014:	fe 01       	movw	r30, r28
    3016:	ef 5a       	subi	r30, 0xAF	; 175
    3018:	ff 4f       	sbci	r31, 0xFF	; 255
    301a:	80 e0       	ldi	r24, 0x00	; 0
    301c:	90 e0       	ldi	r25, 0x00	; 0
    301e:	aa ef       	ldi	r26, 0xFA	; 250
    3020:	b3 e4       	ldi	r27, 0x43	; 67
    3022:	80 83       	st	Z, r24
    3024:	91 83       	std	Z+1, r25	; 0x01
    3026:	a2 83       	std	Z+2, r26	; 0x02
    3028:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    302a:	8e 01       	movw	r16, r28
    302c:	03 5b       	subi	r16, 0xB3	; 179
    302e:	1f 4f       	sbci	r17, 0xFF	; 255
    3030:	fe 01       	movw	r30, r28
    3032:	ef 5a       	subi	r30, 0xAF	; 175
    3034:	ff 4f       	sbci	r31, 0xFF	; 255
    3036:	60 81       	ld	r22, Z
    3038:	71 81       	ldd	r23, Z+1	; 0x01
    303a:	82 81       	ldd	r24, Z+2	; 0x02
    303c:	93 81       	ldd	r25, Z+3	; 0x03
    303e:	20 e0       	ldi	r18, 0x00	; 0
    3040:	30 e0       	ldi	r19, 0x00	; 0
    3042:	4a e7       	ldi	r20, 0x7A	; 122
    3044:	55 e4       	ldi	r21, 0x45	; 69
    3046:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    304a:	dc 01       	movw	r26, r24
    304c:	cb 01       	movw	r24, r22
    304e:	f8 01       	movw	r30, r16
    3050:	80 83       	st	Z, r24
    3052:	91 83       	std	Z+1, r25	; 0x01
    3054:	a2 83       	std	Z+2, r26	; 0x02
    3056:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    3058:	fe 01       	movw	r30, r28
    305a:	e3 5b       	subi	r30, 0xB3	; 179
    305c:	ff 4f       	sbci	r31, 0xFF	; 255
    305e:	60 81       	ld	r22, Z
    3060:	71 81       	ldd	r23, Z+1	; 0x01
    3062:	82 81       	ldd	r24, Z+2	; 0x02
    3064:	93 81       	ldd	r25, Z+3	; 0x03
    3066:	20 e0       	ldi	r18, 0x00	; 0
    3068:	30 e0       	ldi	r19, 0x00	; 0
    306a:	40 e8       	ldi	r20, 0x80	; 128
    306c:	5f e3       	ldi	r21, 0x3F	; 63
    306e:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    3072:	88 23       	and	r24, r24
    3074:	44 f4       	brge	.+16     	; 0x3086 <main+0xa4>
		__ticks = 1;
    3076:	fe 01       	movw	r30, r28
    3078:	e5 5b       	subi	r30, 0xB5	; 181
    307a:	ff 4f       	sbci	r31, 0xFF	; 255
    307c:	81 e0       	ldi	r24, 0x01	; 1
    307e:	90 e0       	ldi	r25, 0x00	; 0
    3080:	91 83       	std	Z+1, r25	; 0x01
    3082:	80 83       	st	Z, r24
    3084:	64 c0       	rjmp	.+200    	; 0x314e <main+0x16c>
	else if (__tmp > 65535)
    3086:	fe 01       	movw	r30, r28
    3088:	e3 5b       	subi	r30, 0xB3	; 179
    308a:	ff 4f       	sbci	r31, 0xFF	; 255
    308c:	60 81       	ld	r22, Z
    308e:	71 81       	ldd	r23, Z+1	; 0x01
    3090:	82 81       	ldd	r24, Z+2	; 0x02
    3092:	93 81       	ldd	r25, Z+3	; 0x03
    3094:	20 e0       	ldi	r18, 0x00	; 0
    3096:	3f ef       	ldi	r19, 0xFF	; 255
    3098:	4f e7       	ldi	r20, 0x7F	; 127
    309a:	57 e4       	ldi	r21, 0x47	; 71
    309c:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    30a0:	18 16       	cp	r1, r24
    30a2:	0c f0       	brlt	.+2      	; 0x30a6 <main+0xc4>
    30a4:	43 c0       	rjmp	.+134    	; 0x312c <main+0x14a>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    30a6:	fe 01       	movw	r30, r28
    30a8:	ef 5a       	subi	r30, 0xAF	; 175
    30aa:	ff 4f       	sbci	r31, 0xFF	; 255
    30ac:	60 81       	ld	r22, Z
    30ae:	71 81       	ldd	r23, Z+1	; 0x01
    30b0:	82 81       	ldd	r24, Z+2	; 0x02
    30b2:	93 81       	ldd	r25, Z+3	; 0x03
    30b4:	20 e0       	ldi	r18, 0x00	; 0
    30b6:	30 e0       	ldi	r19, 0x00	; 0
    30b8:	40 e2       	ldi	r20, 0x20	; 32
    30ba:	51 e4       	ldi	r21, 0x41	; 65
    30bc:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    30c0:	dc 01       	movw	r26, r24
    30c2:	cb 01       	movw	r24, r22
    30c4:	8e 01       	movw	r16, r28
    30c6:	05 5b       	subi	r16, 0xB5	; 181
    30c8:	1f 4f       	sbci	r17, 0xFF	; 255
    30ca:	bc 01       	movw	r22, r24
    30cc:	cd 01       	movw	r24, r26
    30ce:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    30d2:	dc 01       	movw	r26, r24
    30d4:	cb 01       	movw	r24, r22
    30d6:	f8 01       	movw	r30, r16
    30d8:	91 83       	std	Z+1, r25	; 0x01
    30da:	80 83       	st	Z, r24
    30dc:	1f c0       	rjmp	.+62     	; 0x311c <main+0x13a>
    30de:	fe 01       	movw	r30, r28
    30e0:	e7 5b       	subi	r30, 0xB7	; 183
    30e2:	ff 4f       	sbci	r31, 0xFF	; 255
    30e4:	80 e9       	ldi	r24, 0x90	; 144
    30e6:	91 e0       	ldi	r25, 0x01	; 1
    30e8:	91 83       	std	Z+1, r25	; 0x01
    30ea:	80 83       	st	Z, r24
    30ec:	fe 01       	movw	r30, r28
    30ee:	e7 5b       	subi	r30, 0xB7	; 183
    30f0:	ff 4f       	sbci	r31, 0xFF	; 255
    30f2:	80 81       	ld	r24, Z
    30f4:	91 81       	ldd	r25, Z+1	; 0x01
    30f6:	01 97       	sbiw	r24, 0x01	; 1
    30f8:	f1 f7       	brne	.-4      	; 0x30f6 <main+0x114>
    30fa:	fe 01       	movw	r30, r28
    30fc:	e7 5b       	subi	r30, 0xB7	; 183
    30fe:	ff 4f       	sbci	r31, 0xFF	; 255
    3100:	91 83       	std	Z+1, r25	; 0x01
    3102:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3104:	de 01       	movw	r26, r28
    3106:	a5 5b       	subi	r26, 0xB5	; 181
    3108:	bf 4f       	sbci	r27, 0xFF	; 255
    310a:	fe 01       	movw	r30, r28
    310c:	e5 5b       	subi	r30, 0xB5	; 181
    310e:	ff 4f       	sbci	r31, 0xFF	; 255
    3110:	80 81       	ld	r24, Z
    3112:	91 81       	ldd	r25, Z+1	; 0x01
    3114:	01 97       	sbiw	r24, 0x01	; 1
    3116:	11 96       	adiw	r26, 0x01	; 1
    3118:	9c 93       	st	X, r25
    311a:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    311c:	fe 01       	movw	r30, r28
    311e:	e5 5b       	subi	r30, 0xB5	; 181
    3120:	ff 4f       	sbci	r31, 0xFF	; 255
    3122:	80 81       	ld	r24, Z
    3124:	91 81       	ldd	r25, Z+1	; 0x01
    3126:	00 97       	sbiw	r24, 0x00	; 0
    3128:	d1 f6       	brne	.-76     	; 0x30de <main+0xfc>
    312a:	27 c0       	rjmp	.+78     	; 0x317a <main+0x198>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    312c:	8e 01       	movw	r16, r28
    312e:	05 5b       	subi	r16, 0xB5	; 181
    3130:	1f 4f       	sbci	r17, 0xFF	; 255
    3132:	fe 01       	movw	r30, r28
    3134:	e3 5b       	subi	r30, 0xB3	; 179
    3136:	ff 4f       	sbci	r31, 0xFF	; 255
    3138:	60 81       	ld	r22, Z
    313a:	71 81       	ldd	r23, Z+1	; 0x01
    313c:	82 81       	ldd	r24, Z+2	; 0x02
    313e:	93 81       	ldd	r25, Z+3	; 0x03
    3140:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    3144:	dc 01       	movw	r26, r24
    3146:	cb 01       	movw	r24, r22
    3148:	f8 01       	movw	r30, r16
    314a:	91 83       	std	Z+1, r25	; 0x01
    314c:	80 83       	st	Z, r24
    314e:	de 01       	movw	r26, r28
    3150:	a9 5b       	subi	r26, 0xB9	; 185
    3152:	bf 4f       	sbci	r27, 0xFF	; 255
    3154:	fe 01       	movw	r30, r28
    3156:	e5 5b       	subi	r30, 0xB5	; 181
    3158:	ff 4f       	sbci	r31, 0xFF	; 255
    315a:	80 81       	ld	r24, Z
    315c:	91 81       	ldd	r25, Z+1	; 0x01
    315e:	8d 93       	st	X+, r24
    3160:	9c 93       	st	X, r25
    3162:	fe 01       	movw	r30, r28
    3164:	e9 5b       	subi	r30, 0xB9	; 185
    3166:	ff 4f       	sbci	r31, 0xFF	; 255
    3168:	80 81       	ld	r24, Z
    316a:	91 81       	ldd	r25, Z+1	; 0x01
    316c:	01 97       	sbiw	r24, 0x01	; 1
    316e:	f1 f7       	brne	.-4      	; 0x316c <main+0x18a>
    3170:	fe 01       	movw	r30, r28
    3172:	e9 5b       	subi	r30, 0xB9	; 185
    3174:	ff 4f       	sbci	r31, 0xFF	; 255
    3176:	91 83       	std	Z+1, r25	; 0x01
    3178:	80 83       	st	Z, r24
		_delay_ms(500);
		H_Led_void_setOFF(BLU_LED);
    317a:	82 e0       	ldi	r24, 0x02	; 2
    317c:	0e 94 2c 09 	call	0x1258	; 0x1258 <H_Led_void_setOFF>
    3180:	fe 01       	movw	r30, r28
    3182:	ed 5b       	subi	r30, 0xBD	; 189
    3184:	ff 4f       	sbci	r31, 0xFF	; 255
    3186:	80 e0       	ldi	r24, 0x00	; 0
    3188:	90 e0       	ldi	r25, 0x00	; 0
    318a:	aa ef       	ldi	r26, 0xFA	; 250
    318c:	b3 e4       	ldi	r27, 0x43	; 67
    318e:	80 83       	st	Z, r24
    3190:	91 83       	std	Z+1, r25	; 0x01
    3192:	a2 83       	std	Z+2, r26	; 0x02
    3194:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    3196:	8e 01       	movw	r16, r28
    3198:	01 5c       	subi	r16, 0xC1	; 193
    319a:	1f 4f       	sbci	r17, 0xFF	; 255
    319c:	fe 01       	movw	r30, r28
    319e:	ed 5b       	subi	r30, 0xBD	; 189
    31a0:	ff 4f       	sbci	r31, 0xFF	; 255
    31a2:	60 81       	ld	r22, Z
    31a4:	71 81       	ldd	r23, Z+1	; 0x01
    31a6:	82 81       	ldd	r24, Z+2	; 0x02
    31a8:	93 81       	ldd	r25, Z+3	; 0x03
    31aa:	20 e0       	ldi	r18, 0x00	; 0
    31ac:	30 e0       	ldi	r19, 0x00	; 0
    31ae:	4a e7       	ldi	r20, 0x7A	; 122
    31b0:	55 e4       	ldi	r21, 0x45	; 69
    31b2:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    31b6:	dc 01       	movw	r26, r24
    31b8:	cb 01       	movw	r24, r22
    31ba:	f8 01       	movw	r30, r16
    31bc:	80 83       	st	Z, r24
    31be:	91 83       	std	Z+1, r25	; 0x01
    31c0:	a2 83       	std	Z+2, r26	; 0x02
    31c2:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    31c4:	fe 01       	movw	r30, r28
    31c6:	ff 96       	adiw	r30, 0x3f	; 63
    31c8:	60 81       	ld	r22, Z
    31ca:	71 81       	ldd	r23, Z+1	; 0x01
    31cc:	82 81       	ldd	r24, Z+2	; 0x02
    31ce:	93 81       	ldd	r25, Z+3	; 0x03
    31d0:	20 e0       	ldi	r18, 0x00	; 0
    31d2:	30 e0       	ldi	r19, 0x00	; 0
    31d4:	40 e8       	ldi	r20, 0x80	; 128
    31d6:	5f e3       	ldi	r21, 0x3F	; 63
    31d8:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    31dc:	88 23       	and	r24, r24
    31de:	2c f4       	brge	.+10     	; 0x31ea <main+0x208>
		__ticks = 1;
    31e0:	81 e0       	ldi	r24, 0x01	; 1
    31e2:	90 e0       	ldi	r25, 0x00	; 0
    31e4:	9e af       	std	Y+62, r25	; 0x3e
    31e6:	8d af       	std	Y+61, r24	; 0x3d
    31e8:	46 c0       	rjmp	.+140    	; 0x3276 <main+0x294>
	else if (__tmp > 65535)
    31ea:	fe 01       	movw	r30, r28
    31ec:	ff 96       	adiw	r30, 0x3f	; 63
    31ee:	60 81       	ld	r22, Z
    31f0:	71 81       	ldd	r23, Z+1	; 0x01
    31f2:	82 81       	ldd	r24, Z+2	; 0x02
    31f4:	93 81       	ldd	r25, Z+3	; 0x03
    31f6:	20 e0       	ldi	r18, 0x00	; 0
    31f8:	3f ef       	ldi	r19, 0xFF	; 255
    31fa:	4f e7       	ldi	r20, 0x7F	; 127
    31fc:	57 e4       	ldi	r21, 0x47	; 71
    31fe:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    3202:	18 16       	cp	r1, r24
    3204:	64 f5       	brge	.+88     	; 0x325e <main+0x27c>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    3206:	fe 01       	movw	r30, r28
    3208:	ed 5b       	subi	r30, 0xBD	; 189
    320a:	ff 4f       	sbci	r31, 0xFF	; 255
    320c:	60 81       	ld	r22, Z
    320e:	71 81       	ldd	r23, Z+1	; 0x01
    3210:	82 81       	ldd	r24, Z+2	; 0x02
    3212:	93 81       	ldd	r25, Z+3	; 0x03
    3214:	20 e0       	ldi	r18, 0x00	; 0
    3216:	30 e0       	ldi	r19, 0x00	; 0
    3218:	40 e2       	ldi	r20, 0x20	; 32
    321a:	51 e4       	ldi	r21, 0x41	; 65
    321c:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    3220:	dc 01       	movw	r26, r24
    3222:	cb 01       	movw	r24, r22
    3224:	bc 01       	movw	r22, r24
    3226:	cd 01       	movw	r24, r26
    3228:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    322c:	dc 01       	movw	r26, r24
    322e:	cb 01       	movw	r24, r22
    3230:	9e af       	std	Y+62, r25	; 0x3e
    3232:	8d af       	std	Y+61, r24	; 0x3d
    3234:	0f c0       	rjmp	.+30     	; 0x3254 <main+0x272>
    3236:	80 e9       	ldi	r24, 0x90	; 144
    3238:	91 e0       	ldi	r25, 0x01	; 1
    323a:	9c af       	std	Y+60, r25	; 0x3c
    323c:	8b af       	std	Y+59, r24	; 0x3b
    323e:	8b ad       	ldd	r24, Y+59	; 0x3b
    3240:	9c ad       	ldd	r25, Y+60	; 0x3c
    3242:	01 97       	sbiw	r24, 0x01	; 1
    3244:	f1 f7       	brne	.-4      	; 0x3242 <main+0x260>
    3246:	9c af       	std	Y+60, r25	; 0x3c
    3248:	8b af       	std	Y+59, r24	; 0x3b
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    324a:	8d ad       	ldd	r24, Y+61	; 0x3d
    324c:	9e ad       	ldd	r25, Y+62	; 0x3e
    324e:	01 97       	sbiw	r24, 0x01	; 1
    3250:	9e af       	std	Y+62, r25	; 0x3e
    3252:	8d af       	std	Y+61, r24	; 0x3d
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3254:	8d ad       	ldd	r24, Y+61	; 0x3d
    3256:	9e ad       	ldd	r25, Y+62	; 0x3e
    3258:	00 97       	sbiw	r24, 0x00	; 0
    325a:	69 f7       	brne	.-38     	; 0x3236 <main+0x254>
    325c:	16 c0       	rjmp	.+44     	; 0x328a <main+0x2a8>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    325e:	fe 01       	movw	r30, r28
    3260:	ff 96       	adiw	r30, 0x3f	; 63
    3262:	60 81       	ld	r22, Z
    3264:	71 81       	ldd	r23, Z+1	; 0x01
    3266:	82 81       	ldd	r24, Z+2	; 0x02
    3268:	93 81       	ldd	r25, Z+3	; 0x03
    326a:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    326e:	dc 01       	movw	r26, r24
    3270:	cb 01       	movw	r24, r22
    3272:	9e af       	std	Y+62, r25	; 0x3e
    3274:	8d af       	std	Y+61, r24	; 0x3d
    3276:	8d ad       	ldd	r24, Y+61	; 0x3d
    3278:	9e ad       	ldd	r25, Y+62	; 0x3e
    327a:	9a af       	std	Y+58, r25	; 0x3a
    327c:	89 af       	std	Y+57, r24	; 0x39
    327e:	89 ad       	ldd	r24, Y+57	; 0x39
    3280:	9a ad       	ldd	r25, Y+58	; 0x3a
    3282:	01 97       	sbiw	r24, 0x01	; 1
    3284:	f1 f7       	brne	.-4      	; 0x3282 <main+0x2a0>
    3286:	9a af       	std	Y+58, r25	; 0x3a
    3288:	89 af       	std	Y+57, r24	; 0x39
		_delay_ms(500);
		H_Led_void_setON(RED_LED);
    328a:	80 e0       	ldi	r24, 0x00	; 0
    328c:	0e 94 fb 08 	call	0x11f6	; 0x11f6 <H_Led_void_setON>
    3290:	80 e0       	ldi	r24, 0x00	; 0
    3292:	90 e0       	ldi	r25, 0x00	; 0
    3294:	aa ef       	ldi	r26, 0xFA	; 250
    3296:	b3 e4       	ldi	r27, 0x43	; 67
    3298:	8d ab       	std	Y+53, r24	; 0x35
    329a:	9e ab       	std	Y+54, r25	; 0x36
    329c:	af ab       	std	Y+55, r26	; 0x37
    329e:	b8 af       	std	Y+56, r27	; 0x38
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    32a0:	6d a9       	ldd	r22, Y+53	; 0x35
    32a2:	7e a9       	ldd	r23, Y+54	; 0x36
    32a4:	8f a9       	ldd	r24, Y+55	; 0x37
    32a6:	98 ad       	ldd	r25, Y+56	; 0x38
    32a8:	20 e0       	ldi	r18, 0x00	; 0
    32aa:	30 e0       	ldi	r19, 0x00	; 0
    32ac:	4a e7       	ldi	r20, 0x7A	; 122
    32ae:	55 e4       	ldi	r21, 0x45	; 69
    32b0:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    32b4:	dc 01       	movw	r26, r24
    32b6:	cb 01       	movw	r24, r22
    32b8:	89 ab       	std	Y+49, r24	; 0x31
    32ba:	9a ab       	std	Y+50, r25	; 0x32
    32bc:	ab ab       	std	Y+51, r26	; 0x33
    32be:	bc ab       	std	Y+52, r27	; 0x34
	if (__tmp < 1.0)
    32c0:	69 a9       	ldd	r22, Y+49	; 0x31
    32c2:	7a a9       	ldd	r23, Y+50	; 0x32
    32c4:	8b a9       	ldd	r24, Y+51	; 0x33
    32c6:	9c a9       	ldd	r25, Y+52	; 0x34
    32c8:	20 e0       	ldi	r18, 0x00	; 0
    32ca:	30 e0       	ldi	r19, 0x00	; 0
    32cc:	40 e8       	ldi	r20, 0x80	; 128
    32ce:	5f e3       	ldi	r21, 0x3F	; 63
    32d0:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    32d4:	88 23       	and	r24, r24
    32d6:	2c f4       	brge	.+10     	; 0x32e2 <main+0x300>
		__ticks = 1;
    32d8:	81 e0       	ldi	r24, 0x01	; 1
    32da:	90 e0       	ldi	r25, 0x00	; 0
    32dc:	98 ab       	std	Y+48, r25	; 0x30
    32de:	8f a7       	std	Y+47, r24	; 0x2f
    32e0:	3f c0       	rjmp	.+126    	; 0x3360 <main+0x37e>
	else if (__tmp > 65535)
    32e2:	69 a9       	ldd	r22, Y+49	; 0x31
    32e4:	7a a9       	ldd	r23, Y+50	; 0x32
    32e6:	8b a9       	ldd	r24, Y+51	; 0x33
    32e8:	9c a9       	ldd	r25, Y+52	; 0x34
    32ea:	20 e0       	ldi	r18, 0x00	; 0
    32ec:	3f ef       	ldi	r19, 0xFF	; 255
    32ee:	4f e7       	ldi	r20, 0x7F	; 127
    32f0:	57 e4       	ldi	r21, 0x47	; 71
    32f2:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    32f6:	18 16       	cp	r1, r24
    32f8:	4c f5       	brge	.+82     	; 0x334c <main+0x36a>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    32fa:	6d a9       	ldd	r22, Y+53	; 0x35
    32fc:	7e a9       	ldd	r23, Y+54	; 0x36
    32fe:	8f a9       	ldd	r24, Y+55	; 0x37
    3300:	98 ad       	ldd	r25, Y+56	; 0x38
    3302:	20 e0       	ldi	r18, 0x00	; 0
    3304:	30 e0       	ldi	r19, 0x00	; 0
    3306:	40 e2       	ldi	r20, 0x20	; 32
    3308:	51 e4       	ldi	r21, 0x41	; 65
    330a:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    330e:	dc 01       	movw	r26, r24
    3310:	cb 01       	movw	r24, r22
    3312:	bc 01       	movw	r22, r24
    3314:	cd 01       	movw	r24, r26
    3316:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    331a:	dc 01       	movw	r26, r24
    331c:	cb 01       	movw	r24, r22
    331e:	98 ab       	std	Y+48, r25	; 0x30
    3320:	8f a7       	std	Y+47, r24	; 0x2f
    3322:	0f c0       	rjmp	.+30     	; 0x3342 <main+0x360>
    3324:	80 e9       	ldi	r24, 0x90	; 144
    3326:	91 e0       	ldi	r25, 0x01	; 1
    3328:	9e a7       	std	Y+46, r25	; 0x2e
    332a:	8d a7       	std	Y+45, r24	; 0x2d
    332c:	8d a5       	ldd	r24, Y+45	; 0x2d
    332e:	9e a5       	ldd	r25, Y+46	; 0x2e
    3330:	01 97       	sbiw	r24, 0x01	; 1
    3332:	f1 f7       	brne	.-4      	; 0x3330 <main+0x34e>
    3334:	9e a7       	std	Y+46, r25	; 0x2e
    3336:	8d a7       	std	Y+45, r24	; 0x2d
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3338:	8f a5       	ldd	r24, Y+47	; 0x2f
    333a:	98 a9       	ldd	r25, Y+48	; 0x30
    333c:	01 97       	sbiw	r24, 0x01	; 1
    333e:	98 ab       	std	Y+48, r25	; 0x30
    3340:	8f a7       	std	Y+47, r24	; 0x2f
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3342:	8f a5       	ldd	r24, Y+47	; 0x2f
    3344:	98 a9       	ldd	r25, Y+48	; 0x30
    3346:	00 97       	sbiw	r24, 0x00	; 0
    3348:	69 f7       	brne	.-38     	; 0x3324 <main+0x342>
    334a:	14 c0       	rjmp	.+40     	; 0x3374 <main+0x392>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    334c:	69 a9       	ldd	r22, Y+49	; 0x31
    334e:	7a a9       	ldd	r23, Y+50	; 0x32
    3350:	8b a9       	ldd	r24, Y+51	; 0x33
    3352:	9c a9       	ldd	r25, Y+52	; 0x34
    3354:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    3358:	dc 01       	movw	r26, r24
    335a:	cb 01       	movw	r24, r22
    335c:	98 ab       	std	Y+48, r25	; 0x30
    335e:	8f a7       	std	Y+47, r24	; 0x2f
    3360:	8f a5       	ldd	r24, Y+47	; 0x2f
    3362:	98 a9       	ldd	r25, Y+48	; 0x30
    3364:	9c a7       	std	Y+44, r25	; 0x2c
    3366:	8b a7       	std	Y+43, r24	; 0x2b
    3368:	8b a5       	ldd	r24, Y+43	; 0x2b
    336a:	9c a5       	ldd	r25, Y+44	; 0x2c
    336c:	01 97       	sbiw	r24, 0x01	; 1
    336e:	f1 f7       	brne	.-4      	; 0x336c <main+0x38a>
    3370:	9c a7       	std	Y+44, r25	; 0x2c
    3372:	8b a7       	std	Y+43, r24	; 0x2b
		_delay_ms(500);
		H_Led_void_setOFF(RED_LED);
    3374:	80 e0       	ldi	r24, 0x00	; 0
    3376:	0e 94 2c 09 	call	0x1258	; 0x1258 <H_Led_void_setOFF>
    337a:	80 e0       	ldi	r24, 0x00	; 0
    337c:	90 e0       	ldi	r25, 0x00	; 0
    337e:	aa ef       	ldi	r26, 0xFA	; 250
    3380:	b3 e4       	ldi	r27, 0x43	; 67
    3382:	8f a3       	std	Y+39, r24	; 0x27
    3384:	98 a7       	std	Y+40, r25	; 0x28
    3386:	a9 a7       	std	Y+41, r26	; 0x29
    3388:	ba a7       	std	Y+42, r27	; 0x2a
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    338a:	6f a1       	ldd	r22, Y+39	; 0x27
    338c:	78 a5       	ldd	r23, Y+40	; 0x28
    338e:	89 a5       	ldd	r24, Y+41	; 0x29
    3390:	9a a5       	ldd	r25, Y+42	; 0x2a
    3392:	20 e0       	ldi	r18, 0x00	; 0
    3394:	30 e0       	ldi	r19, 0x00	; 0
    3396:	4a e7       	ldi	r20, 0x7A	; 122
    3398:	55 e4       	ldi	r21, 0x45	; 69
    339a:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    339e:	dc 01       	movw	r26, r24
    33a0:	cb 01       	movw	r24, r22
    33a2:	8b a3       	std	Y+35, r24	; 0x23
    33a4:	9c a3       	std	Y+36, r25	; 0x24
    33a6:	ad a3       	std	Y+37, r26	; 0x25
    33a8:	be a3       	std	Y+38, r27	; 0x26
	if (__tmp < 1.0)
    33aa:	6b a1       	ldd	r22, Y+35	; 0x23
    33ac:	7c a1       	ldd	r23, Y+36	; 0x24
    33ae:	8d a1       	ldd	r24, Y+37	; 0x25
    33b0:	9e a1       	ldd	r25, Y+38	; 0x26
    33b2:	20 e0       	ldi	r18, 0x00	; 0
    33b4:	30 e0       	ldi	r19, 0x00	; 0
    33b6:	40 e8       	ldi	r20, 0x80	; 128
    33b8:	5f e3       	ldi	r21, 0x3F	; 63
    33ba:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    33be:	88 23       	and	r24, r24
    33c0:	2c f4       	brge	.+10     	; 0x33cc <main+0x3ea>
		__ticks = 1;
    33c2:	81 e0       	ldi	r24, 0x01	; 1
    33c4:	90 e0       	ldi	r25, 0x00	; 0
    33c6:	9a a3       	std	Y+34, r25	; 0x22
    33c8:	89 a3       	std	Y+33, r24	; 0x21
    33ca:	3f c0       	rjmp	.+126    	; 0x344a <main+0x468>
	else if (__tmp > 65535)
    33cc:	6b a1       	ldd	r22, Y+35	; 0x23
    33ce:	7c a1       	ldd	r23, Y+36	; 0x24
    33d0:	8d a1       	ldd	r24, Y+37	; 0x25
    33d2:	9e a1       	ldd	r25, Y+38	; 0x26
    33d4:	20 e0       	ldi	r18, 0x00	; 0
    33d6:	3f ef       	ldi	r19, 0xFF	; 255
    33d8:	4f e7       	ldi	r20, 0x7F	; 127
    33da:	57 e4       	ldi	r21, 0x47	; 71
    33dc:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    33e0:	18 16       	cp	r1, r24
    33e2:	4c f5       	brge	.+82     	; 0x3436 <main+0x454>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    33e4:	6f a1       	ldd	r22, Y+39	; 0x27
    33e6:	78 a5       	ldd	r23, Y+40	; 0x28
    33e8:	89 a5       	ldd	r24, Y+41	; 0x29
    33ea:	9a a5       	ldd	r25, Y+42	; 0x2a
    33ec:	20 e0       	ldi	r18, 0x00	; 0
    33ee:	30 e0       	ldi	r19, 0x00	; 0
    33f0:	40 e2       	ldi	r20, 0x20	; 32
    33f2:	51 e4       	ldi	r21, 0x41	; 65
    33f4:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    33f8:	dc 01       	movw	r26, r24
    33fa:	cb 01       	movw	r24, r22
    33fc:	bc 01       	movw	r22, r24
    33fe:	cd 01       	movw	r24, r26
    3400:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    3404:	dc 01       	movw	r26, r24
    3406:	cb 01       	movw	r24, r22
    3408:	9a a3       	std	Y+34, r25	; 0x22
    340a:	89 a3       	std	Y+33, r24	; 0x21
    340c:	0f c0       	rjmp	.+30     	; 0x342c <main+0x44a>
    340e:	80 e9       	ldi	r24, 0x90	; 144
    3410:	91 e0       	ldi	r25, 0x01	; 1
    3412:	98 a3       	std	Y+32, r25	; 0x20
    3414:	8f 8f       	std	Y+31, r24	; 0x1f
    3416:	8f 8d       	ldd	r24, Y+31	; 0x1f
    3418:	98 a1       	ldd	r25, Y+32	; 0x20
    341a:	01 97       	sbiw	r24, 0x01	; 1
    341c:	f1 f7       	brne	.-4      	; 0x341a <main+0x438>
    341e:	98 a3       	std	Y+32, r25	; 0x20
    3420:	8f 8f       	std	Y+31, r24	; 0x1f
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3422:	89 a1       	ldd	r24, Y+33	; 0x21
    3424:	9a a1       	ldd	r25, Y+34	; 0x22
    3426:	01 97       	sbiw	r24, 0x01	; 1
    3428:	9a a3       	std	Y+34, r25	; 0x22
    342a:	89 a3       	std	Y+33, r24	; 0x21
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    342c:	89 a1       	ldd	r24, Y+33	; 0x21
    342e:	9a a1       	ldd	r25, Y+34	; 0x22
    3430:	00 97       	sbiw	r24, 0x00	; 0
    3432:	69 f7       	brne	.-38     	; 0x340e <main+0x42c>
    3434:	14 c0       	rjmp	.+40     	; 0x345e <main+0x47c>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3436:	6b a1       	ldd	r22, Y+35	; 0x23
    3438:	7c a1       	ldd	r23, Y+36	; 0x24
    343a:	8d a1       	ldd	r24, Y+37	; 0x25
    343c:	9e a1       	ldd	r25, Y+38	; 0x26
    343e:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    3442:	dc 01       	movw	r26, r24
    3444:	cb 01       	movw	r24, r22
    3446:	9a a3       	std	Y+34, r25	; 0x22
    3448:	89 a3       	std	Y+33, r24	; 0x21
    344a:	89 a1       	ldd	r24, Y+33	; 0x21
    344c:	9a a1       	ldd	r25, Y+34	; 0x22
    344e:	9e 8f       	std	Y+30, r25	; 0x1e
    3450:	8d 8f       	std	Y+29, r24	; 0x1d
    3452:	8d 8d       	ldd	r24, Y+29	; 0x1d
    3454:	9e 8d       	ldd	r25, Y+30	; 0x1e
    3456:	01 97       	sbiw	r24, 0x01	; 1
    3458:	f1 f7       	brne	.-4      	; 0x3456 <main+0x474>
    345a:	9e 8f       	std	Y+30, r25	; 0x1e
    345c:	8d 8f       	std	Y+29, r24	; 0x1d
		_delay_ms(500);
		H_Led_void_setON(GRN_LED);
    345e:	81 e0       	ldi	r24, 0x01	; 1
    3460:	0e 94 fb 08 	call	0x11f6	; 0x11f6 <H_Led_void_setON>
    3464:	80 e0       	ldi	r24, 0x00	; 0
    3466:	90 e0       	ldi	r25, 0x00	; 0
    3468:	aa ef       	ldi	r26, 0xFA	; 250
    346a:	b3 e4       	ldi	r27, 0x43	; 67
    346c:	89 8f       	std	Y+25, r24	; 0x19
    346e:	9a 8f       	std	Y+26, r25	; 0x1a
    3470:	ab 8f       	std	Y+27, r26	; 0x1b
    3472:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    3474:	69 8d       	ldd	r22, Y+25	; 0x19
    3476:	7a 8d       	ldd	r23, Y+26	; 0x1a
    3478:	8b 8d       	ldd	r24, Y+27	; 0x1b
    347a:	9c 8d       	ldd	r25, Y+28	; 0x1c
    347c:	20 e0       	ldi	r18, 0x00	; 0
    347e:	30 e0       	ldi	r19, 0x00	; 0
    3480:	4a e7       	ldi	r20, 0x7A	; 122
    3482:	55 e4       	ldi	r21, 0x45	; 69
    3484:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    3488:	dc 01       	movw	r26, r24
    348a:	cb 01       	movw	r24, r22
    348c:	8d 8b       	std	Y+21, r24	; 0x15
    348e:	9e 8b       	std	Y+22, r25	; 0x16
    3490:	af 8b       	std	Y+23, r26	; 0x17
    3492:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    3494:	6d 89       	ldd	r22, Y+21	; 0x15
    3496:	7e 89       	ldd	r23, Y+22	; 0x16
    3498:	8f 89       	ldd	r24, Y+23	; 0x17
    349a:	98 8d       	ldd	r25, Y+24	; 0x18
    349c:	20 e0       	ldi	r18, 0x00	; 0
    349e:	30 e0       	ldi	r19, 0x00	; 0
    34a0:	40 e8       	ldi	r20, 0x80	; 128
    34a2:	5f e3       	ldi	r21, 0x3F	; 63
    34a4:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    34a8:	88 23       	and	r24, r24
    34aa:	2c f4       	brge	.+10     	; 0x34b6 <main+0x4d4>
		__ticks = 1;
    34ac:	81 e0       	ldi	r24, 0x01	; 1
    34ae:	90 e0       	ldi	r25, 0x00	; 0
    34b0:	9c 8b       	std	Y+20, r25	; 0x14
    34b2:	8b 8b       	std	Y+19, r24	; 0x13
    34b4:	3f c0       	rjmp	.+126    	; 0x3534 <main+0x552>
	else if (__tmp > 65535)
    34b6:	6d 89       	ldd	r22, Y+21	; 0x15
    34b8:	7e 89       	ldd	r23, Y+22	; 0x16
    34ba:	8f 89       	ldd	r24, Y+23	; 0x17
    34bc:	98 8d       	ldd	r25, Y+24	; 0x18
    34be:	20 e0       	ldi	r18, 0x00	; 0
    34c0:	3f ef       	ldi	r19, 0xFF	; 255
    34c2:	4f e7       	ldi	r20, 0x7F	; 127
    34c4:	57 e4       	ldi	r21, 0x47	; 71
    34c6:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    34ca:	18 16       	cp	r1, r24
    34cc:	4c f5       	brge	.+82     	; 0x3520 <main+0x53e>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    34ce:	69 8d       	ldd	r22, Y+25	; 0x19
    34d0:	7a 8d       	ldd	r23, Y+26	; 0x1a
    34d2:	8b 8d       	ldd	r24, Y+27	; 0x1b
    34d4:	9c 8d       	ldd	r25, Y+28	; 0x1c
    34d6:	20 e0       	ldi	r18, 0x00	; 0
    34d8:	30 e0       	ldi	r19, 0x00	; 0
    34da:	40 e2       	ldi	r20, 0x20	; 32
    34dc:	51 e4       	ldi	r21, 0x41	; 65
    34de:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    34e2:	dc 01       	movw	r26, r24
    34e4:	cb 01       	movw	r24, r22
    34e6:	bc 01       	movw	r22, r24
    34e8:	cd 01       	movw	r24, r26
    34ea:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    34ee:	dc 01       	movw	r26, r24
    34f0:	cb 01       	movw	r24, r22
    34f2:	9c 8b       	std	Y+20, r25	; 0x14
    34f4:	8b 8b       	std	Y+19, r24	; 0x13
    34f6:	0f c0       	rjmp	.+30     	; 0x3516 <main+0x534>
    34f8:	80 e9       	ldi	r24, 0x90	; 144
    34fa:	91 e0       	ldi	r25, 0x01	; 1
    34fc:	9a 8b       	std	Y+18, r25	; 0x12
    34fe:	89 8b       	std	Y+17, r24	; 0x11
    3500:	89 89       	ldd	r24, Y+17	; 0x11
    3502:	9a 89       	ldd	r25, Y+18	; 0x12
    3504:	01 97       	sbiw	r24, 0x01	; 1
    3506:	f1 f7       	brne	.-4      	; 0x3504 <main+0x522>
    3508:	9a 8b       	std	Y+18, r25	; 0x12
    350a:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    350c:	8b 89       	ldd	r24, Y+19	; 0x13
    350e:	9c 89       	ldd	r25, Y+20	; 0x14
    3510:	01 97       	sbiw	r24, 0x01	; 1
    3512:	9c 8b       	std	Y+20, r25	; 0x14
    3514:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3516:	8b 89       	ldd	r24, Y+19	; 0x13
    3518:	9c 89       	ldd	r25, Y+20	; 0x14
    351a:	00 97       	sbiw	r24, 0x00	; 0
    351c:	69 f7       	brne	.-38     	; 0x34f8 <main+0x516>
    351e:	14 c0       	rjmp	.+40     	; 0x3548 <main+0x566>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3520:	6d 89       	ldd	r22, Y+21	; 0x15
    3522:	7e 89       	ldd	r23, Y+22	; 0x16
    3524:	8f 89       	ldd	r24, Y+23	; 0x17
    3526:	98 8d       	ldd	r25, Y+24	; 0x18
    3528:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    352c:	dc 01       	movw	r26, r24
    352e:	cb 01       	movw	r24, r22
    3530:	9c 8b       	std	Y+20, r25	; 0x14
    3532:	8b 8b       	std	Y+19, r24	; 0x13
    3534:	8b 89       	ldd	r24, Y+19	; 0x13
    3536:	9c 89       	ldd	r25, Y+20	; 0x14
    3538:	98 8b       	std	Y+16, r25	; 0x10
    353a:	8f 87       	std	Y+15, r24	; 0x0f
    353c:	8f 85       	ldd	r24, Y+15	; 0x0f
    353e:	98 89       	ldd	r25, Y+16	; 0x10
    3540:	01 97       	sbiw	r24, 0x01	; 1
    3542:	f1 f7       	brne	.-4      	; 0x3540 <main+0x55e>
    3544:	98 8b       	std	Y+16, r25	; 0x10
    3546:	8f 87       	std	Y+15, r24	; 0x0f
		_delay_ms(500);
		H_Led_void_setOFF(GRN_LED);
    3548:	81 e0       	ldi	r24, 0x01	; 1
    354a:	0e 94 2c 09 	call	0x1258	; 0x1258 <H_Led_void_setOFF>
    354e:	80 e0       	ldi	r24, 0x00	; 0
    3550:	90 e0       	ldi	r25, 0x00	; 0
    3552:	aa ef       	ldi	r26, 0xFA	; 250
    3554:	b3 e4       	ldi	r27, 0x43	; 67
    3556:	8b 87       	std	Y+11, r24	; 0x0b
    3558:	9c 87       	std	Y+12, r25	; 0x0c
    355a:	ad 87       	std	Y+13, r26	; 0x0d
    355c:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    355e:	6b 85       	ldd	r22, Y+11	; 0x0b
    3560:	7c 85       	ldd	r23, Y+12	; 0x0c
    3562:	8d 85       	ldd	r24, Y+13	; 0x0d
    3564:	9e 85       	ldd	r25, Y+14	; 0x0e
    3566:	20 e0       	ldi	r18, 0x00	; 0
    3568:	30 e0       	ldi	r19, 0x00	; 0
    356a:	4a e7       	ldi	r20, 0x7A	; 122
    356c:	55 e4       	ldi	r21, 0x45	; 69
    356e:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    3572:	dc 01       	movw	r26, r24
    3574:	cb 01       	movw	r24, r22
    3576:	8f 83       	std	Y+7, r24	; 0x07
    3578:	98 87       	std	Y+8, r25	; 0x08
    357a:	a9 87       	std	Y+9, r26	; 0x09
    357c:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    357e:	6f 81       	ldd	r22, Y+7	; 0x07
    3580:	78 85       	ldd	r23, Y+8	; 0x08
    3582:	89 85       	ldd	r24, Y+9	; 0x09
    3584:	9a 85       	ldd	r25, Y+10	; 0x0a
    3586:	20 e0       	ldi	r18, 0x00	; 0
    3588:	30 e0       	ldi	r19, 0x00	; 0
    358a:	40 e8       	ldi	r20, 0x80	; 128
    358c:	5f e3       	ldi	r21, 0x3F	; 63
    358e:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    3592:	88 23       	and	r24, r24
    3594:	2c f4       	brge	.+10     	; 0x35a0 <main+0x5be>
		__ticks = 1;
    3596:	81 e0       	ldi	r24, 0x01	; 1
    3598:	90 e0       	ldi	r25, 0x00	; 0
    359a:	9e 83       	std	Y+6, r25	; 0x06
    359c:	8d 83       	std	Y+5, r24	; 0x05
    359e:	3f c0       	rjmp	.+126    	; 0x361e <main+0x63c>
	else if (__tmp > 65535)
    35a0:	6f 81       	ldd	r22, Y+7	; 0x07
    35a2:	78 85       	ldd	r23, Y+8	; 0x08
    35a4:	89 85       	ldd	r24, Y+9	; 0x09
    35a6:	9a 85       	ldd	r25, Y+10	; 0x0a
    35a8:	20 e0       	ldi	r18, 0x00	; 0
    35aa:	3f ef       	ldi	r19, 0xFF	; 255
    35ac:	4f e7       	ldi	r20, 0x7F	; 127
    35ae:	57 e4       	ldi	r21, 0x47	; 71
    35b0:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    35b4:	18 16       	cp	r1, r24
    35b6:	4c f5       	brge	.+82     	; 0x360a <main+0x628>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    35b8:	6b 85       	ldd	r22, Y+11	; 0x0b
    35ba:	7c 85       	ldd	r23, Y+12	; 0x0c
    35bc:	8d 85       	ldd	r24, Y+13	; 0x0d
    35be:	9e 85       	ldd	r25, Y+14	; 0x0e
    35c0:	20 e0       	ldi	r18, 0x00	; 0
    35c2:	30 e0       	ldi	r19, 0x00	; 0
    35c4:	40 e2       	ldi	r20, 0x20	; 32
    35c6:	51 e4       	ldi	r21, 0x41	; 65
    35c8:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    35cc:	dc 01       	movw	r26, r24
    35ce:	cb 01       	movw	r24, r22
    35d0:	bc 01       	movw	r22, r24
    35d2:	cd 01       	movw	r24, r26
    35d4:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    35d8:	dc 01       	movw	r26, r24
    35da:	cb 01       	movw	r24, r22
    35dc:	9e 83       	std	Y+6, r25	; 0x06
    35de:	8d 83       	std	Y+5, r24	; 0x05
    35e0:	0f c0       	rjmp	.+30     	; 0x3600 <main+0x61e>
    35e2:	80 e9       	ldi	r24, 0x90	; 144
    35e4:	91 e0       	ldi	r25, 0x01	; 1
    35e6:	9c 83       	std	Y+4, r25	; 0x04
    35e8:	8b 83       	std	Y+3, r24	; 0x03
    35ea:	8b 81       	ldd	r24, Y+3	; 0x03
    35ec:	9c 81       	ldd	r25, Y+4	; 0x04
    35ee:	01 97       	sbiw	r24, 0x01	; 1
    35f0:	f1 f7       	brne	.-4      	; 0x35ee <main+0x60c>
    35f2:	9c 83       	std	Y+4, r25	; 0x04
    35f4:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    35f6:	8d 81       	ldd	r24, Y+5	; 0x05
    35f8:	9e 81       	ldd	r25, Y+6	; 0x06
    35fa:	01 97       	sbiw	r24, 0x01	; 1
    35fc:	9e 83       	std	Y+6, r25	; 0x06
    35fe:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3600:	8d 81       	ldd	r24, Y+5	; 0x05
    3602:	9e 81       	ldd	r25, Y+6	; 0x06
    3604:	00 97       	sbiw	r24, 0x00	; 0
    3606:	69 f7       	brne	.-38     	; 0x35e2 <main+0x600>
    3608:	02 cd       	rjmp	.-1532   	; 0x300e <main+0x2c>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    360a:	6f 81       	ldd	r22, Y+7	; 0x07
    360c:	78 85       	ldd	r23, Y+8	; 0x08
    360e:	89 85       	ldd	r24, Y+9	; 0x09
    3610:	9a 85       	ldd	r25, Y+10	; 0x0a
    3612:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    3616:	dc 01       	movw	r26, r24
    3618:	cb 01       	movw	r24, r22
    361a:	9e 83       	std	Y+6, r25	; 0x06
    361c:	8d 83       	std	Y+5, r24	; 0x05
    361e:	8d 81       	ldd	r24, Y+5	; 0x05
    3620:	9e 81       	ldd	r25, Y+6	; 0x06
    3622:	9a 83       	std	Y+2, r25	; 0x02
    3624:	89 83       	std	Y+1, r24	; 0x01
    3626:	89 81       	ldd	r24, Y+1	; 0x01
    3628:	9a 81       	ldd	r25, Y+2	; 0x02
    362a:	01 97       	sbiw	r24, 0x01	; 1
    362c:	f1 f7       	brne	.-4      	; 0x362a <main+0x648>
    362e:	9a 83       	std	Y+2, r25	; 0x02
    3630:	89 83       	std	Y+1, r24	; 0x01
    3632:	ed cc       	rjmp	.-1574   	; 0x300e <main+0x2c>

00003634 <__udivmodqi4>:
    3634:	99 1b       	sub	r25, r25
    3636:	79 e0       	ldi	r23, 0x09	; 9
    3638:	04 c0       	rjmp	.+8      	; 0x3642 <__udivmodqi4_ep>

0000363a <__udivmodqi4_loop>:
    363a:	99 1f       	adc	r25, r25
    363c:	96 17       	cp	r25, r22
    363e:	08 f0       	brcs	.+2      	; 0x3642 <__udivmodqi4_ep>
    3640:	96 1b       	sub	r25, r22

00003642 <__udivmodqi4_ep>:
    3642:	88 1f       	adc	r24, r24
    3644:	7a 95       	dec	r23
    3646:	c9 f7       	brne	.-14     	; 0x363a <__udivmodqi4_loop>
    3648:	80 95       	com	r24
    364a:	08 95       	ret

0000364c <__prologue_saves__>:
    364c:	2f 92       	push	r2
    364e:	3f 92       	push	r3
    3650:	4f 92       	push	r4
    3652:	5f 92       	push	r5
    3654:	6f 92       	push	r6
    3656:	7f 92       	push	r7
    3658:	8f 92       	push	r8
    365a:	9f 92       	push	r9
    365c:	af 92       	push	r10
    365e:	bf 92       	push	r11
    3660:	cf 92       	push	r12
    3662:	df 92       	push	r13
    3664:	ef 92       	push	r14
    3666:	ff 92       	push	r15
    3668:	0f 93       	push	r16
    366a:	1f 93       	push	r17
    366c:	cf 93       	push	r28
    366e:	df 93       	push	r29
    3670:	cd b7       	in	r28, 0x3d	; 61
    3672:	de b7       	in	r29, 0x3e	; 62
    3674:	ca 1b       	sub	r28, r26
    3676:	db 0b       	sbc	r29, r27
    3678:	0f b6       	in	r0, 0x3f	; 63
    367a:	f8 94       	cli
    367c:	de bf       	out	0x3e, r29	; 62
    367e:	0f be       	out	0x3f, r0	; 63
    3680:	cd bf       	out	0x3d, r28	; 61
    3682:	09 94       	ijmp

00003684 <__epilogue_restores__>:
    3684:	2a 88       	ldd	r2, Y+18	; 0x12
    3686:	39 88       	ldd	r3, Y+17	; 0x11
    3688:	48 88       	ldd	r4, Y+16	; 0x10
    368a:	5f 84       	ldd	r5, Y+15	; 0x0f
    368c:	6e 84       	ldd	r6, Y+14	; 0x0e
    368e:	7d 84       	ldd	r7, Y+13	; 0x0d
    3690:	8c 84       	ldd	r8, Y+12	; 0x0c
    3692:	9b 84       	ldd	r9, Y+11	; 0x0b
    3694:	aa 84       	ldd	r10, Y+10	; 0x0a
    3696:	b9 84       	ldd	r11, Y+9	; 0x09
    3698:	c8 84       	ldd	r12, Y+8	; 0x08
    369a:	df 80       	ldd	r13, Y+7	; 0x07
    369c:	ee 80       	ldd	r14, Y+6	; 0x06
    369e:	fd 80       	ldd	r15, Y+5	; 0x05
    36a0:	0c 81       	ldd	r16, Y+4	; 0x04
    36a2:	1b 81       	ldd	r17, Y+3	; 0x03
    36a4:	aa 81       	ldd	r26, Y+2	; 0x02
    36a6:	b9 81       	ldd	r27, Y+1	; 0x01
    36a8:	ce 0f       	add	r28, r30
    36aa:	d1 1d       	adc	r29, r1
    36ac:	0f b6       	in	r0, 0x3f	; 63
    36ae:	f8 94       	cli
    36b0:	de bf       	out	0x3e, r29	; 62
    36b2:	0f be       	out	0x3f, r0	; 63
    36b4:	cd bf       	out	0x3d, r28	; 61
    36b6:	ed 01       	movw	r28, r26
    36b8:	08 95       	ret

000036ba <_exit>:
    36ba:	f8 94       	cli

000036bc <__stop_program>:
    36bc:	ff cf       	rjmp	.-2      	; 0x36bc <__stop_program>
